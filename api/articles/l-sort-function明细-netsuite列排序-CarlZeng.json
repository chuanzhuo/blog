{"title":"l_sort function明细 netsuite列排序-CarlZeng","slug":"l-sort-function明细-netsuite列排序-CarlZeng","date":"2008-10-07T15:51:00.000Z","updated":"2023-10-08T13:38:52.659Z","comments":true,"path":"api/articles/l-sort-function明细-netsuite列排序-CarlZeng.json","excerpt":"function l_sort(col,coltype,hier,hiercol,mach,colname,sAlternateSortType)153{154 // this is used in cases where a column needs to be sorted by something different than it's type/value155\tif(sAltern...","covers":null,"content":"<p>function l_sort(col,coltype,hier,hiercol,mach,colname,sAlternateSortType)153{154 &#x2F;&#x2F; this is used in cases where a column needs to be sorted by something different than it’s type&#x2F;value155 if(sAltern…</p>\n<!-- more -->\n<p>function l_sort(col,coltype,hier,hiercol,mach,colname,sAlternateSortType)</p>\n<p>153{</p>\n<p>154 &#x2F;&#x2F; this is used in cases where a column needs to be sorted by something different than it’s type&#x2F;value</p>\n<p>155 if(sAlternateSortType !&#x3D; null)</p>\n<p>156 coltype &#x3D; sAlternateSortType;</p>\n<p>157 var i &#x3D; 0, node,node2, numRows &#x3D; 0, rnode, col2 &#x3D; -1, col2type;</p>\n<p>158 var elems &#x3D; new Array(), elem, cols;</p>\n<p>159 var dir_up &#x3D; true, dir_up2;</p>\n<p>160 var ordered_mach &#x3D; false;</p>\n<p>161 if (mach &#x3D;&#x3D; ‘’ || mach &#x3D;&#x3D; null) mach &#x3D; ‘’;</p>\n<p>162 else if (document.forms[0].elements[mach+’sortidx’] !&#x3D; null)</p>\n<p>163 {</p>\n<p>164 col2 &#x3D; document.forms[0].elements[mach+’sortidx’].value;</p>\n<p>165 if (col2 &#x3D;&#x3D; col)</p>\n<p>166 col2 &#x3D; -1;</p>\n<p>167 else</p>\n<p>168 {</p>\n<p>169 col2type &#x3D; document.forms[0].elements[mach+’sorttype’].value;</p>\n<p>170 dir_up2 &#x3D; document.forms[0].elements[mach+’sortdir’].value &#x3D;&#x3D; “UP”;</p>\n<p>171 }</p>\n<p>172 ordered_mach &#x3D; hasEncodedField(mach,mach+”seqnum”);</p>\n<p>173 }</p>\n<p>174</p>\n<p>175 node &#x3D; l_id(mach+’dir’+col);</p>\n<p>176 if (node.src.indexOf(‘nlup.gif’) !&#x3D; -1)</p>\n<p>177 dir_up &#x3D; false;</p>\n<p>178 node.src &#x3D; dir_up ? ‘&#x2F;images&#x2F;nav&#x2F;nlup.gif’ : ‘&#x2F;images&#x2F;nav&#x2F;nldown.gif’;</p>\n<p>179 node2 &#x3D; l_id(mach+’header’);</p>\n<p>180 for (idx&#x3D;0; idx &lt; node2.cells.length; idx++)</p>\n<p>181 {</p>\n<p>182 if (idx &#x3D;&#x3D; col)</p>\n<p>183 continue;</p>\n<p>184 node &#x3D; l_id(mach+’dir’+idx);</p>\n<p>185 if (node !&#x3D; undefined)</p>\n<p>186 node.src &#x3D; ‘&#x2F;images&#x2F;nav&#x2F;nlempty.gif’;</p>\n<p>187 }</p>\n<p>188</p>\n<p>189 while (true)</p>\n<p>190 {</p>\n<p>191 node &#x3D; l_id(mach+’row’+i);</p>\n<p>192 if (node !&#x3D; undefined)</p>\n<p>193 {</p>\n<p>194 &#x2F;&#x2F; when we are sorting by a different type&#x2F;value than the cell contiains, that value will</p>\n<p>195 &#x2F;&#x2F; exist in a hidden span - which will always be the first child within the <TD></p>\n<p>196 if(sAlternateSortType !&#x3D; null)</p>\n<p>197 elem &#x3D; node.cells[col].firstChild.innerHTML;</p>\n<p>198 else</p>\n<p>199 elem &#x3D; node.cells[col].innerHTML;</p>\n<p>200 cols &#x3D; new Array();</p>\n<p>201</p>\n<p>202 for (idx&#x3D;0; idx &lt; node.cells.length; idx++)</p>\n<p>203 {</p>\n<p>204 cols[idx] &#x3D; node.cells[idx].innerHTML;</p>\n<p>205</p>\n<p>206 if(node.cells[idx].firstChild &amp;&amp; node.cells[idx].firstChild.nodeName &#x3D;&#x3D; ‘INPUT’ &amp;&amp; node.cells[idx].firstChild.type &#x3D;&#x3D; ‘checkbox’)</p>\n<p>207 {</p>\n<p>208 &#x2F;&#x2F; If a checkbox is checked now, but was not checked the last time we drew it, add CHECKED to the input tag</p>\n<p>209 if(node.cells[idx].firstChild.checked &amp;&amp; node.cells[idx].innerHTML.indexOf(‘checked’) &lt; 0)</p>\n<p>210 cols[idx] &#x3D; cols[idx].substring(0,cols[idx].length-1) + ‘ CHECKED&gt;’;</p>\n<p>211 &#x2F;&#x2F; else if a checkbox is NOT checked, but it was when we drew it, remove CHECKED from the input tag</p>\n<p>212 else if(!node.cells[idx].firstChild.checked &amp;&amp; node.cells[idx].innerHTML.indexOf(‘checked’) &gt;&#x3D; 0)</p>\n<p>213 cols[idx] &#x3D; cols[idx].substring(0,cols[idx].indexOf(‘checked’)) + ‘&gt;’;</p>\n<p>214 }</p>\n<p>215</p>\n<p>216 }</p>\n<p>217</p>\n<p>218</p>\n<p>219 if (hier)</p>\n<p>220 {</p>\n<p>221 hierfld &#x3D; l_elem(‘_hier’+i);</p>\n<p>222 if (hiercol)</p>\n<p>223 elem &#x3D; hierfld.value;</p>\n<p>224 elems[i] &#x3D; new l_node(elem.toLowerCase(),cols,coltype,dir_up,hierfld.value);</p>\n<p>225 }</p>\n<p>226 else if (col2 !&#x3D; -1)</p>\n<p>227 elems[i] &#x3D; new l_node(elem.toLowerCase(),cols,coltype,dir_up,null,node.cells[col2].innerHTML,col2type,dir_up2, ordered_mach ? findEncodedValue(mach, mach+”seqnum”, i+1) : -1);</p>\n<p>228 else</p>\n<p>229 elems[i] &#x3D; new l_node(elem.toLowerCase(),cols,coltype,dir_up,null,null,null,null,ordered_mach ? findEncodedValue(mach, mach+”seqnum”, i+1) : -1);</p>\n<p>230 i++;</p>\n<p>231 }</p>\n<p>232 else</p>\n<p>233 break;</p>\n<p>234 }</p>\n<p>235</p>\n<p>236 numRows &#x3D; i;</p>\n<p>237 i &#x3D; 0;</p>\n<p>238</p>\n<p>239 elems.sort(l_sortnodes);</p>\n<p>240</p>\n<p>241 while (i &lt; numRows)</p>\n<p>242 {</p>\n<p>243 node &#x3D; l_id(mach+’row’+i);</p>\n<p>244 rnode &#x3D; elems[i];</p>\n<p>245 cols &#x3D; rnode.row;</p>\n<p>246</p>\n<p>247 for (idx&#x3D;0; idx &lt; node.cells.length; idx++)</p>\n<p>248 node.cells[idx].innerHTML &#x3D; cols[idx];</p>\n<p>249</p>\n<p>250 if (hier)</p>\n<p>251 {</p>\n<p>252 hierfld &#x3D; l_elem(‘_hier’+i);</p>\n<p>253 hierfld.value &#x3D; rnode.hier;</p>\n<p>254 }</p>\n<p>255 if (ordered_mach)</p>\n<p>256 setEncodedValue(mach,rnode.linenum,mach+’seqnum’,i+1);</p>\n<p>257 i++;</p>\n<p>258 }</p>\n<p>259 l_saveprefs(mach, col, colname, coltype, dir_up);</p>\n<p>260}</p>\n<p>261</p>\n<p>262function l_sortprefs(col,coltype,mach,colname)</p>\n<p>263{</p>\n<p>264 var dir_up &#x3D; true;</p>\n<p>265 node &#x3D; l_id(mach+’dir’+col);</p>\n<p>266 if (node.src.indexOf(‘nlup.gif’) !&#x3D; -1)</p>\n<p>267 dir_up &#x3D; false;</p>\n<p>268 l_saveprefs(mach, col, colname, coltype, dir_up);</p>\n<p>269}</p>\n<p>270</p>\n","more":"<p>function l_sort(col,coltype,hier,hiercol,mach,colname,sAlternateSortType)153{154 &#x2F;&#x2F; this is used in cases where a column needs to be sorted by something different than it’s type&#x2F;value155 if(sAltern…</p>\n<!-- more -->\n<p>function l_sort(col,coltype,hier,hiercol,mach,colname,sAlternateSortType)</p>\n<p>153{</p>\n<p>154 &#x2F;&#x2F; this is used in cases where a column needs to be sorted by something different than it’s type&#x2F;value</p>\n<p>155 if(sAlternateSortType !&#x3D; null)</p>\n<p>156 coltype &#x3D; sAlternateSortType;</p>\n<p>157 var i &#x3D; 0, node,node2, numRows &#x3D; 0, rnode, col2 &#x3D; -1, col2type;</p>\n<p>158 var elems &#x3D; new Array(), elem, cols;</p>\n<p>159 var dir_up &#x3D; true, dir_up2;</p>\n<p>160 var ordered_mach &#x3D; false;</p>\n<p>161 if (mach &#x3D;&#x3D; ‘’ || mach &#x3D;&#x3D; null) mach &#x3D; ‘’;</p>\n<p>162 else if (document.forms[0].elements[mach+’sortidx’] !&#x3D; null)</p>\n<p>163 {</p>\n<p>164 col2 &#x3D; document.forms[0].elements[mach+’sortidx’].value;</p>\n<p>165 if (col2 &#x3D;&#x3D; col)</p>\n<p>166 col2 &#x3D; -1;</p>\n<p>167 else</p>\n<p>168 {</p>\n<p>169 col2type &#x3D; document.forms[0].elements[mach+’sorttype’].value;</p>\n<p>170 dir_up2 &#x3D; document.forms[0].elements[mach+’sortdir’].value &#x3D;&#x3D; “UP”;</p>\n<p>171 }</p>\n<p>172 ordered_mach &#x3D; hasEncodedField(mach,mach+”seqnum”);</p>\n<p>173 }</p>\n<p>174</p>\n<p>175 node &#x3D; l_id(mach+’dir’+col);</p>\n<p>176 if (node.src.indexOf(‘nlup.gif’) !&#x3D; -1)</p>\n<p>177 dir_up &#x3D; false;</p>\n<p>178 node.src &#x3D; dir_up ? ‘&#x2F;images&#x2F;nav&#x2F;nlup.gif’ : ‘&#x2F;images&#x2F;nav&#x2F;nldown.gif’;</p>\n<p>179 node2 &#x3D; l_id(mach+’header’);</p>\n<p>180 for (idx&#x3D;0; idx &lt; node2.cells.length; idx++)</p>\n<p>181 {</p>\n<p>182 if (idx &#x3D;&#x3D; col)</p>\n<p>183 continue;</p>\n<p>184 node &#x3D; l_id(mach+’dir’+idx);</p>\n<p>185 if (node !&#x3D; undefined)</p>\n<p>186 node.src &#x3D; ‘&#x2F;images&#x2F;nav&#x2F;nlempty.gif’;</p>\n<p>187 }</p>\n<p>188</p>\n<p>189 while (true)</p>\n<p>190 {</p>\n<p>191 node &#x3D; l_id(mach+’row’+i);</p>\n<p>192 if (node !&#x3D; undefined)</p>\n<p>193 {</p>\n<p>194 &#x2F;&#x2F; when we are sorting by a different type&#x2F;value than the cell contiains, that value will</p>\n<p>195 &#x2F;&#x2F; exist in a hidden span - which will always be the first child within the <TD></p>\n<p>196 if(sAlternateSortType !&#x3D; null)</p>\n<p>197 elem &#x3D; node.cells[col].firstChild.innerHTML;</p>\n<p>198 else</p>\n<p>199 elem &#x3D; node.cells[col].innerHTML;</p>\n<p>200 cols &#x3D; new Array();</p>\n<p>201</p>\n<p>202 for (idx&#x3D;0; idx &lt; node.cells.length; idx++)</p>\n<p>203 {</p>\n<p>204 cols[idx] &#x3D; node.cells[idx].innerHTML;</p>\n<p>205</p>\n<p>206 if(node.cells[idx].firstChild &amp;&amp; node.cells[idx].firstChild.nodeName &#x3D;&#x3D; ‘INPUT’ &amp;&amp; node.cells[idx].firstChild.type &#x3D;&#x3D; ‘checkbox’)</p>\n<p>207 {</p>\n<p>208 &#x2F;&#x2F; If a checkbox is checked now, but was not checked the last time we drew it, add CHECKED to the input tag</p>\n<p>209 if(node.cells[idx].firstChild.checked &amp;&amp; node.cells[idx].innerHTML.indexOf(‘checked’) &lt; 0)</p>\n<p>210 cols[idx] &#x3D; cols[idx].substring(0,cols[idx].length-1) + ‘ CHECKED&gt;’;</p>\n<p>211 &#x2F;&#x2F; else if a checkbox is NOT checked, but it was when we drew it, remove CHECKED from the input tag</p>\n<p>212 else if(!node.cells[idx].firstChild.checked &amp;&amp; node.cells[idx].innerHTML.indexOf(‘checked’) &gt;&#x3D; 0)</p>\n<p>213 cols[idx] &#x3D; cols[idx].substring(0,cols[idx].indexOf(‘checked’)) + ‘&gt;’;</p>\n<p>214 }</p>\n<p>215</p>\n<p>216 }</p>\n<p>217</p>\n<p>218</p>\n<p>219 if (hier)</p>\n<p>220 {</p>\n<p>221 hierfld &#x3D; l_elem(‘_hier’+i);</p>\n<p>222 if (hiercol)</p>\n<p>223 elem &#x3D; hierfld.value;</p>\n<p>224 elems[i] &#x3D; new l_node(elem.toLowerCase(),cols,coltype,dir_up,hierfld.value);</p>\n<p>225 }</p>\n<p>226 else if (col2 !&#x3D; -1)</p>\n<p>227 elems[i] &#x3D; new l_node(elem.toLowerCase(),cols,coltype,dir_up,null,node.cells[col2].innerHTML,col2type,dir_up2, ordered_mach ? findEncodedValue(mach, mach+”seqnum”, i+1) : -1);</p>\n<p>228 else</p>\n<p>229 elems[i] &#x3D; new l_node(elem.toLowerCase(),cols,coltype,dir_up,null,null,null,null,ordered_mach ? findEncodedValue(mach, mach+”seqnum”, i+1) : -1);</p>\n<p>230 i++;</p>\n<p>231 }</p>\n<p>232 else</p>\n<p>233 break;</p>\n<p>234 }</p>\n<p>235</p>\n<p>236 numRows &#x3D; i;</p>\n<p>237 i &#x3D; 0;</p>\n<p>238</p>\n<p>239 elems.sort(l_sortnodes);</p>\n<p>240</p>\n<p>241 while (i &lt; numRows)</p>\n<p>242 {</p>\n<p>243 node &#x3D; l_id(mach+’row’+i);</p>\n<p>244 rnode &#x3D; elems[i];</p>\n<p>245 cols &#x3D; rnode.row;</p>\n<p>246</p>\n<p>247 for (idx&#x3D;0; idx &lt; node.cells.length; idx++)</p>\n<p>248 node.cells[idx].innerHTML &#x3D; cols[idx];</p>\n<p>249</p>\n<p>250 if (hier)</p>\n<p>251 {</p>\n<p>252 hierfld &#x3D; l_elem(‘_hier’+i);</p>\n<p>253 hierfld.value &#x3D; rnode.hier;</p>\n<p>254 }</p>\n<p>255 if (ordered_mach)</p>\n<p>256 setEncodedValue(mach,rnode.linenum,mach+’seqnum’,i+1);</p>\n<p>257 i++;</p>\n<p>258 }</p>\n<p>259 l_saveprefs(mach, col, colname, coltype, dir_up);</p>\n<p>260}</p>\n<p>261</p>\n<p>262function l_sortprefs(col,coltype,mach,colname)</p>\n<p>263{</p>\n<p>264 var dir_up &#x3D; true;</p>\n<p>265 node &#x3D; l_id(mach+’dir’+col);</p>\n<p>266 if (node.src.indexOf(‘nlup.gif’) !&#x3D; -1)</p>\n<p>267 dir_up &#x3D; false;</p>\n<p>268 l_saveprefs(mach, col, colname, coltype, dir_up);</p>\n<p>269}</p>\n<p>270</p>\n","categories":[{"name":"NetSuite","path":"api/categories/NetSuite.json"}],"tags":[{"name":"NetSuite","path":"api/tags/NetSuite.json"}]}