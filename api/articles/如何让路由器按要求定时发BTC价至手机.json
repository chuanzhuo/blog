{"title":"计划任务定时任务crontab - 如何让路由器按要求定时发BTC价至手机","slug":"如何让路由器按要求定时发BTC价至手机","date":"2023-12-02T02:28:05.000Z","updated":"2024-10-25T13:16:40.667Z","comments":true,"path":"api/articles/如何让路由器按要求定时发BTC价至手机.json","excerpt":" [Figure] shell实现让路由器按要求定时发BTC价至手机","covers":["https://www.evernote.com/shard/s122/sh/2183c5e6-6ae1-4039-9ec9-b7894da92ebc/S2ODzlF12bRw4LpRYBq-wlwUxDdJAzlOE7L3qvkCHYv1J0dY_blt00atnA/deep/0/image.png","https://www.evernote.com/shard/s122/sh/2183c5e6-6ae1-4039-9ec9-b7894da92ebc/S2ODzlF12bRw4LpRYBq-wlwUxDdJAzlOE7L3qvkCHYv1J0dY_blt00atnA/deep/0/image.png"],"content":"<p><img class=\"lozad\" data-src=\"https://www.evernote.com/shard/s122/sh/2183c5e6-6ae1-4039-9ec9-b7894da92ebc/S2ODzlF12bRw4LpRYBq-wlwUxDdJAzlOE7L3qvkCHYv1J0dY_blt00atnA/deep/0/image.png\">shell实现让路由器按要求定时发BTC价至手机</p>\n<span id=\"more\"></span>\n\n<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>让路由器按要求定时发BTC价至手机</p>\n<h2 id=\"前提条件\"><a href=\"#前提条件\" class=\"headerlink\" title=\"前提条件\"></a>前提条件</h2><p>API需要魔法上网来访问</p>\n<p>Operwrt的软路由，或者自己刷了OP系统的路由器</p>\n<h2 id=\"下一步\"><a href=\"#下一步\" class=\"headerlink\" title=\"下一步\"></a>下一步</h2><p>感受（缺点）：shell真不是人写的，语法太魔性；下一步修改用python实现吧</p>\n<p>优点：由于中间没有经过任何解释器，再直接依托于系统级别的cron定时任务，贼稳定，执行优先级也高</p>\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><h2 id=\"找到两个可用的API\"><a href=\"#找到两个可用的API\" class=\"headerlink\" title=\"找到两个可用的API\"></a>找到两个可用的API</h2><ol>\n<li>curl -x “<a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a>“ -s <a href=\"https://api-pub.bitfinex.com/v2/ticker/tBTCUSD\">https://api-pub.bitfinex.com/v2/ticker/tBTCUSD</a> | awk -F ‘,’ ‘{print $7}’</li>\n<li>curl -x “<a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a>“ -s <a href=\"http://api.coindesk.com/v1/bpi/currentprice.json\">http://api.coindesk.com/v1/bpi/currentprice.json</a> | python -c “import json, sys; print(json.load(sys.stdin)[‘bpi’][‘USD’][‘rate’])”</li>\n</ol>\n<h2 id=\"发送方案一：微信推送\"><a href=\"#发送方案一：微信推送\" class=\"headerlink\" title=\"发送方案一：微信推送\"></a>发送方案一：微信推送</h2><ol>\n<li><p><a href=\"https://github.com/tty228/luci-app-wechatpush/blob/master/root/usr/share/wechatpush/wechatpush\">A plugin for OpenWRT routers to send various information notifications to a mobile phone via WeChat or Telegram.</a></p>\n</li>\n<li><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"></span><br><span class=\"line\">priceText=$(curl -x <span class=\"string\">&quot;http://192.168.6.116:7890&quot;</span> -s https://api-pub.bitfinex.com/v2/ticker/tBTCUSD)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#$priceText|awk -F &#x27;,&#x27; &#x27;$7&#x27;</span></span><br><span class=\"line\">price=$(<span class=\"built_in\">echo</span> <span class=\"variable\">$priceText</span>|awk -F <span class=\"string\">&#x27;,&#x27;</span> <span class=\"string\">&#x27;&#123;print $7&#125;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">curl -X POST -H <span class=\"string\">&quot;Content-Type: application/json&quot;</span> -d <span class=\"string\">&#x27;&#123;</span></span><br><span class=\"line\"><span class=\"string\">  &quot;title&quot;: &quot;【BTC】：&#x27;</span><span class=\"variable\">$&#123;price&#125;</span><span class=\"string\">&#x27; &quot;,</span></span><br><span class=\"line\"><span class=\"string\">  &quot;content&quot;: &quot;&#x27;</span><span class=\"variable\">$&#123;price&#125;</span><span class=\"string\">&#x27;\\n----\\n##### 内容1\\n    设备1\\n    设备2\\n----\\n##### 内容2\\n1&quot;,</span></span><br><span class=\"line\"><span class=\"string\">  &quot;token&quot;: &quot;6275de3c34fd40ce86a3d7dc5d98465b&quot;,</span></span><br><span class=\"line\"><span class=\"string\">  &quot;template&quot;: &quot;markdown&quot;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;&#x27;</span> <span class=\"string\">&quot;http://www.pushplus.plus/send&quot;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n</li>\n<li><p>&#x2F;etc&#x2F;init.d&#x2F;cron start</p>\n</li>\n<li><p>定时设置</p>\n</li>\n<li><img class=\"lozad\" data-src=\"https://www.evernote.com/shard/s122/sh/2183c5e6-6ae1-4039-9ec9-b7894da92ebc/S2ODzlF12bRw4LpRYBq-wlwUxDdJAzlOE7L3qvkCHYv1J0dY_blt00atnA/deep/0/image.png\">\n</li>\n<li><p>添加</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 */3 * * * /usr/share/wechatpush/btc.sh &amp;</span><br></pre></td></tr></table></figure>\n\n<p>crontab -l &#x2F;&#x2F;显示crontab文件</p>\n<p>service cron status</p>\n<h3 id=\"上传btc-sh\"><a href=\"#上传btc-sh\" class=\"headerlink\" title=\"上传btc.sh\"></a>上传btc.sh</h3><p>打开 <a href=\"http://192.168.6.1:8080/cgi-bin/luci/admin/system/fileassistant\">http://192.168.6.1:8080/cgi-bin/luci/admin/system/fileassistant</a></p>\n<p>测试用的shell命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"></span><br><span class=\"line\">priceText=$(curl -x <span class=\"string\">&quot;http://192.168.6.116:7890&quot;</span> -s https://api-pub.bitfinex.com/v2/ticker/tBTCUSD)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#$priceText|awk -F &#x27;,&#x27; &#x27;$7&#x27;</span></span><br><span class=\"line\">price=$(<span class=\"built_in\">echo</span> <span class=\"variable\">$priceText</span>|awk -F <span class=\"string\">&#x27;,&#x27;</span> <span class=\"string\">&#x27;&#123;print $7&#125;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$&#123;price&#125;</span> -gt <span class=\"string\">&#x27;39000&#x27;</span> ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">curl -X POST -H <span class=\"string\">&quot;Content-Type: application/json&quot;</span> -d <span class=\"string\">&#x27;&#123;</span></span><br><span class=\"line\"><span class=\"string\">  &quot;title&quot;: &quot;【BTC】：&#x27;</span><span class=\"variable\">$&#123;price&#125;</span><span class=\"string\">&#x27; &quot;,</span></span><br><span class=\"line\"><span class=\"string\">  &quot;content&quot;: &quot;&#x27;</span><span class=\"variable\">$&#123;price&#125;</span><span class=\"string\">&#x27;\\n----\\n##### 内容1\\n    设备1\\n    设备2\\n----\\n##### 内容2\\n1&quot;,</span></span><br><span class=\"line\"><span class=\"string\">  &quot;token&quot;: &quot;6275de3c34fd40ce86a3d7dc5d98465b&quot;,</span></span><br><span class=\"line\"><span class=\"string\">  &quot;template&quot;: &quot;markdown&quot;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;&#x27;</span> <span class=\"string\">&quot;http://www.pushplus.plus/send&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>切换到这个目录（举个例子）&#x2F;usr&#x2F;share&#x2F;wechatpush&#x2F;</p>\n<h3 id=\"添加计划任务\"><a href=\"#添加计划任务\" class=\"headerlink\" title=\"添加计划任务\"></a>添加计划任务</h3><p>上传文件后修改计划任务</p>\n<ol>\n<li><p>打开<a href=\"http://192.168.6.1:8080/cgi-bin/luci/admin/system/crontab\">http://192.168.6.1:8080/cgi-bin/luci/admin/system/crontab</a></p>\n</li>\n<li><p>修改内容为：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*/45 * * * * /usr/share/wechatpush/btc.sh</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li></li>\n</ol>\n<p>这样每分钟都是会执行，用来测试立即执行的效果；当然也可以直接shell里面敲入.&#x2F;btc.sh执行 </p>\n<div class=\"note warning\"><p>过了2天，发现这个添加到计划任务里面自定义的这行，居然消失了</p>\n<p>原因待查明, to be continued…</p>\n</div>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">logread -e cron</span><br></pre></td></tr></table></figure>\n\n<p>读取日志发现：</p>\n<p>最后一次执行记录（昨晚7点）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mon Dec  4 19:00:00 2023 cron.info crond[31979]: USER root pid 6769 cmd /usr/share/wechatpush/btc.sh                          </span><br></pre></td></tr></table></figure>\n\n<p>测试解决方法：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">测试使用 &#x27;定时执行任务/开机启动任务设置&#x27;</span><br><span class=\"line\">https://@@@@@@/cgi-bin/luci/admin/control/autotimeset/base</span><br><span class=\"line\"></span><br><span class=\"line\">这个脚本是会保存的，设置了每小时自动执行</span><br><span class=\"line\"></span><br><span class=\"line\">第二天：</span><br><span class=\"line\">语法纠正 </span><br><span class=\"line\">. /usr/share/wechatpush/btc.sh</span><br><span class=\"line\">设置纠正</span><br><span class=\"line\">*/1 * * * * /usr/bin/timesethandler customscript Scheduled_task</span><br></pre></td></tr></table></figure>\n\n<p>测试解决办法#2:</p>\n<blockquote>\n<p>shell脚本如何写信息到Openwrt系统日志中<br>        一些定时的脚本，有时不清楚它是否执行了，是否成功全部执行，是否按时执行；如何保证？还是写相应的log信息到系统日志中，方便审计和后期查看。</p>\n</blockquote>\n<pre><code>logger是一个shell命令接口，可以通过该接口使用Syslog的系统日志模块，还可以从命令行直接向系统日志文件写入一行信息。\n\n语法：\nlogger [options] [messages]\n-i 在每行都记录进程ID\n-t logger_test 每行记录都加上“logger_test”这个标签\n\nReference：https://www.cnblogs.com/rohens-hbg/articles/9599126.html\n\nSample：\nping 192.168.0.1 | logger -it btc.sh -p local3.notice &amp;\n#输出ping的每个输出给日志\n\n实例：logger -t btc.sh -p local3.notice $&#123;price&#125;\n实际[日志输出](http://192.168.2.1/cgi-bin/luci/admin/status/logs/syslog)：Sun Dec 24 16:21:53 2023 local3.notice btc.sh: 43669\n\n单独执行已经可以在日志中输出想要的执行过程信息，那么\n如何让一个脚本呼叫执行另外一个shell脚本？\nexe /usr/share/wechatpush/btc.sh\n或\nsh /usr/share/wechatpush/btc.sh\n\n可实际上是 /usr/bin/timesethandler 在执行整个脚本\n那，/usr/bin/timesethandler 如何输出日志\n</code></pre>\n<p>放弃在Openwrt中执行，因为日志输出无法正常，无法校验。<br>        放到NAS中去，群晖NAS<br>        新建 控制面板 - 计划任务<br>如何查看群晖NAS日志？ 日志中心；<br>        即便手动 运行也任何日志输出！ ssh中运行看看<br>    也是无法看到想要的预期效果，可以正常，看到NAS生成测试每分钟的日志文件（空内容）。</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">切换工具到debian中</span><br><span class=\"line\"></span><br><span class=\"line\">crontab -e</span><br><span class=\"line\">\t成功添加进每分钟执行的 命令：</span><br><span class=\"line\">\t*/1 * * * * /root/Documents/btc.sh</span><br></pre></td></tr></table></figure>\n\n<p>如何查询debian中的日志？</p>\n<h1 id=\"Debian中Shell定时执行查询\"><a href=\"#Debian中Shell定时执行查询\" class=\"headerlink\" title=\"Debian中Shell定时执行查询\"></a>Debian中Shell定时执行查询</h1><ol>\n<li>查看当前的定时任务命令：crontab -e<ol>\n<li>定时每15分钟执行： *&#x2F;15 * * * * &#x2F;root&#x2F;Documents&#x2F;btc.sh</li>\n</ol>\n</li>\n<li>vi 编辑维护Shell脚本：&#x2F;root&#x2F;Documents&#x2F;btc.sh<ol>\n<li>其中包含了wx推送的token，这样可以把想要的内容推送到微信</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p>说明文档很清晰：<a href=\"https://openwrt.org/zh/docs/guide-user/base-system/cron\">Cron 和 crontab</a></p>\n<p>现实应用，勉强能用…</p>\n<p>还是期待下一步的python实现</p>\n<p>题外话：这个项目<a href=\"https://github.com/gaocuo/fic\">“假装在中国”</a>是学习shell的好实际应用 <a href=\"https://github.com/gaocuo/fic\">https://github.com/gaocuo/fic</a></p>\n","more":"<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>让路由器按要求定时发BTC价至手机</p>\n<h2 id=\"前提条件\"><a href=\"#前提条件\" class=\"headerlink\" title=\"前提条件\"></a>前提条件</h2><p>API需要魔法上网来访问</p>\n<p>Operwrt的软路由，或者自己刷了OP系统的路由器</p>\n<h2 id=\"下一步\"><a href=\"#下一步\" class=\"headerlink\" title=\"下一步\"></a>下一步</h2><p>感受（缺点）：shell真不是人写的，语法太魔性；下一步修改用python实现吧</p>\n<p>优点：由于中间没有经过任何解释器，再直接依托于系统级别的cron定时任务，贼稳定，执行优先级也高</p>\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><h2 id=\"找到两个可用的API\"><a href=\"#找到两个可用的API\" class=\"headerlink\" title=\"找到两个可用的API\"></a>找到两个可用的API</h2><ol>\n<li>curl -x “<a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a>“ -s <a href=\"https://api-pub.bitfinex.com/v2/ticker/tBTCUSD\">https://api-pub.bitfinex.com/v2/ticker/tBTCUSD</a> | awk -F ‘,’ ‘{print $7}’</li>\n<li>curl -x “<a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a>“ -s <a href=\"http://api.coindesk.com/v1/bpi/currentprice.json\">http://api.coindesk.com/v1/bpi/currentprice.json</a> | python -c “import json, sys; print(json.load(sys.stdin)[‘bpi’][‘USD’][‘rate’])”</li>\n</ol>\n<h2 id=\"发送方案一：微信推送\"><a href=\"#发送方案一：微信推送\" class=\"headerlink\" title=\"发送方案一：微信推送\"></a>发送方案一：微信推送</h2><ol>\n<li><p><a href=\"https://github.com/tty228/luci-app-wechatpush/blob/master/root/usr/share/wechatpush/wechatpush\">A plugin for OpenWRT routers to send various information notifications to a mobile phone via WeChat or Telegram.</a></p>\n</li>\n<li><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"></span><br><span class=\"line\">priceText=$(curl -x <span class=\"string\">&quot;http://192.168.6.116:7890&quot;</span> -s https://api-pub.bitfinex.com/v2/ticker/tBTCUSD)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#$priceText|awk -F &#x27;,&#x27; &#x27;$7&#x27;</span></span><br><span class=\"line\">price=$(<span class=\"built_in\">echo</span> <span class=\"variable\">$priceText</span>|awk -F <span class=\"string\">&#x27;,&#x27;</span> <span class=\"string\">&#x27;&#123;print $7&#125;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">curl -X POST -H <span class=\"string\">&quot;Content-Type: application/json&quot;</span> -d <span class=\"string\">&#x27;&#123;</span></span><br><span class=\"line\"><span class=\"string\">  &quot;title&quot;: &quot;【BTC】：&#x27;</span><span class=\"variable\">$&#123;price&#125;</span><span class=\"string\">&#x27; &quot;,</span></span><br><span class=\"line\"><span class=\"string\">  &quot;content&quot;: &quot;&#x27;</span><span class=\"variable\">$&#123;price&#125;</span><span class=\"string\">&#x27;\\n----\\n##### 内容1\\n    设备1\\n    设备2\\n----\\n##### 内容2\\n1&quot;,</span></span><br><span class=\"line\"><span class=\"string\">  &quot;token&quot;: &quot;6275de3c34fd40ce86a3d7dc5d98465b&quot;,</span></span><br><span class=\"line\"><span class=\"string\">  &quot;template&quot;: &quot;markdown&quot;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;&#x27;</span> <span class=\"string\">&quot;http://www.pushplus.plus/send&quot;</span></span><br></pre></td></tr></table></figure>\n\n\n\n\n</li>\n<li><p>&#x2F;etc&#x2F;init.d&#x2F;cron start</p>\n</li>\n<li><p>定时设置</p>\n</li>\n<li><img class=\"lozad\" data-src=\"https://www.evernote.com/shard/s122/sh/2183c5e6-6ae1-4039-9ec9-b7894da92ebc/S2ODzlF12bRw4LpRYBq-wlwUxDdJAzlOE7L3qvkCHYv1J0dY_blt00atnA/deep/0/image.png\">\n</li>\n<li><p>添加</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0 */3 * * * /usr/share/wechatpush/btc.sh &amp;</span><br></pre></td></tr></table></figure>\n\n<p>crontab -l &#x2F;&#x2F;显示crontab文件</p>\n<p>service cron status</p>\n<h3 id=\"上传btc-sh\"><a href=\"#上传btc-sh\" class=\"headerlink\" title=\"上传btc.sh\"></a>上传btc.sh</h3><p>打开 <a href=\"http://192.168.6.1:8080/cgi-bin/luci/admin/system/fileassistant\">http://192.168.6.1:8080/cgi-bin/luci/admin/system/fileassistant</a></p>\n<p>测试用的shell命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/sh</span></span><br><span class=\"line\"></span><br><span class=\"line\">priceText=$(curl -x <span class=\"string\">&quot;http://192.168.6.116:7890&quot;</span> -s https://api-pub.bitfinex.com/v2/ticker/tBTCUSD)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#$priceText|awk -F &#x27;,&#x27; &#x27;$7&#x27;</span></span><br><span class=\"line\">price=$(<span class=\"built_in\">echo</span> <span class=\"variable\">$priceText</span>|awk -F <span class=\"string\">&#x27;,&#x27;</span> <span class=\"string\">&#x27;&#123;print $7&#125;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"variable\">$&#123;price&#125;</span> -gt <span class=\"string\">&#x27;39000&#x27;</span> ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">curl -X POST -H <span class=\"string\">&quot;Content-Type: application/json&quot;</span> -d <span class=\"string\">&#x27;&#123;</span></span><br><span class=\"line\"><span class=\"string\">  &quot;title&quot;: &quot;【BTC】：&#x27;</span><span class=\"variable\">$&#123;price&#125;</span><span class=\"string\">&#x27; &quot;,</span></span><br><span class=\"line\"><span class=\"string\">  &quot;content&quot;: &quot;&#x27;</span><span class=\"variable\">$&#123;price&#125;</span><span class=\"string\">&#x27;\\n----\\n##### 内容1\\n    设备1\\n    设备2\\n----\\n##### 内容2\\n1&quot;,</span></span><br><span class=\"line\"><span class=\"string\">  &quot;token&quot;: &quot;6275de3c34fd40ce86a3d7dc5d98465b&quot;,</span></span><br><span class=\"line\"><span class=\"string\">  &quot;template&quot;: &quot;markdown&quot;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;&#x27;</span> <span class=\"string\">&quot;http://www.pushplus.plus/send&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>切换到这个目录（举个例子）&#x2F;usr&#x2F;share&#x2F;wechatpush&#x2F;</p>\n<h3 id=\"添加计划任务\"><a href=\"#添加计划任务\" class=\"headerlink\" title=\"添加计划任务\"></a>添加计划任务</h3><p>上传文件后修改计划任务</p>\n<ol>\n<li><p>打开<a href=\"http://192.168.6.1:8080/cgi-bin/luci/admin/system/crontab\">http://192.168.6.1:8080/cgi-bin/luci/admin/system/crontab</a></p>\n</li>\n<li><p>修改内容为：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*/45 * * * * /usr/share/wechatpush/btc.sh</span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li></li>\n</ol>\n<p>这样每分钟都是会执行，用来测试立即执行的效果；当然也可以直接shell里面敲入.&#x2F;btc.sh执行 </p>\n<div class=\"note warning\"><p>过了2天，发现这个添加到计划任务里面自定义的这行，居然消失了</p>\n<p>原因待查明, to be continued…</p>\n</div>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">logread -e cron</span><br></pre></td></tr></table></figure>\n\n<p>读取日志发现：</p>\n<p>最后一次执行记录（昨晚7点）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mon Dec  4 19:00:00 2023 cron.info crond[31979]: USER root pid 6769 cmd /usr/share/wechatpush/btc.sh                          </span><br></pre></td></tr></table></figure>\n\n<p>测试解决方法：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">测试使用 &#x27;定时执行任务/开机启动任务设置&#x27;</span><br><span class=\"line\">https://@@@@@@/cgi-bin/luci/admin/control/autotimeset/base</span><br><span class=\"line\"></span><br><span class=\"line\">这个脚本是会保存的，设置了每小时自动执行</span><br><span class=\"line\"></span><br><span class=\"line\">第二天：</span><br><span class=\"line\">语法纠正 </span><br><span class=\"line\">. /usr/share/wechatpush/btc.sh</span><br><span class=\"line\">设置纠正</span><br><span class=\"line\">*/1 * * * * /usr/bin/timesethandler customscript Scheduled_task</span><br></pre></td></tr></table></figure>\n\n<p>测试解决办法#2:</p>\n<blockquote>\n<p>shell脚本如何写信息到Openwrt系统日志中<br>        一些定时的脚本，有时不清楚它是否执行了，是否成功全部执行，是否按时执行；如何保证？还是写相应的log信息到系统日志中，方便审计和后期查看。</p>\n</blockquote>\n<pre><code>logger是一个shell命令接口，可以通过该接口使用Syslog的系统日志模块，还可以从命令行直接向系统日志文件写入一行信息。\n\n语法：\nlogger [options] [messages]\n-i 在每行都记录进程ID\n-t logger_test 每行记录都加上“logger_test”这个标签\n\nReference：https://www.cnblogs.com/rohens-hbg/articles/9599126.html\n\nSample：\nping 192.168.0.1 | logger -it btc.sh -p local3.notice &amp;\n#输出ping的每个输出给日志\n\n实例：logger -t btc.sh -p local3.notice $&#123;price&#125;\n实际[日志输出](http://192.168.2.1/cgi-bin/luci/admin/status/logs/syslog)：Sun Dec 24 16:21:53 2023 local3.notice btc.sh: 43669\n\n单独执行已经可以在日志中输出想要的执行过程信息，那么\n如何让一个脚本呼叫执行另外一个shell脚本？\nexe /usr/share/wechatpush/btc.sh\n或\nsh /usr/share/wechatpush/btc.sh\n\n可实际上是 /usr/bin/timesethandler 在执行整个脚本\n那，/usr/bin/timesethandler 如何输出日志\n</code></pre>\n<p>放弃在Openwrt中执行，因为日志输出无法正常，无法校验。<br>        放到NAS中去，群晖NAS<br>        新建 控制面板 - 计划任务<br>如何查看群晖NAS日志？ 日志中心；<br>        即便手动 运行也任何日志输出！ ssh中运行看看<br>    也是无法看到想要的预期效果，可以正常，看到NAS生成测试每分钟的日志文件（空内容）。</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">切换工具到debian中</span><br><span class=\"line\"></span><br><span class=\"line\">crontab -e</span><br><span class=\"line\">\t成功添加进每分钟执行的 命令：</span><br><span class=\"line\">\t*/1 * * * * /root/Documents/btc.sh</span><br></pre></td></tr></table></figure>\n\n<p>如何查询debian中的日志？</p>\n<h1 id=\"Debian中Shell定时执行查询\"><a href=\"#Debian中Shell定时执行查询\" class=\"headerlink\" title=\"Debian中Shell定时执行查询\"></a>Debian中Shell定时执行查询</h1><ol>\n<li>查看当前的定时任务命令：crontab -e<ol>\n<li>定时每15分钟执行： *&#x2F;15 * * * * &#x2F;root&#x2F;Documents&#x2F;btc.sh</li>\n</ol>\n</li>\n<li>vi 编辑维护Shell脚本：&#x2F;root&#x2F;Documents&#x2F;btc.sh<ol>\n<li>其中包含了wx推送的token，这样可以把想要的内容推送到微信</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p>说明文档很清晰：<a href=\"https://openwrt.org/zh/docs/guide-user/base-system/cron\">Cron 和 crontab</a></p>\n<p>现实应用，勉强能用…</p>\n<p>还是期待下一步的python实现</p>\n<p>题外话：这个项目<a href=\"https://github.com/gaocuo/fic\">“假装在中国”</a>是学习shell的好实际应用 <a href=\"https://github.com/gaocuo/fic\">https://github.com/gaocuo/fic</a></p>","categories":[{"name":"openwrt","path":"api/categories/openwrt.json"}],"tags":[{"name":"debian","path":"api/tags/debian.json"},{"name":"openwrt","path":"api/tags/openwrt.json"},{"name":"linux","path":"api/tags/linux.json"},{"name":"OP","path":"api/tags/OP.json"},{"name":"shell","path":"api/tags/shell.json"},{"name":"crontab","path":"api/tags/crontab.json"}]}