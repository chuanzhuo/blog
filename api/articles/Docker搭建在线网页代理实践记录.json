{"title":"Docker搭建在线网页代理实践记录","slug":"Docker搭建在线网页代理实践记录","date":"2023-11-29T23:58:06.000Z","updated":"2024-10-25T13:16:40.632Z","comments":true,"path":"api/articles/Docker搭建在线网页代理实践记录.json","excerpt":" [Figure] 访问国际互联网在线网页代理，docker-compose搭建访问国际互联网：在线测试访问国际互联网","covers":["https://www.evernote.com/shard/s122/sh/421da190-4c8e-4b8c-a338-a0f75b7a30f6/3PqfqVwmq2eNa_DZZX3yHBmcs0ixk7PanEjMncOW9YVNyYFVTJCxsi_haA/deep/0/image.png"],"content":"<img class=\"lozad\" data-src=\"https://www.evernote.com/shard/s122/sh/421da190-4c8e-4b8c-a338-a0f75b7a30f6/3PqfqVwmq2eNa_DZZX3yHBmcs0ixk7PanEjMncOW9YVNyYFVTJCxsi_haA/deep/0/image.png\">\n\n<p>访问国际互联网</p>\n<p>在线网页代理，docker-compose搭建访问国际互联网：<a href=\"https://c.carlzeng.com:3/web\">在线测试访问国际互联网</a></p>\n<span id=\"more\"></span>\n\n<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>在线网页代理，docker-compose搭建访问国际互联网：<a href=\"https://c.carlzeng.com:3/web\">https://c.carlzeng.com:3/web</a></p>\n<h1 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h1><ol>\n<li>打开<a href=\"https://c.carlzeng.com:3/web\">在线测试访问国际互联网</a> 或拉到最下方的‘<a href=\"https://carl.zeng.top/202311300758.html#%E9%A2%84%E8%A7%88\">预览</a>’</li>\n<li>在文本框中键盘按键输入要访问的网址( 比如: <a href=\"http://www.google.com/\">www.google.com</a>)</li>\n<li>键盘回车</li>\n<li>网页会弹出匿名访问的国际互联网google.com，或者输入<a href=\"http://www.youtube.com回车访问/\">www.youtube.com回车访问</a></li>\n<li>在这访问的新页面就可以继续访问国际互联网（比如继续点击页面中的视频等…）</li>\n</ol>\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><p>个人安装路径（仅供参考）&#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;hideipnetwork-web<br>最终版本的docker-compose.yml文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &quot;3&quot;</span><br><span class=\"line\">services:</span><br><span class=\"line\">  browser:</span><br><span class=\"line\">    image: stilleshan/hideipnetwork-web</span><br><span class=\"line\">    container_name: hideipnetwork</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 56559:56559</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">    \t#这里映射浏览网页时出J4125走的代理的地址</span><br><span class=\"line\">      - ./socks5.txt:/app/proxy/socks5.txt </span><br><span class=\"line\">      \t#这个配置文件，要修改到MODO从normal到socks5</span><br><span class=\"line\">      - ./.env:/app/.env</span><br><span class=\"line\">      - ./public/server/server.client.js:/app/public/server/server.client.js</span><br></pre></td></tr></table></figure>\n\n<p>这是具体的.env文件内容：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">PORT</span> = <span class=\"number\">56559</span></span><br><span class=\"line\"><span class=\"attr\">HOST</span> = <span class=\"string\">&quot;0.0.0.0&quot;</span></span><br><span class=\"line\"><span class=\"attr\">WEBDIR</span> =<span class=\"string\">&quot;/&quot;</span> <span class=\"comment\">#该功能暂时下线优化 |　This function is temporarily offline for optimization</span></span><br><span class=\"line\"><span class=\"attr\">MODO</span> = <span class=\"string\">&quot;socks5&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>这是具体的socks5.txt文件内容：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">192.168.6.116:7890</span><br></pre></td></tr></table></figure>\n\n<p>由于这个socks5是从clash.meta在J4125的另外一个docker中host映射出来的端口，所以要从原来的127.0.0.1:7890改为本地的IP地址。否则会在提交要具体浏览网页是报错</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Service Errorconnect ECONNREFUSED 127.0.0.1:7890</span><br><span class=\"line\">定位为：默认的socks5.txt错误，</span><br><span class=\"line\">Hnet的docker是bridge的形式，127.0.0.1只会停留在docker容器中</span><br></pre></td></tr></table></figure>\n\n<p>配置成功；修改映射出来的socks5.txt文件内容为：192.168.6.116:7890<br>因为两个 docker镜像是以不同的网卡模式，一个是默认的bridge，一个是host（metaclash）<br><a href=\"http://192.168.6.116:9090/#/conns\">http://192.168.6.116:9090/#/conns</a><br>看到经过HNet Web的数据，从socks5传递到clash.meta，meta内核。</p>\n<p>如何在debian中搭建clash.meta？ 【见下个章节】</p>\n<h2 id=\"替换友好message\"><a href=\"#替换友好message\" class=\"headerlink\" title=\"替换友好message\"></a>替换友好message</h2><p>​\tAdvertisement please contact<br>​\t请重试，请重新刷新页面修复内部错误中…  </p>\n<p>映射文件名：     </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">server.sw.js</span></span><br><span class=\"line\"><span class=\"comment\">#格式：</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">./public/server/server.sw.js:/app/public/server/server.sw.js</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"体验-试用\"><a href=\"#体验-试用\" class=\"headerlink\" title=\"体验+试用\"></a>体验+试用</h1><p>试用地址 <a href=\"https://c.carlzeng.com:3/web\">https://c.carlzeng.com:3/web</a></p>\n<h2 id=\"安卓手机端\"><a href=\"#安卓手机端\" class=\"headerlink\" title=\"安卓手机端\"></a>安卓手机端</h2><p>Chrome浏览器，显示不是太正常；无法正常使用</p>\n<p>Kiwi 浏览器，显示正常；可以正常使用，但是嵌入在网页中的视频播放无法正常播放</p>\n<p>​\t测试发现youtube的视频是可以正常播放的，而有些使用了加密直播地址的视频是无法播放的（比如‘小姐姐视频站），刚好测试服务器也不是给大家看小姐姐用的 :-)</p>\n<h2 id=\"IOS端（iPad）\"><a href=\"#IOS端（iPad）\" class=\"headerlink\" title=\"IOS端（iPad）\"></a>IOS端（iPad）</h2><p>Safari浏览器，显示不是太正常；无法正常使用</p>\n<h2 id=\"电脑端\"><a href=\"#电脑端\" class=\"headerlink\" title=\"电脑端\"></a>电脑端</h2><p>Chrome或者FireFox</p>\n<p>都能正常使用，嵌入在网页中的视频也正常播放，完美。</p>\n<h2 id=\"已知问题-局限性\"><a href=\"#已知问题-局限性\" class=\"headerlink\" title=\"已知问题&#x2F;局限性\"></a>已知问题&#x2F;局限性</h2><p>很多网站是打不开的（比如github），这是目前版本无法解决的已知问题。</p>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p><a href=\"https://hub.docker.com/r/metacubex/clash-meta\">https://hub.docker.com/r/metacubex/clash-meta</a></p>\n<p><a href=\"https://github.com/Hideipnetwork/hideipnetwork-web/tree/v3.1-beta\">https://github.com/Hideipnetwork/hideipnetwork-web/tree/v3.1-beta</a><br><a href=\"https://hub.docker.com/r/stilleshan/hideipnetwork-web\">https://hub.docker.com/r/stilleshan/hideipnetwork-web</a></p>\n<p><a href=\"https://www.gtyyj.com/166.html\">提升隐私安全：自建H-net在线代理，轻松无痕浏览</a></p>\n<p><a href=\"https://blog.tanglu.me/web-browser/#%E5%85%AD%E3%80%81%E9%85%8D%E7%BD%AE%E4%BB%A3%E7%90%86\">自建在线网页代理</a></p>\n<p>来源&#x2F;开源：<a href=\"https://github.com/Hideipnetwork/hideipnetwork-web/tree/dev\">https://github.com/Hideipnetwork/hideipnetwork-web/tree/dev</a></p>\n<hr>\n<h1 id=\"如何在debian中搭建clash-meta\"><a href=\"#如何在debian中搭建clash-meta\" class=\"headerlink\" title=\"如何在debian中搭建clash.meta\"></a>如何在debian中搭建clash.meta</h1><p>仅供参考</p>\n<p>前提是: 小伙伴要了解怎么获取clash中的proxy节点，通俗的做法是购买机场服务，从机场中导出订阅连接即可。也有自建机场(要有计算机知识)，获取网络上小伙伴分享的节点（可参见文章：<a href =\"/202310011555.html\">go语言学习与应用日志-proxypool</a>)</p>\n<p>替换Clash For Windows方案，找到类似的解决方案并找到debian AMD64平台合适的应用：clash-verge</p>\n<p>最终的metacubexd实现docker-compose.yml</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &#x27;3&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">services:</span><br><span class=\"line\">  metacubexd:</span><br><span class=\"line\">    container_name: metacubexd</span><br><span class=\"line\">    image: ghcr.io/metacubex/metacubexd</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - &#x27;9090:80&#x27;   <span class=\"comment\">#这里是WEB UI对应的端口</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># optional</span></span><br><span class=\"line\">  meta:</span><br><span class=\"line\">    container_name: meta</span><br><span class=\"line\">    image: docker.io/metacubex/clash-meta:Alpha</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    network_mode: host</span><br><span class=\"line\">    cap_add:</span><br><span class=\"line\">      - NET_ADMIN</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - /root/.config/clash:/root/.config/clash</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>记得在Debian防火墙中开放所有这里指定的对外端口。</p>\n<p>对应的&#x2F;root&#x2F;.config&#x2F;clash目录中的文件内容（开头节选）：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mixed-port: 7890</span><br><span class=\"line\">secret: **********</span><br><span class=\"line\">external-ui: /etc/clash-meta/ui</span><br><span class=\"line\">external-controller: 0.0.0.0:9091</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#...其他的clash配置配置内容</span></span><br></pre></td></tr></table></figure>\n\n<p>着重讲解这里的config.yaml要注意的内容：</p>\n<ol>\n<li>mixed-port: 7890 这个很简单，clash开放的服务端口</li>\n<li>secret: 这是webui连接上clash.meta内容的密钥，关系到Webui可否查看和操作clash</li>\n<li>external-ui 这是docker中的webui路径，不需要修改，在上面的docker-compose会帮忙都部署好</li>\n<li>external-controller: 0.0.0.0:9091 这是可以操作webui的端口，关系到Webui可否查看和操作clash</li>\n</ol>\n<p>注意到webui的访问是通过9090端口进行的，然后在设置中，要正确的制定上面这些对应的参数，才能让两个模块（clash和UI）搭配起来联动。</p>\n<p>两者都搭配部署配合妥当后效果：<a href=\"https://c.carlzeng.com:3/web\">在线测试</a></p>\n<h2 id=\"过程很艰辛\"><a href=\"#过程很艰辛\" class=\"headerlink\" title=\"过程很艰辛\"></a>过程很艰辛</h2><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过程很艰辛：</span><br><span class=\"line\">tried 3 docker project:</span><br><span class=\"line\">\t  \t- metacubex/clash-meta  </span><br><span class=\"line\">\t  \t\t一开始没理解</span><br><span class=\"line\">\t\t- junxy/clash</span><br><span class=\"line\">\t\t\thttps://github.com/junxy/docker-clash/blob/master/docker-compose.yml</span><br><span class=\"line\">\t\t\t版本太久了配置了.config/clash下的文件后， clash 程序无法正常运行</span><br><span class=\"line\">\t\t- https://hub.docker.com/r/dreamacro/clash</span><br><span class=\"line\">\t\t\t部署成功，但不知道怎么用，后来知道还得有UI，命令行启动正常但似乎卡死在一个提示..</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t- https://github.com/RayWangQvQ/sing-box-installer </span><br><span class=\"line\"></span><br><span class=\"line\">\t\t- <span class=\"section\">[在 Linux 服务器上安装 Clash，以及开机自动启动]</span>(https://www.xxpyy.top/detailed?<span class=\"attr\">id</span>=<span class=\"number\">14</span><span class=\"comment\">#toc116)</span></span><br></pre></td></tr></table></figure>\n\n<p>&#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;metacubexd</p>\n<p>HNet的Next有这么一个TODO：给Node的docker中部署clash for linux</p>\n<p>后来思路转变：最好是docker里，debian中可用的clash客户端；</p>\n<p>从docker中把clash复制出来，&#x2F;usr&#x2F;bin，然后到ssh的bash中测试</p>\n<p>clash -v<br>    Clash v0.16.0-27-gbd4302e-containerd linux amd64 Sun Dec  8 11:29:03 UTC 2019</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/root/.config/clash</span><br></pre></td></tr></table></figure>\n\n<p>测试了各个版本的clash版本</p>\n<p>用可找到的最新版的原作者dreamacro&#x2F;clash<br>    Clash v1.18.0 linux amd64 with go1.21.0 Thu Aug 17 14:45:47 UTC 2023</p>\n<p>INFO[0000] Start initial compatible provider loadbalance1<br>    放弃，clash没希望了，需要寻找替代品了</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/RayWangQvQ/sing-box-installer </span><br><span class=\"line\">\tnekoray-macos</span><br><span class=\"line\">\t建议根据延迟测试结果自动切换服务器</span><br><span class=\"line\">\t你可以试试clash verge，应该可以满足你的要求</span><br><span class=\"line\"></span><br><span class=\"line\">\thttps://github.com/zzzgydi/clash-verge</span><br><span class=\"line\">\t下载：https://github.com/zzzgydi/clash-verge/releases/tag/v1.3.8</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\tMac 端切换成功：Clash.Verge_1.3.8_x64.dmg 28.8 MB last month</span><br><span class=\"line\">\tnext：proxypool，自动导入到Clash verge中</span><br><span class=\"line\">\t\t给linux找客户端</span><br><span class=\"line\"></span><br><span class=\"line\">\thttps://mirror.ghproxy.com/https://github.com/zzzgydi/clash-verge/releases/download/v1.3.8/clash-verge_1.3.8_amd64.deb</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\">\tdeb文件包用dpkg安装后，不知道去哪里了，</span><br><span class=\"line\">\thttps://mirror.ghproxy.com/</span><br><span class=\"line\">\t正在下载: https://mirror.ghproxy.com/https://github.com/zzzgydi/clash-verge/releases/download/v1.3.8/clash-verge_1.3.8_amd64.AppImage.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\tclash-meta,卡死</span><br><span class=\"line\">\t\tINFO<span class=\"section\">[2023-11-29T20:58:20.184745908+08:00]</span> Start initial configuration in progress      </span><br><span class=\"line\">\t\tINFO<span class=\"section\">[2023-11-29T20:58:20.187312982+08:00]</span> Geodata Loader mode: memconservative         </span><br><span class=\"line\">\t\tINFO<span class=\"section\">[2023-11-29T20:58:20.191162285+08:00]</span> Initial configuration complete, total time: 6ms </span><br><span class=\"line\">\t\tINFO<span class=\"section\">[2023-11-29T20:58:20.216059686+08:00]</span> Sniffer is closed                            </span><br><span class=\"line\">\t\tINFO<span class=\"section\">[2023-11-29T20:58:20.216252817+08:00]</span> Start initial compatible provider default    </span><br><span class=\"line\">\t\tINFO<span class=\"section\">[2023-11-29T20:58:20.216299376+08:00]</span> Start initial compatible provider loadbalance1 </span><br><span class=\"line\"></span><br><span class=\"line\">\t（后来的思路是：debian 直接运行 Clash Verge）</span><br><span class=\"line\">\t我的debian本来就没有GUI；</span><br><span class=\"line\">\t\t在nas里直接装clash内核就行吧，又不需要gui</span><br><span class=\"line\"></span><br><span class=\"line\">\thttps://github.com/zzzgydi/clash-verge/releases/download/alpha/clash-verge_1.3.8_amd64-debug.deb</span><br><span class=\"line\">\t\t根据@zzzgydi 的建议，下载并安装debug版本。</span><br><span class=\"line\">\t\t版本号为1.3.7时，完成了如下测试：</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t居然在gui的WEB思路下面找到了哦：https://github.com/MetaCubeX/metacubexd/tree/main</span><br><span class=\"line\">\t\t没有GUI，那就WEB的gui啊！</span><br></pre></td></tr></table></figure>\n\n<p>Request failed with status code 405 Method Not Allowed</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BUG</span><br><span class=\"line\">\tzzzgydi/clash-verge </span><br><span class=\"line\">\thttps://github.com/zzzgydi/clash-verge/issues/808</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\tmixed-port: 7890</span><br><span class=\"line\">\tsecret: **********</span><br><span class=\"line\">\texternal-controller: 0.0.0.0:9090</span><br><span class=\"line\"></span><br><span class=\"line\">\t终于按文档配置成功：https://github.com/MetaCubeX/metacubexd/tree/main</span><br><span class=\"line\">\tEnable external-controller in your config file</span><br><span class=\"line\">\t\texternal-controller: 0.0.0.0:9090</span><br><span class=\"line\">\t\tUse pre-built assets from gh-pages branch</span><br><span class=\"line\">\t\tFirst time setup</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tgit clone https://github.com/metacubex/metacubexd.git -b gh-pages /etc/clash-meta/ui</span><br><span class=\"line\">\t\tMake sure you have external-ui directory set correctly in your config file</span><br><span class=\"line\"></span><br><span class=\"line\">\t\texternal-ui: /etc/clash-meta/ui</span><br><span class=\"line\">\tworks great: http://192.168.6.116:9090/<span class=\"comment\">#/config</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t修改后端：http://192.168.6.116:9090/<span class=\"comment\">#/setup</span></span><br><span class=\"line\">\t\thttp://192.168.6.116:9091</span><br><span class=\"line\">\t\t**********</span><br><span class=\"line\">\t对应config.yaml中的配置</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"思路来源及关联\"><a href=\"#思路来源及关联\" class=\"headerlink\" title=\"思路来源及关联\"></a>思路来源及关联</h2><p><a href =\"\">Clash for Windows 设置方法入门(适用于Windows+Mac)</a>)<br><a href =\"/202310011555.html\">go语言学习与应用日志-proxypool</a>)</p>\n<h1 id=\"预览HNet-​\"><a href=\"#预览HNet-​\" class=\"headerlink\" title=\"预览HNet\t\t ​\"></a>预览HNet\t\t ​</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://c.carlzeng.com:3/web\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<hr>\n<h1 id=\"Docker-container-for-Firefox\"><a href=\"#Docker-container-for-Firefox\" class=\"headerlink\" title=\"Docker container for Firefox\"></a>Docker container for Firefox</h1><p>这个方案脑洞大开了，This is a Docker container for Firefox.</p>\n<p>The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client. Full documentation is available at <a href=\"https://github.com/jlesage/docker-firefox\">https://github.com/jlesage/docker-firefox</a>.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d \\</span><br><span class=\"line\">    --name=firefox \\</span><br><span class=\"line\">    -p 5800:5800 \\</span><br><span class=\"line\">    -v ./firefox_config:/config \\</span><br><span class=\"line\">    jlesage/firefox</span><br><span class=\"line\">    </span><br><span class=\"line\">要用到这个</span><br><span class=\"line\">-e &quot;FF_PREF_HTTP_PROXY=network.proxy.http=\\&quot;proxy.example.com\\&quot;&quot;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &#x27;3&#x27;</span><br><span class=\"line\">services:</span><br><span class=\"line\">  firefox:</span><br><span class=\"line\">    image: jlesage/firefox</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - &quot;5800:5800&quot;</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - &quot;./firefox_config:/config&quot;</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">    \t- &quot;FF_PREF_PROXY_TYPE=network.proxy.type=1&quot;</span><br><span class=\"line\">      - &quot;FF_PREF_HTTP_PROXY=network.proxy.http=192.168.6.116&quot;</span><br><span class=\"line\">      - &quot;FF_PREF_HTTP_PROXY=network.proxy.http_port=7890&quot;</span><br><span class=\"line\">      - &quot;KEEP_APP_RUNNING=1&quot;</span><br><span class=\"line\">      - &quot;LANG=en_US.UTF-8&quot;</span><br><span class=\"line\">      - &quot;FF_OPEN_URL=www.carlzeng.com&quot; #仅个人测试使用</span><br></pre></td></tr></table></figure>\n\n<p>开放5800端口，反代出<a href=\"https://c.carlzeng.com:4443/web2\">https://c.carlzeng.com:4443/web2</a></p>\n<p>配置PROXY的部分参考：<a href=\"https://github.com/zerofox-oss/phishpond/blob/master/docker-compose.yml\">https://github.com/zerofox-oss/phishpond/blob/master/docker-compose.yml</a></p>\n<h2 id=\"怎么用\"><a href=\"#怎么用\" class=\"headerlink\" title=\"怎么用\"></a>怎么用</h2><p>用法和您本地的浏览器用法一样！</p>\n<ol>\n<li>打开<a href=\"https://c.carlzeng.com:4443/web2\">在线浏览器</a></li>\n<li>输入您要访问的网址<ol>\n<li>比如：<a href=\"http://www.google.com/\">www.google.com</a> 回车访问</li>\n<li>或输入：<a href=\"http://www.youtube.com/\">www.youtube.com</a> 回车访问</li>\n</ol>\n</li>\n<li>。。。</li>\n</ol>\n<h3 id=\"已知问题\"><a href=\"#已知问题\" class=\"headerlink\" title=\"已知问题\"></a>已知问题</h3><p>访问的网页中，中文的编码还有问题，无法正常显示中文</p>\n<h3 id=\"IOS端（iPad）-1\"><a href=\"#IOS端（iPad）-1\" class=\"headerlink\" title=\"IOS端（iPad）\"></a>IOS端（iPad）</h3><p>Safari浏览器，显示不是太正常；无法正常使用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">参数介绍</span></span><br><span class=\"line\">-e TZ=Asia/Hong_Kong       # 设置时区</span><br><span class=\"line\">-e DISPLAY_WIDTH=1920</span><br><span class=\"line\">-e DISPLAY_HEIGHT=1080     #设置显示的高宽</span><br><span class=\"line\">-e KEEP_APP_RUNNING=1      # 保持启动状态</span><br><span class=\"line\">-e ENABLE_CJK_FONT=1       # 防止显示页面时中文乱码</span><br><span class=\"line\">-e SECURE_CONNECTION=1     # 启用HTTPS功能</span><br><span class=\"line\">-e VNC_PASSWORD=admin  #设置VNC的访问密码,自定义即可</span><br><span class=\"line\">-p 5800:5800               #访问firefox的web端口</span><br><span class=\"line\">-p 5900:5900               #VNC端口</span><br><span class=\"line\">-v /data/irefox/config:/config:rw         # 容器挂载目录，存放firefox数据</span><br><span class=\"line\">--shm-size 2g               # 设置容器的内存资源为2g </span><br></pre></td></tr></table></figure>\n\n<h1 id=\"预览Firefox\"><a href=\"#预览Firefox\" class=\"headerlink\" title=\"预览Firefox\"></a>预览Firefox</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://c.carlzeng.com:3/web2\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n\n\n<p>中文字符的问题，实在无法接受</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://hub.docker.com/r/ich777/firefox 已测试，无效，卡住：</span><br><span class=\"line\">firefox  | ---Starting...---</span><br><span class=\"line\">firefox  | ---Firefox not installed, installing---</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://1024.ee/2020/07/23/docker%E8%99%9A%E6%8B%9F%E6%B5%8F%E8%A7%88%E5%99%A8-%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%9A%84%E8%BF%9C%E7%A8%8B%E6%B5%8F%E8%A7%88%E5%99%A8/\">https://1024.ee/2020/07/23/docker%E8%99%9A%E6%8B%9F%E6%B5%8F%E8%A7%88%E5%99%A8-%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%9A%84%E8%BF%9C%E7%A8%8B%E6%B5%8F%E8%A7%88%E5%99%A8/</a></p>\n<h2 id=\"m1k1o-neko\"><a href=\"#m1k1o-neko\" class=\"headerlink\" title=\"m1k1o&#x2F;neko\"></a>m1k1o&#x2F;neko</h2><p>By <a href=\"https://hub.docker.com/u/m1k1o\">m1k1o</a> • Updated 6 days ago</p>\n<p>Fork of <a href=\"https://github.com/nurdism/neko/\">https://github.com/nurdism/neko/</a> </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &quot;2.0&quot;</span><br><span class=\"line\">services:</span><br><span class=\"line\">  neko:</span><br><span class=\"line\">    image: nurdism/neko:firefox</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    shm_size: &quot;1gb&quot;</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - &quot;5880:8080&quot;</span><br><span class=\"line\">      - &quot;59000-59100:59000-59100/udp&quot;</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      DISPLAY: :99.0</span><br><span class=\"line\">      NEKO_PASSWORD: neko</span><br><span class=\"line\">      NEKO_PASSWORD_ADMIN: admin</span><br><span class=\"line\">      NEKO_BIND: :8080</span><br><span class=\"line\">      NEKO_EPR: 59000-59100</span><br></pre></td></tr></table></figure>\n\n<p>显示UI，但是，无法正常登陆;  继续尝试下面的新版本：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &quot;3.4&quot;</span><br><span class=\"line\">services:</span><br><span class=\"line\">  neko:</span><br><span class=\"line\">    image: &quot;m1k1o/neko:firefox&quot;</span><br><span class=\"line\">    restart: &quot;unless-stopped&quot;</span><br><span class=\"line\">    shm_size: &quot;2gb&quot;</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - &quot;8080:8080&quot;</span><br><span class=\"line\">      - &quot;52000-52100:52000-52100/udp&quot;</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      NEKO_SCREEN: 1920x1080@30</span><br><span class=\"line\">      NEKO_PASSWORD: neko</span><br><span class=\"line\">      NEKO_PASSWORD_ADMIN: admin</span><br><span class=\"line\">      NEKO_EPR: 52000-52100</span><br><span class=\"line\">      NEKO_ICELITE: 1</span><br><span class=\"line\">      </span><br><span class=\"line\">以及</span><br><span class=\"line\">version: &quot;3.4&quot;</span><br><span class=\"line\">services:</span><br><span class=\"line\">  neko:</span><br><span class=\"line\">    image: &quot;m1k1o/neko:chromium&quot;</span><br><span class=\"line\">    restart: &quot;unless-stopped&quot;</span><br><span class=\"line\">    shm_size: &quot;2gb&quot;</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - &quot;5800:8080&quot;</span><br><span class=\"line\">      - &quot;52000-52100:52000-52100/udp&quot;</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      NEKO_SCREEN: 1920x1080@30</span><br><span class=\"line\">      NEKO_PASSWORD: admin</span><br><span class=\"line\">      NEKO_PASSWORD_ADMIN: admin</span><br><span class=\"line\">      NEKO_EPR: 52000-52100</span><br></pre></td></tr></table></figure>\n\n<p>都是一样无法登陆，尴尬了</p>\n<p>放弃其他方案（很可能是需要默认就在墙外的情况，不适合与家宽的大背景环境）；</p>\n<p>最终还是回到了Firefox的怀抱</p>\n<p>参考了<a href=\"https://www.cpolar.com/blog/docker-deploys-firefox-browser-locally-and-remotely-accesses-it\">Docker本地部署Firefox火狐浏览器并远程访问</a>里面的参数，解决了中文乱码的问题。-e ENABLE_CJK_FONT&#x3D;1       # 防止显示页面时中文乱码</p>\n<hr>\n<h1 id=\"Tor-Browser\"><a href=\"#Tor-Browser\" class=\"headerlink\" title=\"Tor-Browser\"></a>Tor-Browser</h1><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">docker</span> <span class=\"string\">run</span> <span class=\"string\">-it</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">-v</span> <span class=\"string\">./tmp:/tmp/.X11-unix</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">-e</span> <span class=\"string\">DISPLAY=unix$DISPLAY</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">--device</span> <span class=\"string\">/dev/snd</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">--name</span> <span class=\"string\">tor-browser</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">jess/tor-browser</span></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&quot;3&quot;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">    <span class=\"attr\">tor-browser:</span></span><br><span class=\"line\">        <span class=\"attr\">stdin_open:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">tty:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">volumes:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">/tmp:/tmp/.X11-unix</span></span><br><span class=\"line\">        <span class=\"attr\">environment:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">DISPLAY=unix$DISPLAY</span></span><br><span class=\"line\">        <span class=\"attr\">devices:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">/dev/snd</span></span><br><span class=\"line\">        <span class=\"attr\">container_name:</span> <span class=\"string\">tor-browser</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">jess/tor-browser</span></span><br></pre></td></tr></table></figure>\n\n<p>Tor Browser must be run within the X Window System.                                                          </p>\n<h1 id=\"NAS中的BrowserBox\"><a href=\"#NAS中的BrowserBox\" class=\"headerlink\" title=\"NAS中的BrowserBox\"></a>NAS中的BrowserBox</h1><p>找了一下BrowserBox</p>\n<p><a href=\"https://github.com/BrowserBox/BrowserBox?tab=readme-ov-file#docker-quick-start-gem-version-6\">https://github.com/BrowserBox/BrowserBox?tab=readme-ov-file#docker-quick-start-gem-version-6</a></p>\n<p>不知道这个docker pull下来又多大；</p>\n<p>看了一下安装的<a href=\"https://raw.githubusercontent.com/BrowserBox/BrowserBox/2e8a085931b719e5cadf24dd2942194433d5ae7f/deploy-scripts/run_docker.sh\">。sh文件</a>需要申请证书的步骤&#x2F;动作，没有改动之前不适合我的环境；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull ghcr.io/browserbox/browserbox:v6.2</span><br></pre></td></tr></table></figure>\n\n\n\n<p>还是切到黑群中的BrowserBox, 举例说明：<a href=\"https://xywnas.com/?p=1889\">https://xywnas.com/?p=1889</a></p>\n","more":"<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>在线网页代理，docker-compose搭建访问国际互联网：<a href=\"https://c.carlzeng.com:3/web\">https://c.carlzeng.com:3/web</a></p>\n<h1 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h1><ol>\n<li>打开<a href=\"https://c.carlzeng.com:3/web\">在线测试访问国际互联网</a> 或拉到最下方的‘<a href=\"https://carl.zeng.top/202311300758.html#%E9%A2%84%E8%A7%88\">预览</a>’</li>\n<li>在文本框中键盘按键输入要访问的网址( 比如: <a href=\"http://www.google.com/\">www.google.com</a>)</li>\n<li>键盘回车</li>\n<li>网页会弹出匿名访问的国际互联网google.com，或者输入<a href=\"http://www.youtube.com回车访问/\">www.youtube.com回车访问</a></li>\n<li>在这访问的新页面就可以继续访问国际互联网（比如继续点击页面中的视频等…）</li>\n</ol>\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><p>个人安装路径（仅供参考）&#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;hideipnetwork-web<br>最终版本的docker-compose.yml文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &quot;3&quot;</span><br><span class=\"line\">services:</span><br><span class=\"line\">  browser:</span><br><span class=\"line\">    image: stilleshan/hideipnetwork-web</span><br><span class=\"line\">    container_name: hideipnetwork</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - 56559:56559</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">    \t#这里映射浏览网页时出J4125走的代理的地址</span><br><span class=\"line\">      - ./socks5.txt:/app/proxy/socks5.txt </span><br><span class=\"line\">      \t#这个配置文件，要修改到MODO从normal到socks5</span><br><span class=\"line\">      - ./.env:/app/.env</span><br><span class=\"line\">      - ./public/server/server.client.js:/app/public/server/server.client.js</span><br></pre></td></tr></table></figure>\n\n<p>这是具体的.env文件内容：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">PORT</span> = <span class=\"number\">56559</span></span><br><span class=\"line\"><span class=\"attr\">HOST</span> = <span class=\"string\">&quot;0.0.0.0&quot;</span></span><br><span class=\"line\"><span class=\"attr\">WEBDIR</span> =<span class=\"string\">&quot;/&quot;</span> <span class=\"comment\">#该功能暂时下线优化 |　This function is temporarily offline for optimization</span></span><br><span class=\"line\"><span class=\"attr\">MODO</span> = <span class=\"string\">&quot;socks5&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>这是具体的socks5.txt文件内容：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">192.168.6.116:7890</span><br></pre></td></tr></table></figure>\n\n<p>由于这个socks5是从clash.meta在J4125的另外一个docker中host映射出来的端口，所以要从原来的127.0.0.1:7890改为本地的IP地址。否则会在提交要具体浏览网页是报错</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Service Errorconnect ECONNREFUSED 127.0.0.1:7890</span><br><span class=\"line\">定位为：默认的socks5.txt错误，</span><br><span class=\"line\">Hnet的docker是bridge的形式，127.0.0.1只会停留在docker容器中</span><br></pre></td></tr></table></figure>\n\n<p>配置成功；修改映射出来的socks5.txt文件内容为：192.168.6.116:7890<br>因为两个 docker镜像是以不同的网卡模式，一个是默认的bridge，一个是host（metaclash）<br><a href=\"http://192.168.6.116:9090/#/conns\">http://192.168.6.116:9090/#/conns</a><br>看到经过HNet Web的数据，从socks5传递到clash.meta，meta内核。</p>\n<p>如何在debian中搭建clash.meta？ 【见下个章节】</p>\n<h2 id=\"替换友好message\"><a href=\"#替换友好message\" class=\"headerlink\" title=\"替换友好message\"></a>替换友好message</h2><p>​\tAdvertisement please contact<br>​\t请重试，请重新刷新页面修复内部错误中…  </p>\n<p>映射文件名：     </p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">server.sw.js</span></span><br><span class=\"line\"><span class=\"comment\">#格式：</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"string\">./public/server/server.sw.js:/app/public/server/server.sw.js</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"体验-试用\"><a href=\"#体验-试用\" class=\"headerlink\" title=\"体验+试用\"></a>体验+试用</h1><p>试用地址 <a href=\"https://c.carlzeng.com:3/web\">https://c.carlzeng.com:3/web</a></p>\n<h2 id=\"安卓手机端\"><a href=\"#安卓手机端\" class=\"headerlink\" title=\"安卓手机端\"></a>安卓手机端</h2><p>Chrome浏览器，显示不是太正常；无法正常使用</p>\n<p>Kiwi 浏览器，显示正常；可以正常使用，但是嵌入在网页中的视频播放无法正常播放</p>\n<p>​\t测试发现youtube的视频是可以正常播放的，而有些使用了加密直播地址的视频是无法播放的（比如‘小姐姐视频站），刚好测试服务器也不是给大家看小姐姐用的 :-)</p>\n<h2 id=\"IOS端（iPad）\"><a href=\"#IOS端（iPad）\" class=\"headerlink\" title=\"IOS端（iPad）\"></a>IOS端（iPad）</h2><p>Safari浏览器，显示不是太正常；无法正常使用</p>\n<h2 id=\"电脑端\"><a href=\"#电脑端\" class=\"headerlink\" title=\"电脑端\"></a>电脑端</h2><p>Chrome或者FireFox</p>\n<p>都能正常使用，嵌入在网页中的视频也正常播放，完美。</p>\n<h2 id=\"已知问题-局限性\"><a href=\"#已知问题-局限性\" class=\"headerlink\" title=\"已知问题&#x2F;局限性\"></a>已知问题&#x2F;局限性</h2><p>很多网站是打不开的（比如github），这是目前版本无法解决的已知问题。</p>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p><a href=\"https://hub.docker.com/r/metacubex/clash-meta\">https://hub.docker.com/r/metacubex/clash-meta</a></p>\n<p><a href=\"https://github.com/Hideipnetwork/hideipnetwork-web/tree/v3.1-beta\">https://github.com/Hideipnetwork/hideipnetwork-web/tree/v3.1-beta</a><br><a href=\"https://hub.docker.com/r/stilleshan/hideipnetwork-web\">https://hub.docker.com/r/stilleshan/hideipnetwork-web</a></p>\n<p><a href=\"https://www.gtyyj.com/166.html\">提升隐私安全：自建H-net在线代理，轻松无痕浏览</a></p>\n<p><a href=\"https://blog.tanglu.me/web-browser/#%E5%85%AD%E3%80%81%E9%85%8D%E7%BD%AE%E4%BB%A3%E7%90%86\">自建在线网页代理</a></p>\n<p>来源&#x2F;开源：<a href=\"https://github.com/Hideipnetwork/hideipnetwork-web/tree/dev\">https://github.com/Hideipnetwork/hideipnetwork-web/tree/dev</a></p>\n<hr>\n<h1 id=\"如何在debian中搭建clash-meta\"><a href=\"#如何在debian中搭建clash-meta\" class=\"headerlink\" title=\"如何在debian中搭建clash.meta\"></a>如何在debian中搭建clash.meta</h1><p>仅供参考</p>\n<p>前提是: 小伙伴要了解怎么获取clash中的proxy节点，通俗的做法是购买机场服务，从机场中导出订阅连接即可。也有自建机场(要有计算机知识)，获取网络上小伙伴分享的节点（可参见文章：<a href =\"/202310011555.html\">go语言学习与应用日志-proxypool</a>)</p>\n<p>替换Clash For Windows方案，找到类似的解决方案并找到debian AMD64平台合适的应用：clash-verge</p>\n<p>最终的metacubexd实现docker-compose.yml</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &#x27;3&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">services:</span><br><span class=\"line\">  metacubexd:</span><br><span class=\"line\">    container_name: metacubexd</span><br><span class=\"line\">    image: ghcr.io/metacubex/metacubexd</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - &#x27;9090:80&#x27;   <span class=\"comment\">#这里是WEB UI对应的端口</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\"># optional</span></span><br><span class=\"line\">  meta:</span><br><span class=\"line\">    container_name: meta</span><br><span class=\"line\">    image: docker.io/metacubex/clash-meta:Alpha</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    network_mode: host</span><br><span class=\"line\">    cap_add:</span><br><span class=\"line\">      - NET_ADMIN</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - /root/.config/clash:/root/.config/clash</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>记得在Debian防火墙中开放所有这里指定的对外端口。</p>\n<p>对应的&#x2F;root&#x2F;.config&#x2F;clash目录中的文件内容（开头节选）：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mixed-port: 7890</span><br><span class=\"line\">secret: **********</span><br><span class=\"line\">external-ui: /etc/clash-meta/ui</span><br><span class=\"line\">external-controller: 0.0.0.0:9091</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#...其他的clash配置配置内容</span></span><br></pre></td></tr></table></figure>\n\n<p>着重讲解这里的config.yaml要注意的内容：</p>\n<ol>\n<li>mixed-port: 7890 这个很简单，clash开放的服务端口</li>\n<li>secret: 这是webui连接上clash.meta内容的密钥，关系到Webui可否查看和操作clash</li>\n<li>external-ui 这是docker中的webui路径，不需要修改，在上面的docker-compose会帮忙都部署好</li>\n<li>external-controller: 0.0.0.0:9091 这是可以操作webui的端口，关系到Webui可否查看和操作clash</li>\n</ol>\n<p>注意到webui的访问是通过9090端口进行的，然后在设置中，要正确的制定上面这些对应的参数，才能让两个模块（clash和UI）搭配起来联动。</p>\n<p>两者都搭配部署配合妥当后效果：<a href=\"https://c.carlzeng.com:3/web\">在线测试</a></p>\n<h2 id=\"过程很艰辛\"><a href=\"#过程很艰辛\" class=\"headerlink\" title=\"过程很艰辛\"></a>过程很艰辛</h2><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">过程很艰辛：</span><br><span class=\"line\">tried 3 docker project:</span><br><span class=\"line\">\t  \t- metacubex/clash-meta  </span><br><span class=\"line\">\t  \t\t一开始没理解</span><br><span class=\"line\">\t\t- junxy/clash</span><br><span class=\"line\">\t\t\thttps://github.com/junxy/docker-clash/blob/master/docker-compose.yml</span><br><span class=\"line\">\t\t\t版本太久了配置了.config/clash下的文件后， clash 程序无法正常运行</span><br><span class=\"line\">\t\t- https://hub.docker.com/r/dreamacro/clash</span><br><span class=\"line\">\t\t\t部署成功，但不知道怎么用，后来知道还得有UI，命令行启动正常但似乎卡死在一个提示..</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t- https://github.com/RayWangQvQ/sing-box-installer </span><br><span class=\"line\"></span><br><span class=\"line\">\t\t- <span class=\"section\">[在 Linux 服务器上安装 Clash，以及开机自动启动]</span>(https://www.xxpyy.top/detailed?<span class=\"attr\">id</span>=<span class=\"number\">14</span><span class=\"comment\">#toc116)</span></span><br></pre></td></tr></table></figure>\n\n<p>&#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;metacubexd</p>\n<p>HNet的Next有这么一个TODO：给Node的docker中部署clash for linux</p>\n<p>后来思路转变：最好是docker里，debian中可用的clash客户端；</p>\n<p>从docker中把clash复制出来，&#x2F;usr&#x2F;bin，然后到ssh的bash中测试</p>\n<p>clash -v<br>    Clash v0.16.0-27-gbd4302e-containerd linux amd64 Sun Dec  8 11:29:03 UTC 2019</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/root/.config/clash</span><br></pre></td></tr></table></figure>\n\n<p>测试了各个版本的clash版本</p>\n<p>用可找到的最新版的原作者dreamacro&#x2F;clash<br>    Clash v1.18.0 linux amd64 with go1.21.0 Thu Aug 17 14:45:47 UTC 2023</p>\n<p>INFO[0000] Start initial compatible provider loadbalance1<br>    放弃，clash没希望了，需要寻找替代品了</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/RayWangQvQ/sing-box-installer </span><br><span class=\"line\">\tnekoray-macos</span><br><span class=\"line\">\t建议根据延迟测试结果自动切换服务器</span><br><span class=\"line\">\t你可以试试clash verge，应该可以满足你的要求</span><br><span class=\"line\"></span><br><span class=\"line\">\thttps://github.com/zzzgydi/clash-verge</span><br><span class=\"line\">\t下载：https://github.com/zzzgydi/clash-verge/releases/tag/v1.3.8</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\tMac 端切换成功：Clash.Verge_1.3.8_x64.dmg 28.8 MB last month</span><br><span class=\"line\">\tnext：proxypool，自动导入到Clash verge中</span><br><span class=\"line\">\t\t给linux找客户端</span><br><span class=\"line\"></span><br><span class=\"line\">\thttps://mirror.ghproxy.com/https://github.com/zzzgydi/clash-verge/releases/download/v1.3.8/clash-verge_1.3.8_amd64.deb</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\">\tdeb文件包用dpkg安装后，不知道去哪里了，</span><br><span class=\"line\">\thttps://mirror.ghproxy.com/</span><br><span class=\"line\">\t正在下载: https://mirror.ghproxy.com/https://github.com/zzzgydi/clash-verge/releases/download/v1.3.8/clash-verge_1.3.8_amd64.AppImage.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\tclash-meta,卡死</span><br><span class=\"line\">\t\tINFO<span class=\"section\">[2023-11-29T20:58:20.184745908+08:00]</span> Start initial configuration in progress      </span><br><span class=\"line\">\t\tINFO<span class=\"section\">[2023-11-29T20:58:20.187312982+08:00]</span> Geodata Loader mode: memconservative         </span><br><span class=\"line\">\t\tINFO<span class=\"section\">[2023-11-29T20:58:20.191162285+08:00]</span> Initial configuration complete, total time: 6ms </span><br><span class=\"line\">\t\tINFO<span class=\"section\">[2023-11-29T20:58:20.216059686+08:00]</span> Sniffer is closed                            </span><br><span class=\"line\">\t\tINFO<span class=\"section\">[2023-11-29T20:58:20.216252817+08:00]</span> Start initial compatible provider default    </span><br><span class=\"line\">\t\tINFO<span class=\"section\">[2023-11-29T20:58:20.216299376+08:00]</span> Start initial compatible provider loadbalance1 </span><br><span class=\"line\"></span><br><span class=\"line\">\t（后来的思路是：debian 直接运行 Clash Verge）</span><br><span class=\"line\">\t我的debian本来就没有GUI；</span><br><span class=\"line\">\t\t在nas里直接装clash内核就行吧，又不需要gui</span><br><span class=\"line\"></span><br><span class=\"line\">\thttps://github.com/zzzgydi/clash-verge/releases/download/alpha/clash-verge_1.3.8_amd64-debug.deb</span><br><span class=\"line\">\t\t根据@zzzgydi 的建议，下载并安装debug版本。</span><br><span class=\"line\">\t\t版本号为1.3.7时，完成了如下测试：</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t居然在gui的WEB思路下面找到了哦：https://github.com/MetaCubeX/metacubexd/tree/main</span><br><span class=\"line\">\t\t没有GUI，那就WEB的gui啊！</span><br></pre></td></tr></table></figure>\n\n<p>Request failed with status code 405 Method Not Allowed</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BUG</span><br><span class=\"line\">\tzzzgydi/clash-verge </span><br><span class=\"line\">\thttps://github.com/zzzgydi/clash-verge/issues/808</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\tmixed-port: 7890</span><br><span class=\"line\">\tsecret: **********</span><br><span class=\"line\">\texternal-controller: 0.0.0.0:9090</span><br><span class=\"line\"></span><br><span class=\"line\">\t终于按文档配置成功：https://github.com/MetaCubeX/metacubexd/tree/main</span><br><span class=\"line\">\tEnable external-controller in your config file</span><br><span class=\"line\">\t\texternal-controller: 0.0.0.0:9090</span><br><span class=\"line\">\t\tUse pre-built assets from gh-pages branch</span><br><span class=\"line\">\t\tFirst time setup</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tgit clone https://github.com/metacubex/metacubexd.git -b gh-pages /etc/clash-meta/ui</span><br><span class=\"line\">\t\tMake sure you have external-ui directory set correctly in your config file</span><br><span class=\"line\"></span><br><span class=\"line\">\t\texternal-ui: /etc/clash-meta/ui</span><br><span class=\"line\">\tworks great: http://192.168.6.116:9090/<span class=\"comment\">#/config</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t修改后端：http://192.168.6.116:9090/<span class=\"comment\">#/setup</span></span><br><span class=\"line\">\t\thttp://192.168.6.116:9091</span><br><span class=\"line\">\t\t**********</span><br><span class=\"line\">\t对应config.yaml中的配置</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"思路来源及关联\"><a href=\"#思路来源及关联\" class=\"headerlink\" title=\"思路来源及关联\"></a>思路来源及关联</h2><p><a href =\"\">Clash for Windows 设置方法入门(适用于Windows+Mac)</a>)<br><a href =\"/202310011555.html\">go语言学习与应用日志-proxypool</a>)</p>\n<h1 id=\"预览HNet-​\"><a href=\"#预览HNet-​\" class=\"headerlink\" title=\"预览HNet\t\t ​\"></a>预览HNet\t\t ​</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://c.carlzeng.com:3/web\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<hr>\n<h1 id=\"Docker-container-for-Firefox\"><a href=\"#Docker-container-for-Firefox\" class=\"headerlink\" title=\"Docker container for Firefox\"></a>Docker container for Firefox</h1><p>这个方案脑洞大开了，This is a Docker container for Firefox.</p>\n<p>The GUI of the application is accessed through a modern web browser (no installation or configuration needed on the client side) or via any VNC client. Full documentation is available at <a href=\"https://github.com/jlesage/docker-firefox\">https://github.com/jlesage/docker-firefox</a>.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d \\</span><br><span class=\"line\">    --name=firefox \\</span><br><span class=\"line\">    -p 5800:5800 \\</span><br><span class=\"line\">    -v ./firefox_config:/config \\</span><br><span class=\"line\">    jlesage/firefox</span><br><span class=\"line\">    </span><br><span class=\"line\">要用到这个</span><br><span class=\"line\">-e &quot;FF_PREF_HTTP_PROXY=network.proxy.http=\\&quot;proxy.example.com\\&quot;&quot;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &#x27;3&#x27;</span><br><span class=\"line\">services:</span><br><span class=\"line\">  firefox:</span><br><span class=\"line\">    image: jlesage/firefox</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - &quot;5800:5800&quot;</span><br><span class=\"line\">    volumes:</span><br><span class=\"line\">      - &quot;./firefox_config:/config&quot;</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">    \t- &quot;FF_PREF_PROXY_TYPE=network.proxy.type=1&quot;</span><br><span class=\"line\">      - &quot;FF_PREF_HTTP_PROXY=network.proxy.http=192.168.6.116&quot;</span><br><span class=\"line\">      - &quot;FF_PREF_HTTP_PROXY=network.proxy.http_port=7890&quot;</span><br><span class=\"line\">      - &quot;KEEP_APP_RUNNING=1&quot;</span><br><span class=\"line\">      - &quot;LANG=en_US.UTF-8&quot;</span><br><span class=\"line\">      - &quot;FF_OPEN_URL=www.carlzeng.com&quot; #仅个人测试使用</span><br></pre></td></tr></table></figure>\n\n<p>开放5800端口，反代出<a href=\"https://c.carlzeng.com:4443/web2\">https://c.carlzeng.com:4443/web2</a></p>\n<p>配置PROXY的部分参考：<a href=\"https://github.com/zerofox-oss/phishpond/blob/master/docker-compose.yml\">https://github.com/zerofox-oss/phishpond/blob/master/docker-compose.yml</a></p>\n<h2 id=\"怎么用\"><a href=\"#怎么用\" class=\"headerlink\" title=\"怎么用\"></a>怎么用</h2><p>用法和您本地的浏览器用法一样！</p>\n<ol>\n<li>打开<a href=\"https://c.carlzeng.com:4443/web2\">在线浏览器</a></li>\n<li>输入您要访问的网址<ol>\n<li>比如：<a href=\"http://www.google.com/\">www.google.com</a> 回车访问</li>\n<li>或输入：<a href=\"http://www.youtube.com/\">www.youtube.com</a> 回车访问</li>\n</ol>\n</li>\n<li>。。。</li>\n</ol>\n<h3 id=\"已知问题\"><a href=\"#已知问题\" class=\"headerlink\" title=\"已知问题\"></a>已知问题</h3><p>访问的网页中，中文的编码还有问题，无法正常显示中文</p>\n<h3 id=\"IOS端（iPad）-1\"><a href=\"#IOS端（iPad）-1\" class=\"headerlink\" title=\"IOS端（iPad）\"></a>IOS端（iPad）</h3><p>Safari浏览器，显示不是太正常；无法正常使用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">参数介绍</span></span><br><span class=\"line\">-e TZ=Asia/Hong_Kong       # 设置时区</span><br><span class=\"line\">-e DISPLAY_WIDTH=1920</span><br><span class=\"line\">-e DISPLAY_HEIGHT=1080     #设置显示的高宽</span><br><span class=\"line\">-e KEEP_APP_RUNNING=1      # 保持启动状态</span><br><span class=\"line\">-e ENABLE_CJK_FONT=1       # 防止显示页面时中文乱码</span><br><span class=\"line\">-e SECURE_CONNECTION=1     # 启用HTTPS功能</span><br><span class=\"line\">-e VNC_PASSWORD=admin  #设置VNC的访问密码,自定义即可</span><br><span class=\"line\">-p 5800:5800               #访问firefox的web端口</span><br><span class=\"line\">-p 5900:5900               #VNC端口</span><br><span class=\"line\">-v /data/irefox/config:/config:rw         # 容器挂载目录，存放firefox数据</span><br><span class=\"line\">--shm-size 2g               # 设置容器的内存资源为2g </span><br></pre></td></tr></table></figure>\n\n<h1 id=\"预览Firefox\"><a href=\"#预览Firefox\" class=\"headerlink\" title=\"预览Firefox\"></a>预览Firefox</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://c.carlzeng.com:3/web2\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n\n\n<p>中文字符的问题，实在无法接受</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://hub.docker.com/r/ich777/firefox 已测试，无效，卡住：</span><br><span class=\"line\">firefox  | ---Starting...---</span><br><span class=\"line\">firefox  | ---Firefox not installed, installing---</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://1024.ee/2020/07/23/docker%E8%99%9A%E6%8B%9F%E6%B5%8F%E8%A7%88%E5%99%A8-%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%9A%84%E8%BF%9C%E7%A8%8B%E6%B5%8F%E8%A7%88%E5%99%A8/\">https://1024.ee/2020/07/23/docker%E8%99%9A%E6%8B%9F%E6%B5%8F%E8%A7%88%E5%99%A8-%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E7%9A%84%E8%BF%9C%E7%A8%8B%E6%B5%8F%E8%A7%88%E5%99%A8/</a></p>\n<h2 id=\"m1k1o-neko\"><a href=\"#m1k1o-neko\" class=\"headerlink\" title=\"m1k1o&#x2F;neko\"></a>m1k1o&#x2F;neko</h2><p>By <a href=\"https://hub.docker.com/u/m1k1o\">m1k1o</a> • Updated 6 days ago</p>\n<p>Fork of <a href=\"https://github.com/nurdism/neko/\">https://github.com/nurdism/neko/</a> </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &quot;2.0&quot;</span><br><span class=\"line\">services:</span><br><span class=\"line\">  neko:</span><br><span class=\"line\">    image: nurdism/neko:firefox</span><br><span class=\"line\">    restart: always</span><br><span class=\"line\">    shm_size: &quot;1gb&quot;</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - &quot;5880:8080&quot;</span><br><span class=\"line\">      - &quot;59000-59100:59000-59100/udp&quot;</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      DISPLAY: :99.0</span><br><span class=\"line\">      NEKO_PASSWORD: neko</span><br><span class=\"line\">      NEKO_PASSWORD_ADMIN: admin</span><br><span class=\"line\">      NEKO_BIND: :8080</span><br><span class=\"line\">      NEKO_EPR: 59000-59100</span><br></pre></td></tr></table></figure>\n\n<p>显示UI，但是，无法正常登陆;  继续尝试下面的新版本：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &quot;3.4&quot;</span><br><span class=\"line\">services:</span><br><span class=\"line\">  neko:</span><br><span class=\"line\">    image: &quot;m1k1o/neko:firefox&quot;</span><br><span class=\"line\">    restart: &quot;unless-stopped&quot;</span><br><span class=\"line\">    shm_size: &quot;2gb&quot;</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - &quot;8080:8080&quot;</span><br><span class=\"line\">      - &quot;52000-52100:52000-52100/udp&quot;</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      NEKO_SCREEN: 1920x1080@30</span><br><span class=\"line\">      NEKO_PASSWORD: neko</span><br><span class=\"line\">      NEKO_PASSWORD_ADMIN: admin</span><br><span class=\"line\">      NEKO_EPR: 52000-52100</span><br><span class=\"line\">      NEKO_ICELITE: 1</span><br><span class=\"line\">      </span><br><span class=\"line\">以及</span><br><span class=\"line\">version: &quot;3.4&quot;</span><br><span class=\"line\">services:</span><br><span class=\"line\">  neko:</span><br><span class=\"line\">    image: &quot;m1k1o/neko:chromium&quot;</span><br><span class=\"line\">    restart: &quot;unless-stopped&quot;</span><br><span class=\"line\">    shm_size: &quot;2gb&quot;</span><br><span class=\"line\">    ports:</span><br><span class=\"line\">      - &quot;5800:8080&quot;</span><br><span class=\"line\">      - &quot;52000-52100:52000-52100/udp&quot;</span><br><span class=\"line\">    environment:</span><br><span class=\"line\">      NEKO_SCREEN: 1920x1080@30</span><br><span class=\"line\">      NEKO_PASSWORD: admin</span><br><span class=\"line\">      NEKO_PASSWORD_ADMIN: admin</span><br><span class=\"line\">      NEKO_EPR: 52000-52100</span><br></pre></td></tr></table></figure>\n\n<p>都是一样无法登陆，尴尬了</p>\n<p>放弃其他方案（很可能是需要默认就在墙外的情况，不适合与家宽的大背景环境）；</p>\n<p>最终还是回到了Firefox的怀抱</p>\n<p>参考了<a href=\"https://www.cpolar.com/blog/docker-deploys-firefox-browser-locally-and-remotely-accesses-it\">Docker本地部署Firefox火狐浏览器并远程访问</a>里面的参数，解决了中文乱码的问题。-e ENABLE_CJK_FONT&#x3D;1       # 防止显示页面时中文乱码</p>\n<hr>\n<h1 id=\"Tor-Browser\"><a href=\"#Tor-Browser\" class=\"headerlink\" title=\"Tor-Browser\"></a>Tor-Browser</h1><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">docker</span> <span class=\"string\">run</span> <span class=\"string\">-it</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">-v</span> <span class=\"string\">./tmp:/tmp/.X11-unix</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">-e</span> <span class=\"string\">DISPLAY=unix$DISPLAY</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">--device</span> <span class=\"string\">/dev/snd</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">--name</span> <span class=\"string\">tor-browser</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">jess/tor-browser</span></span><br><span class=\"line\">    </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&quot;3&quot;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">    <span class=\"attr\">tor-browser:</span></span><br><span class=\"line\">        <span class=\"attr\">stdin_open:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">tty:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">volumes:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">/tmp:/tmp/.X11-unix</span></span><br><span class=\"line\">        <span class=\"attr\">environment:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">DISPLAY=unix$DISPLAY</span></span><br><span class=\"line\">        <span class=\"attr\">devices:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">/dev/snd</span></span><br><span class=\"line\">        <span class=\"attr\">container_name:</span> <span class=\"string\">tor-browser</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">jess/tor-browser</span></span><br></pre></td></tr></table></figure>\n\n<p>Tor Browser must be run within the X Window System.                                                          </p>\n<h1 id=\"NAS中的BrowserBox\"><a href=\"#NAS中的BrowserBox\" class=\"headerlink\" title=\"NAS中的BrowserBox\"></a>NAS中的BrowserBox</h1><p>找了一下BrowserBox</p>\n<p><a href=\"https://github.com/BrowserBox/BrowserBox?tab=readme-ov-file#docker-quick-start-gem-version-6\">https://github.com/BrowserBox/BrowserBox?tab=readme-ov-file#docker-quick-start-gem-version-6</a></p>\n<p>不知道这个docker pull下来又多大；</p>\n<p>看了一下安装的<a href=\"https://raw.githubusercontent.com/BrowserBox/BrowserBox/2e8a085931b719e5cadf24dd2942194433d5ae7f/deploy-scripts/run_docker.sh\">。sh文件</a>需要申请证书的步骤&#x2F;动作，没有改动之前不适合我的环境；</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull ghcr.io/browserbox/browserbox:v6.2</span><br></pre></td></tr></table></figure>\n\n\n\n<p>还是切到黑群中的BrowserBox, 举例说明：<a href=\"https://xywnas.com/?p=1889\">https://xywnas.com/?p=1889</a></p>","categories":[{"name":"在线网页代理","path":"api/categories/在线网页代理.json"}],"tags":[{"name":"docker","path":"api/tags/docker.json"},{"name":"docker-compose","path":"api/tags/docker-compose.json"},{"name":"J4125","path":"api/tags/J4125.json"},{"name":"HNet","path":"api/tags/HNet.json"},{"name":"家宽","path":"api/tags/家宽.json"},{"name":"firefox","path":"api/tags/firefox.json"},{"name":"虚拟浏览器","path":"api/tags/虚拟浏览器.json"}]}