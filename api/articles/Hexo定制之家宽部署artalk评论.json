{"title":"Hexo定制之家宽部署artalk评论","slug":"Hexo定制之家宽部署artalk评论","date":"2023-10-26T04:22:41.000Z","updated":"2023-12-13T07:15:18.189Z","comments":true,"path":"api/articles/Hexo定制之家宽部署artalk评论.json","excerpt":" [Figure] 网站部署artalk评论系统，接收用户评论","covers":null,"content":"<img class=\"lozad\" data-src='https://www.evernote.com/shard/s122/sh/3e6145c0-e60c-4484-978d-77c4fc794bf0/xZsj26mfamXYoqTFCRfXyVIHPi2gNUfF_3UuDZAv0W-ilz5vBxltD0dzLQ/deep/0/image.png'>\n网站部署artalk评论系统，接收用户评论\n<span id=\"more\"></span>\n\n\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><p>hexo部署Artalk<br>用J4125里面的宝塔面板的Docker</p>\n<p>宝塔在debian服务器上<br>debian服务器上镜像Docker对应目录&#x2F;data&#x2F;artalk</p>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p>从源文档默认使用docker -d 方式运行；服务器几次重启后，发现每次都需要手动去运行，很麻烦（也导致服务中断）<br>改用下面的Docker Compose的方式部署<br>20231119 重启整个J4125，仍然无效; 一设置如下修改指令，等待未来再次测试</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#已启动容器通过 docker update 对设置 restart 选项</span><br><span class=\"line\">docker update --restart=always artalk</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Docker-Compose-部署\"><a href=\"#Docker-Compose-部署\" class=\"headerlink\" title=\"Docker Compose 部署\"></a>Docker Compose 部署</h2><p>SSH里面：<br>cd 切换到想要安装artalk的数据目录<br>提供 docker-compose.yaml 文件可供参考：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&quot;3.5&quot;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">artalk:</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">artalk</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">artalk/artalk-go</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"number\">8282</span><span class=\"string\">:23366</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">./data/artalk:/data</span></span><br></pre></td></tr></table></figure>\n\n<p>在与配置文件相同的目录执行命令创建容器：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"一些-Docker-Compose-常用命令\"><a href=\"#一些-Docker-Compose-常用命令\" class=\"headerlink\" title=\"一些 Docker Compose 常用命令\"></a>一些 Docker Compose 常用命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose restart  <span class=\"comment\"># 重启容器</span></span><br><span class=\"line\">docker-compose stop     <span class=\"comment\"># 暂停容器</span></span><br><span class=\"line\">docker-compose down     <span class=\"comment\"># 删除容器</span></span><br><span class=\"line\">docker-compose pull     <span class=\"comment\"># 更新镜像</span></span><br><span class=\"line\">docker-compose <span class=\"built_in\">exec</span> artalk bash <span class=\"comment\"># 进入容器</span></span><br></pre></td></tr></table></figure>\n\n<p>carlzeng@Debian11:&#x2F;data&#x2F;artalk$ ls<br>artalk.db  artalk.yml</p>\n<p><a href=\"http://192.168.@@@:82/sidebar/#/login\">http://192.168.@@@:82/sidebar/#/login</a></p>\n<p>carlzeng@Debian11:&#x2F;$ docker exec -it artalk artalk admin<br>permission denied while trying to connect to the Docker daemon socket at unix:&#x2F;&#x2F;&#x2F;var&#x2F;run&#x2F;docker.sock: Get “http:&#x2F;&#x2F;%2Fvar%2Frun%2Fdocker.sock&#x2F;v1.24&#x2F;containers&#x2F;artalk&#x2F;json”: dial unix &#x2F;var&#x2F;run&#x2F;docker.sock: connect: permission denied<br>carlzeng@Debian11:&#x2F;$ su<br>Password:<br>root@Debian11:&#x2F;# docker exec -it artalk artalk admin<br>Error response from daemon: No such container: artalk</p>\n<p>检测了BT面板里面的artalk容器配置，发现异常如下：<br>“Name” : “&#x2F;q18qdroglehghc”,</p>\n<p>用第二种方法：直接在ssh中输入docker命令</p>\n<p>在root的根目录下执行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d \\</span><br><span class=\"line\">  --name artalk \\</span><br><span class=\"line\">  -p 8282:23366 \\</span><br><span class=\"line\">  -v /data/artalk:/data \\</span><br><span class=\"line\">  artalk/artalk-go</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#每次服务器重启都要手动运行（如果想避免这样就用docker-compose方案）：</span><br><span class=\"line\">docker start artalk</span><br><span class=\"line\"></span><br><span class=\"line\">#切换使用docker-compose</span><br><span class=\"line\"># /data目录下新建yml文件</span><br><span class=\"line\">docker-compose -f artalk.yml up -d</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it artalk artalk admin</span><br><span class=\"line\"></span><br><span class=\"line\">WARN[0000] 未找到 IP 数据库文件：&quot;./data/ip2region.xdb&quot;，IP 归属地功能已禁用，参考链接：https://artalk.js.org/guide/frontend/ip-region.html</span><br><span class=\"line\">--------------------------------</span><br><span class=\"line\"> Create admin account</span><br><span class=\"line\">--------------------------------</span><br><span class=\"line\">Enter Username: ***</span><br><span class=\"line\">Enter Email: zeng.@icloud.com</span><br><span class=\"line\">Enter Password: </span><br><span class=\"line\">Retype Password: </span><br><span class=\"line\">--------------------------------</span><br><span class=\"line\">  Name: ***</span><br><span class=\"line\">  Mail: zeng.@icloud.com</span><br><span class=\"line\">--------------------------------</span><br></pre></td></tr></table></figure>\n\n<p>可以在正常在本地提交评论<a href=\"http://localhost:4000/blog/202309222344.html#Next\">http://localhost:4000/blog/202309222344.html#Next</a><br>下一步：</p>\n<h2 id=\"添加到NexT的页脚模版comment位置\"><a href=\"#添加到NexT的页脚模版comment位置\" class=\"headerlink\" title=\"添加到NexT的页脚模版comment位置\"></a>添加到NexT的页脚模版comment位置</h2><pre><code>done, added in comments.njk\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;%- if page.comments %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- CSS --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://cdn.bootcdn.net/ajax/libs/artalk/2.6.4/Artalk.css&quot;</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- JS --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.bootcdn.net/ajax/libs/artalk/2.6.4/Artalk.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- Artalk --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;Comments&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Artalk</span>.<span class=\"title function_\">init</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">el</span>:        <span class=\"string\">&#x27;#Comments&#x27;</span>,               <span class=\"comment\">// 绑定元素的 Selector</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">pageKey</span>:   <span class=\"string\">&#x27;&#x27;</span>,                          <span class=\"comment\">// 固定链接 (留空自动获取)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">pageTitle</span>: <span class=\"string\">&#x27;&#x27;</span>,                          <span class=\"comment\">// 页面标题 (留空自动获取)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">server</span>:    <span class=\"string\">&#x27;http://192.168.@@@:82&#x27;</span>,  <span class=\"comment\">// 后端地址</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">site</span>:      <span class=\"string\">&#x27;@@@@ Notes - Local&#x27;</span>,         <span class=\"comment\">// 你的站点名</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  ....</span><br></pre></td></tr></table></figure>\n.post-nav &#123; border-bottom: 20px solid $gainsboro;\n\n\n目前的局限：打开页面以后需要二次刷新页面才会出现评论\n</code></pre>\n<h2 id=\"修改NexT的电脑端背景色为白色，（同步于手机端样式）\"><a href=\"#修改NexT的电脑端背景色为白色，（同步于手机端样式）\" class=\"headerlink\" title=\"修改NexT的电脑端背景色为白色，（同步于手机端样式）\"></a>修改NexT的电脑端背景色为白色，（同步于手机端样式）</h2><pre><code>修改配置文件 darkmode: false\n</code></pre>\n<h2 id=\"映射或反向代理，提供给外网使用：https-chuanzhuo-github-io-blog\"><a href=\"#映射或反向代理，提供给外网使用：https-chuanzhuo-github-io-blog\" class=\"headerlink\" title=\"映射或反向代理，提供给外网使用：https://chuanzhuo.github.io/blog/\"></a>映射或反向代理，提供给外网使用：<a href=\"https://chuanzhuo.github.io/blog/\">https://chuanzhuo.github.io/blog/</a></h2><pre><code>如何给docker中的服务配置二级域名？\nhttps页面可否嵌入http服务？\n    需要升级到https\n    Nginx Proxy Manager也可以代劳\n\n家宽如何使用Nginx Proxy Manager反向代理 - YouTube https://vt.wooomooo.com/?p=67689\n材料清单\n    家宽+公网IP\n    一级域名？\n\n反向代理步骤\n    1. 进入Nginx Proxy Manager官网，获取docker-compose.yml配置文件（需保存为这个文件名）\n    1. 到这个docker-compose.yml文件的目录下，执行：docker-compose up -d\n        /www/server/panel/data/compose/NginxPorxyManager/template\n    1. 进入Nginx Proxy Manager 后台 \n        http://192.168.@@@:81/login\n    1. 端口转发\n        这里的880和4443就是刚才在配置服务器的端口\n        openwrt端口转发设置方法\n        依次找到：网络–&gt; 防火墙–&gt; 端口转发。\n        在新建端口转发设置栏中，输入你要转发的IP、端口和协议等内容。\n        点击保存&amp;应用便可即时生效。\n        配置好以后，可以用外网IP访问转发的两个端口：\n            http://123.118.31.119:880/\n            http://123.118.31.119:4443/\n    1. 特定域名\n        A记录\n\n    1. 配置New Proxy Host 在 Nginx Proxy Manager 后台    \n        新增一条a.goodday.cc指向http://192.168.@@@:82\n\n\n访问http://a.goodday.cc:880/\nhttp://a.goodday.cc:4443/\n错误：\n    504 Gateway Time-out\n    openresty\n\n很大可能现在面临的问题是letsencrypt.org无法成功申请证书\n有没有其他的SSL免费证书可用？\n\n\nhttps://a.goodday.cc:4443/\n错误：\n    This site can’t be reachedThe webpage at https://a.goodday.cc:4443/ might be temporarily down or it may have moved permanently to a new web address.\n    ERR_SSL_UNRECOGNIZED_NAME_ALERT\n\n转换思路，取得域名\n成功切换至域名（CF控制的 carlzeng.top）\n    https://sharedblog.net/posts/2022-09-28-github-pages-custom-domain-name/\n\n关闭DNS \\*泛解析 A记录 的 ‘代理’，才能正常连接到NginxProxyManager的特点端口\n等待生效后，方可正常\n</code></pre>\n<h2 id=\"替换表情包\"><a href=\"#替换表情包\" class=\"headerlink\" title=\"替换表情包\"></a>替换表情包</h2><pre><code>替换原来的https://cdn.jsdelivr.net/gh/ArtalkJS/Emoticons/grps/default.json\n新的：https://cdn.klyang.com/json/emo.json\n</code></pre>\n<h2 id=\"一有多几个人同时访问时，artalk就奔溃了，如何解决？\"><a href=\"#一有多几个人同时访问时，artalk就奔溃了，如何解决？\" class=\"headerlink\" title=\"一有多几个人同时访问时，artalk就奔溃了，如何解决？\"></a>一有多几个人同时访问时，artalk就奔溃了，如何解决？</h2><pre><code>    Artalk Error\n    Error: 请求超时或意外终止，无法获取评论列表数据\n    点击重新获取\nping artalk.carlzeng.top -c4\nPING artalk.carlzeng.top (172.67.@@@): 56 data bytes\n本机是这种情况，用联通4G网络就能正常访问artalk评论\n\n解决办法：在4G环境下，用管理员登录控制中心，应用一下配置；\n重新回到电脑，就正常了，匪夷所思\n\n根据ping结果可知，域名对应的IP正确了；而一段时间后又会变成CF？\nping artalk.carlzeng.top -c4\nPING artalk.carlzeng.top (123.119.@@@): 56 data bytes\n</code></pre>\n<h2 id=\"Artalk置入博客\"><a href=\"#Artalk置入博客\" class=\"headerlink\" title=\"Artalk置入博客\"></a>Artalk置入博客</h2><pre><code>不要自己修改NexT，测试使用插件：Artalk comment plugin for Hexo NexT\nhttps://github.com/leirock/hexo-next-artalk\n\nnpm install hexo-next-artalk\n\n这个插件方案可能可以解决，首页也会冒出评论框的尴尬。\n    &lt;script&gt;\n    Artalk.init(&#123;\n      el:        &#39;#Comments&#39;,\n      pageKey:   &#39;&#123;&#123;page.permalink&#125;&#125;&#39;,\n      pageTitle: &#39;&#123;&#123;page.title&#125;&#125;&#39;,\n      server:    &#39;&#123;&#123;theme.post_artalkserver&#125;&#125;&#39;,\n      site:      &#39;@@@@ Notes&#39;\n    &#125;)\n    &lt;/script&gt;\n\n&lt;!-- CSS.comments --&gt;\n  &lt;link href=&quot;https://cdn.bootcdn.net/ajax/libs/artalk/2.6.4/Artalk.css&quot; rel=&quot;stylesheet&quot;&gt;\n&lt;!-- JS.comments --&gt;\n  &lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/artalk/2.6.4/Artalk.js&quot;&gt;&lt;/script&gt;\n\n  &lt;span class=&quot;post-meta-item&quot;&gt;\n    &lt;span class=&quot;post-meta-break&quot;&gt;&lt;/span&gt;\n    &lt;span class=&quot;post-meta-item-text&quot;&gt;评论数&#123;&#123;__('symbol.colon')&#125;&#125;&lt;/span&gt;\n    &lt;span id=&quot;ArtalkCount&quot;&gt;&lt;/span&gt;\n  &lt;/span&gt;\n</code></pre>\n<h1 id=\"DDNS自动更新域名的最新IP地址\"><a href=\"#DDNS自动更新域名的最新IP地址\" class=\"headerlink\" title=\"DDNS自动更新域名的最新IP地址\"></a>DDNS自动更新域名的最新IP地址</h1><img class=\"lozad\" data-src='https://www.evernote.com/shard/s122/sh/62d9a792-bb54-473f-a1e2-34feebae3a57/Bp2GY1StVwk23AQvse06RpwOBSWdQnuBad01TqD2pNg8RwbZSdLpzyGC3w/deep/0/image.png'>\n\n<pre><code>新增一条：动态DNS 服务项 » CF_carlzeng_top\n</code></pre>\n<p>检查日志：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">091427       : Registered IP &#x27;202.89.@@&#x27; detected</span><br><span class=\"line\">091427  info : Starting main loop at 2023-11-03 09:14</span><br><span class=\"line\">091427       : Detect current IP on &#x27;network&#x27;</span><br><span class=\"line\">091427       : Current IP &#x27;221.218.@@&#x27; detected on network &#x27;vwan3&#x27;</span><br><span class=\"line\">091427       : Update needed - L: &#x27;221.218.@@&#x27; &lt;&gt; R: &#x27;202.89.@@&#x27;</span><br><span class=\"line\">091427       : parsing script &#x27;/usr/lib/ddns/update_cloudflare_com_v4.sh&#x27;</span><br><span class=\"line\">091427       : #&gt; /usr/bin/curl -RsS -o /var/run/ddns/CF_carlzeng_top.dat --stderr /var/run/ddns/CF_carlzeng_top.err --noproxy &#x27;*&#x27; --header &#x27;X-Auth-Email: @@@@163.com&#x27;  --header &#x27;X-Auth-Key: ***PW***&#x27;  --header &#x27;Content-Type: application/json&#x27;  --request GET &#x27;https://api.cloudflare.com/client/v4/zones?name=carlzeng.top&#x27;</span><br><span class=\"line\">091428  WARN : CloudFlare reported an error:</span><br><span class=\"line\">091428       : &#123;&quot;success&quot;:false,&quot;errors&quot;:[&#123;&quot;code&quot;:6003,&quot;message&quot;:&quot;Invalid request headers&quot;,&quot;error_chain&quot;:[&#123;&quot;code&quot;:6103,&quot;message&quot;:&quot;Invalid format for X-Auth-Key header&quot;&#125;]&#125;],&quot;messages&quot;:[],&quot;result&quot;:null&#125;</span><br><span class=\"line\">091428 ERROR : IP update not accepted by DDNS Provider</span><br><span class=\"line\">091428       : Waiting 3600 seconds (Check Interval)</span><br></pre></td></tr></table></figure>\n<pre><code>update_cloudflare_com_v4.sh\n</code></pre>\n<h2 id=\"Cloudflare-DNS-API\"><a href=\"#Cloudflare-DNS-API\" class=\"headerlink\" title=\"Cloudflare DNS API\"></a>Cloudflare DNS API</h2><p>用户 API 令牌<br>        编辑区域 DNS API 令牌已成功创建<br>        复制此令牌以访问 Cloudflare API。为安全起见，将不再显示此令牌。了解更多<br>        7u0Y_5-t_TTn1biQDfdtHgohbE3l@@@@@@。一下为Cloudflare给出的例子：</p>\n<pre><code>curl -X GET &quot;https://api.cloudflare.com/client/v4/user/tokens/verify&quot; \\\n -H &quot;Authorization: Bearer 7u0Y_5-t_TTn1biQDfd@@@@@@&quot; \\\n -H &quot;Content-Type:application/json&quot; \n\nDNS TOKEN: 7u0Y_5-t_TTn1biQDfdtHg@@@@@@\n</code></pre>\n<p>10:36am 回归源头错误：<br>    code”:6103,”message”:”Invalid format for X-Auth-Key header</p>\n<p>比对了Openwrt中的源文件：<br>        ‘&#x2F;usr&#x2F;lib&#x2F;ddns&#x2F;update_cloudflare_com_v4.sh’<br>        <a href=\"https://github.com/msva/openwrt-packages/blob/master/net/ddns-scripts/files/update_cloudflare_com_v4.sh\">https://github.com/msva/openwrt-packages/blob/master/net/ddns-scripts/files/update_cloudflare_com_v4.sh</a><br>    发现我Openwrt中的.sh文件已经是最新版，看来还是配置出问题了。</p>\n<pre><code>检查.sh源文件，发现的解决问题的办法：\n用户名需要使用： Bearer\n密码使用：API Token，编辑区域 DNS API 令牌已成功创建\n\ncarlzeng.top\n10:52am works great in log.\n    both ddns setup works\n\n优化：查询主机名 最好是填写DDNS挂的解析域名，这样用于判断DDNS是否需要callAPI来更新IP最新的ADSL IP地址。\n修改以后，需要点击“重新加载”来更新界面中的“已注册的IP地址“。发现这个LIST设计得很人性化，直观：上次更新，下次更新，查询主机名，已注册的IP地址，运行中的进程PID\n优化脚本运行周期：\n每小时检查自己DDNS域名的特定记录，检查IP地址和DDNS域名是否一致。\n每天强制推送更新，即便IP没有变动\n</code></pre>\n","more":"<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><p>hexo部署Artalk<br>用J4125里面的宝塔面板的Docker</p>\n<p>宝塔在debian服务器上<br>debian服务器上镜像Docker对应目录&#x2F;data&#x2F;artalk</p>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p>从源文档默认使用docker -d 方式运行；服务器几次重启后，发现每次都需要手动去运行，很麻烦（也导致服务中断）<br>改用下面的Docker Compose的方式部署<br>20231119 重启整个J4125，仍然无效; 一设置如下修改指令，等待未来再次测试</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#已启动容器通过 docker update 对设置 restart 选项</span><br><span class=\"line\">docker update --restart=always artalk</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Docker-Compose-部署\"><a href=\"#Docker-Compose-部署\" class=\"headerlink\" title=\"Docker Compose 部署\"></a>Docker Compose 部署</h2><p>SSH里面：<br>cd 切换到想要安装artalk的数据目录<br>提供 docker-compose.yaml 文件可供参考：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&quot;3.5&quot;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">artalk:</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">artalk</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">artalk/artalk-go</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"number\">8282</span><span class=\"string\">:23366</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">./data/artalk:/data</span></span><br></pre></td></tr></table></figure>\n\n<p>在与配置文件相同的目录执行命令创建容器：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"一些-Docker-Compose-常用命令\"><a href=\"#一些-Docker-Compose-常用命令\" class=\"headerlink\" title=\"一些 Docker Compose 常用命令\"></a>一些 Docker Compose 常用命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose restart  <span class=\"comment\"># 重启容器</span></span><br><span class=\"line\">docker-compose stop     <span class=\"comment\"># 暂停容器</span></span><br><span class=\"line\">docker-compose down     <span class=\"comment\"># 删除容器</span></span><br><span class=\"line\">docker-compose pull     <span class=\"comment\"># 更新镜像</span></span><br><span class=\"line\">docker-compose <span class=\"built_in\">exec</span> artalk bash <span class=\"comment\"># 进入容器</span></span><br></pre></td></tr></table></figure>\n\n<p>carlzeng@Debian11:&#x2F;data&#x2F;artalk$ ls<br>artalk.db  artalk.yml</p>\n<p><a href=\"http://192.168.@@@:82/sidebar/#/login\">http://192.168.@@@:82/sidebar/#/login</a></p>\n<p>carlzeng@Debian11:&#x2F;$ docker exec -it artalk artalk admin<br>permission denied while trying to connect to the Docker daemon socket at unix:&#x2F;&#x2F;&#x2F;var&#x2F;run&#x2F;docker.sock: Get “http:&#x2F;&#x2F;%2Fvar%2Frun%2Fdocker.sock&#x2F;v1.24&#x2F;containers&#x2F;artalk&#x2F;json”: dial unix &#x2F;var&#x2F;run&#x2F;docker.sock: connect: permission denied<br>carlzeng@Debian11:&#x2F;$ su<br>Password:<br>root@Debian11:&#x2F;# docker exec -it artalk artalk admin<br>Error response from daemon: No such container: artalk</p>\n<p>检测了BT面板里面的artalk容器配置，发现异常如下：<br>“Name” : “&#x2F;q18qdroglehghc”,</p>\n<p>用第二种方法：直接在ssh中输入docker命令</p>\n<p>在root的根目录下执行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d \\</span><br><span class=\"line\">  --name artalk \\</span><br><span class=\"line\">  -p 8282:23366 \\</span><br><span class=\"line\">  -v /data/artalk:/data \\</span><br><span class=\"line\">  artalk/artalk-go</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#每次服务器重启都要手动运行（如果想避免这样就用docker-compose方案）：</span><br><span class=\"line\">docker start artalk</span><br><span class=\"line\"></span><br><span class=\"line\">#切换使用docker-compose</span><br><span class=\"line\"># /data目录下新建yml文件</span><br><span class=\"line\">docker-compose -f artalk.yml up -d</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it artalk artalk admin</span><br><span class=\"line\"></span><br><span class=\"line\">WARN[0000] 未找到 IP 数据库文件：&quot;./data/ip2region.xdb&quot;，IP 归属地功能已禁用，参考链接：https://artalk.js.org/guide/frontend/ip-region.html</span><br><span class=\"line\">--------------------------------</span><br><span class=\"line\"> Create admin account</span><br><span class=\"line\">--------------------------------</span><br><span class=\"line\">Enter Username: ***</span><br><span class=\"line\">Enter Email: zeng.@icloud.com</span><br><span class=\"line\">Enter Password: </span><br><span class=\"line\">Retype Password: </span><br><span class=\"line\">--------------------------------</span><br><span class=\"line\">  Name: ***</span><br><span class=\"line\">  Mail: zeng.@icloud.com</span><br><span class=\"line\">--------------------------------</span><br></pre></td></tr></table></figure>\n\n<p>可以在正常在本地提交评论<a href=\"http://localhost:4000/blog/202309222344.html#Next\">http://localhost:4000/blog/202309222344.html#Next</a><br>下一步：</p>\n<h2 id=\"添加到NexT的页脚模版comment位置\"><a href=\"#添加到NexT的页脚模版comment位置\" class=\"headerlink\" title=\"添加到NexT的页脚模版comment位置\"></a>添加到NexT的页脚模版comment位置</h2><pre><code>done, added in comments.njk\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;%- if page.comments %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- CSS --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://cdn.bootcdn.net/ajax/libs/artalk/2.6.4/Artalk.css&quot;</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- JS --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://cdn.bootcdn.net/ajax/libs/artalk/2.6.4/Artalk.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- Artalk --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;Comments&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title class_\">Artalk</span>.<span class=\"title function_\">init</span>(&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">el</span>:        <span class=\"string\">&#x27;#Comments&#x27;</span>,               <span class=\"comment\">// 绑定元素的 Selector</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">pageKey</span>:   <span class=\"string\">&#x27;&#x27;</span>,                          <span class=\"comment\">// 固定链接 (留空自动获取)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">pageTitle</span>: <span class=\"string\">&#x27;&#x27;</span>,                          <span class=\"comment\">// 页面标题 (留空自动获取)</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">server</span>:    <span class=\"string\">&#x27;http://192.168.@@@:82&#x27;</span>,  <span class=\"comment\">// 后端地址</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"attr\">site</span>:      <span class=\"string\">&#x27;@@@@ Notes - Local&#x27;</span>,         <span class=\"comment\">// 你的站点名</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  ....</span><br></pre></td></tr></table></figure>\n.post-nav &#123; border-bottom: 20px solid $gainsboro;\n\n\n目前的局限：打开页面以后需要二次刷新页面才会出现评论\n</code></pre>\n<h2 id=\"修改NexT的电脑端背景色为白色，（同步于手机端样式）\"><a href=\"#修改NexT的电脑端背景色为白色，（同步于手机端样式）\" class=\"headerlink\" title=\"修改NexT的电脑端背景色为白色，（同步于手机端样式）\"></a>修改NexT的电脑端背景色为白色，（同步于手机端样式）</h2><pre><code>修改配置文件 darkmode: false\n</code></pre>\n<h2 id=\"映射或反向代理，提供给外网使用：https-chuanzhuo-github-io-blog\"><a href=\"#映射或反向代理，提供给外网使用：https-chuanzhuo-github-io-blog\" class=\"headerlink\" title=\"映射或反向代理，提供给外网使用：https://chuanzhuo.github.io/blog/\"></a>映射或反向代理，提供给外网使用：<a href=\"https://chuanzhuo.github.io/blog/\">https://chuanzhuo.github.io/blog/</a></h2><pre><code>如何给docker中的服务配置二级域名？\nhttps页面可否嵌入http服务？\n    需要升级到https\n    Nginx Proxy Manager也可以代劳\n\n家宽如何使用Nginx Proxy Manager反向代理 - YouTube https://vt.wooomooo.com/?p=67689\n材料清单\n    家宽+公网IP\n    一级域名？\n\n反向代理步骤\n    1. 进入Nginx Proxy Manager官网，获取docker-compose.yml配置文件（需保存为这个文件名）\n    1. 到这个docker-compose.yml文件的目录下，执行：docker-compose up -d\n        /www/server/panel/data/compose/NginxPorxyManager/template\n    1. 进入Nginx Proxy Manager 后台 \n        http://192.168.@@@:81/login\n    1. 端口转发\n        这里的880和4443就是刚才在配置服务器的端口\n        openwrt端口转发设置方法\n        依次找到：网络–&gt; 防火墙–&gt; 端口转发。\n        在新建端口转发设置栏中，输入你要转发的IP、端口和协议等内容。\n        点击保存&amp;应用便可即时生效。\n        配置好以后，可以用外网IP访问转发的两个端口：\n            http://123.118.31.119:880/\n            http://123.118.31.119:4443/\n    1. 特定域名\n        A记录\n\n    1. 配置New Proxy Host 在 Nginx Proxy Manager 后台    \n        新增一条a.goodday.cc指向http://192.168.@@@:82\n\n\n访问http://a.goodday.cc:880/\nhttp://a.goodday.cc:4443/\n错误：\n    504 Gateway Time-out\n    openresty\n\n很大可能现在面临的问题是letsencrypt.org无法成功申请证书\n有没有其他的SSL免费证书可用？\n\n\nhttps://a.goodday.cc:4443/\n错误：\n    This site can’t be reachedThe webpage at https://a.goodday.cc:4443/ might be temporarily down or it may have moved permanently to a new web address.\n    ERR_SSL_UNRECOGNIZED_NAME_ALERT\n\n转换思路，取得域名\n成功切换至域名（CF控制的 carlzeng.top）\n    https://sharedblog.net/posts/2022-09-28-github-pages-custom-domain-name/\n\n关闭DNS \\*泛解析 A记录 的 ‘代理’，才能正常连接到NginxProxyManager的特点端口\n等待生效后，方可正常\n</code></pre>\n<h2 id=\"替换表情包\"><a href=\"#替换表情包\" class=\"headerlink\" title=\"替换表情包\"></a>替换表情包</h2><pre><code>替换原来的https://cdn.jsdelivr.net/gh/ArtalkJS/Emoticons/grps/default.json\n新的：https://cdn.klyang.com/json/emo.json\n</code></pre>\n<h2 id=\"一有多几个人同时访问时，artalk就奔溃了，如何解决？\"><a href=\"#一有多几个人同时访问时，artalk就奔溃了，如何解决？\" class=\"headerlink\" title=\"一有多几个人同时访问时，artalk就奔溃了，如何解决？\"></a>一有多几个人同时访问时，artalk就奔溃了，如何解决？</h2><pre><code>    Artalk Error\n    Error: 请求超时或意外终止，无法获取评论列表数据\n    点击重新获取\nping artalk.carlzeng.top -c4\nPING artalk.carlzeng.top (172.67.@@@): 56 data bytes\n本机是这种情况，用联通4G网络就能正常访问artalk评论\n\n解决办法：在4G环境下，用管理员登录控制中心，应用一下配置；\n重新回到电脑，就正常了，匪夷所思\n\n根据ping结果可知，域名对应的IP正确了；而一段时间后又会变成CF？\nping artalk.carlzeng.top -c4\nPING artalk.carlzeng.top (123.119.@@@): 56 data bytes\n</code></pre>\n<h2 id=\"Artalk置入博客\"><a href=\"#Artalk置入博客\" class=\"headerlink\" title=\"Artalk置入博客\"></a>Artalk置入博客</h2><pre><code>不要自己修改NexT，测试使用插件：Artalk comment plugin for Hexo NexT\nhttps://github.com/leirock/hexo-next-artalk\n\nnpm install hexo-next-artalk\n\n这个插件方案可能可以解决，首页也会冒出评论框的尴尬。\n    &lt;script&gt;\n    Artalk.init(&#123;\n      el:        &#39;#Comments&#39;,\n      pageKey:   &#39;&#123;&#123;page.permalink&#125;&#125;&#39;,\n      pageTitle: &#39;&#123;&#123;page.title&#125;&#125;&#39;,\n      server:    &#39;&#123;&#123;theme.post_artalkserver&#125;&#125;&#39;,\n      site:      &#39;@@@@ Notes&#39;\n    &#125;)\n    &lt;/script&gt;\n\n&lt;!-- CSS.comments --&gt;\n  &lt;link href=&quot;https://cdn.bootcdn.net/ajax/libs/artalk/2.6.4/Artalk.css&quot; rel=&quot;stylesheet&quot;&gt;\n&lt;!-- JS.comments --&gt;\n  &lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/artalk/2.6.4/Artalk.js&quot;&gt;&lt;/script&gt;\n\n  &lt;span class=&quot;post-meta-item&quot;&gt;\n    &lt;span class=&quot;post-meta-break&quot;&gt;&lt;/span&gt;\n    &lt;span class=&quot;post-meta-item-text&quot;&gt;评论数&#123;&#123;__('symbol.colon')&#125;&#125;&lt;/span&gt;\n    &lt;span id=&quot;ArtalkCount&quot;&gt;&lt;/span&gt;\n  &lt;/span&gt;\n</code></pre>\n<h1 id=\"DDNS自动更新域名的最新IP地址\"><a href=\"#DDNS自动更新域名的最新IP地址\" class=\"headerlink\" title=\"DDNS自动更新域名的最新IP地址\"></a>DDNS自动更新域名的最新IP地址</h1><img class=\"lozad\" data-src='https://www.evernote.com/shard/s122/sh/62d9a792-bb54-473f-a1e2-34feebae3a57/Bp2GY1StVwk23AQvse06RpwOBSWdQnuBad01TqD2pNg8RwbZSdLpzyGC3w/deep/0/image.png'>\n\n<pre><code>新增一条：动态DNS 服务项 » CF_carlzeng_top\n</code></pre>\n<p>检查日志：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">091427       : Registered IP &#x27;202.89.@@&#x27; detected</span><br><span class=\"line\">091427  info : Starting main loop at 2023-11-03 09:14</span><br><span class=\"line\">091427       : Detect current IP on &#x27;network&#x27;</span><br><span class=\"line\">091427       : Current IP &#x27;221.218.@@&#x27; detected on network &#x27;vwan3&#x27;</span><br><span class=\"line\">091427       : Update needed - L: &#x27;221.218.@@&#x27; &lt;&gt; R: &#x27;202.89.@@&#x27;</span><br><span class=\"line\">091427       : parsing script &#x27;/usr/lib/ddns/update_cloudflare_com_v4.sh&#x27;</span><br><span class=\"line\">091427       : #&gt; /usr/bin/curl -RsS -o /var/run/ddns/CF_carlzeng_top.dat --stderr /var/run/ddns/CF_carlzeng_top.err --noproxy &#x27;*&#x27; --header &#x27;X-Auth-Email: @@@@163.com&#x27;  --header &#x27;X-Auth-Key: ***PW***&#x27;  --header &#x27;Content-Type: application/json&#x27;  --request GET &#x27;https://api.cloudflare.com/client/v4/zones?name=carlzeng.top&#x27;</span><br><span class=\"line\">091428  WARN : CloudFlare reported an error:</span><br><span class=\"line\">091428       : &#123;&quot;success&quot;:false,&quot;errors&quot;:[&#123;&quot;code&quot;:6003,&quot;message&quot;:&quot;Invalid request headers&quot;,&quot;error_chain&quot;:[&#123;&quot;code&quot;:6103,&quot;message&quot;:&quot;Invalid format for X-Auth-Key header&quot;&#125;]&#125;],&quot;messages&quot;:[],&quot;result&quot;:null&#125;</span><br><span class=\"line\">091428 ERROR : IP update not accepted by DDNS Provider</span><br><span class=\"line\">091428       : Waiting 3600 seconds (Check Interval)</span><br></pre></td></tr></table></figure>\n<pre><code>update_cloudflare_com_v4.sh\n</code></pre>\n<h2 id=\"Cloudflare-DNS-API\"><a href=\"#Cloudflare-DNS-API\" class=\"headerlink\" title=\"Cloudflare DNS API\"></a>Cloudflare DNS API</h2><p>用户 API 令牌<br>        编辑区域 DNS API 令牌已成功创建<br>        复制此令牌以访问 Cloudflare API。为安全起见，将不再显示此令牌。了解更多<br>        7u0Y_5-t_TTn1biQDfdtHgohbE3l@@@@@@。一下为Cloudflare给出的例子：</p>\n<pre><code>curl -X GET &quot;https://api.cloudflare.com/client/v4/user/tokens/verify&quot; \\\n -H &quot;Authorization: Bearer 7u0Y_5-t_TTn1biQDfd@@@@@@&quot; \\\n -H &quot;Content-Type:application/json&quot; \n\nDNS TOKEN: 7u0Y_5-t_TTn1biQDfdtHg@@@@@@\n</code></pre>\n<p>10:36am 回归源头错误：<br>    code”:6103,”message”:”Invalid format for X-Auth-Key header</p>\n<p>比对了Openwrt中的源文件：<br>        ‘&#x2F;usr&#x2F;lib&#x2F;ddns&#x2F;update_cloudflare_com_v4.sh’<br>        <a href=\"https://github.com/msva/openwrt-packages/blob/master/net/ddns-scripts/files/update_cloudflare_com_v4.sh\">https://github.com/msva/openwrt-packages/blob/master/net/ddns-scripts/files/update_cloudflare_com_v4.sh</a><br>    发现我Openwrt中的.sh文件已经是最新版，看来还是配置出问题了。</p>\n<pre><code>检查.sh源文件，发现的解决问题的办法：\n用户名需要使用： Bearer\n密码使用：API Token，编辑区域 DNS API 令牌已成功创建\n\ncarlzeng.top\n10:52am works great in log.\n    both ddns setup works\n\n优化：查询主机名 最好是填写DDNS挂的解析域名，这样用于判断DDNS是否需要callAPI来更新IP最新的ADSL IP地址。\n修改以后，需要点击“重新加载”来更新界面中的“已注册的IP地址“。发现这个LIST设计得很人性化，直观：上次更新，下次更新，查询主机名，已注册的IP地址，运行中的进程PID\n优化脚本运行周期：\n每小时检查自己DDNS域名的特定记录，检查IP地址和DDNS域名是否一致。\n每天强制推送更新，即便IP没有变动\n</code></pre>","categories":[{"name":"hexo","path":"api/categories/hexo.json"}],"tags":[{"name":"debian","path":"api/tags/debian.json"},{"name":"hexo","path":"api/tags/hexo.json"},{"name":"artalk","path":"api/tags/artalk.json"},{"name":"Nginx Proxy Manager","path":"api/tags/Nginx Proxy Manager.json"},{"name":"DDNS","path":"api/tags/DDNS.json"}]}