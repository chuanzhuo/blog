{"title":"Docker群晖docker查询注册表失败","slug":"Docker群晖docker查询注册表失败","date":"2024-07-12T02:06:26.000Z","updated":"2024-07-15T14:41:56.641Z","comments":true,"path":"api/articles/Docker群晖docker查询注册表失败.json","excerpt":" [Figure] 解决群晖NAS UI(或SSH中)的docker pull错误(无法拉取, 注册表错误)","covers":["https://img.carlzeng.top:3/i/2024/07/15/669524eae2b2d.png","https://img.carlzeng.top:3/i/2024/07/15/6695257eb59ff.png","https://img.carlzeng.top:3/i/2024/07/15/669530ad2c579.png"],"content":"<img class=\"lozad\" data-src=\"https://img.carlzeng.top:3/i/2024/07/15/669524eae2b2d.png\">\n\n<p>解决群晖NAS UI(或SSH中)的docker pull错误(无法拉取, 注册表错误)</p>\n<span id=\"more\"></span>\n\n<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.top:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n\n\n<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p><img data-src=\"https://img.carlzeng.top:3/i/2024/07/15/6695257eb59ff.png\" alt=\"image-20240715213450500\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">error pulling image configuration: Get &quot;https://production.cloudflare.docker.com/registry-v2/docker/registry/v2/...</span><br><span class=\"line\"></span><br><span class=\"line\">dial tcp 128.242.250.148:443: i/o timeout</span><br></pre></td></tr></table></figure>\n\n<p>该方法适用于：</p>\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/07/15/669530ad2c579.png\" alt=\"image-20240715222232393\"></p>\n<h1 id=\"怎么用\"><a href=\"#怎么用\" class=\"headerlink\" title=\"怎么用\"></a>怎么用</h1><p>群晖 7.1 和 7.1.1，没有 ContainerManager ，Mac 上开 clash 允许 Lan 访问，配置下代理：</p>\n<p>目录：&#x2F;usr&#x2F;local&#x2F;lib&#x2F;systemd&#x2F;system</p>\n<p>vim pkg-Docker-dockerd.service</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Service]</span><br><span class=\"line\">Environment=&quot;HTTP_PROXY=http://192.168.1.10:7890&quot;</span><br><span class=\"line\">Environment=&quot;HTTPS_PROXY=http://192.168.1.10:7890&quot;</span><br><span class=\"line\">Environment=&quot;NO_PROXY=localhost,127.0.0.1&quot;</span><br></pre></td></tr></table></figure>\n\n<p>（请根据自己情况，适当修改这个文件内容）</p>\n<p>systemctl daemon-reload<br>systemctl restart pkg-Docker-dockerd</p>\n<p>测试成功，测试过程如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@DS918:/usr/local/lib/systemd/system# docker pull ryjer/opentracker                                             </span><br><span class=\"line\">Using default tag: latest                                                                                           </span><br><span class=\"line\">latest: Pulling from ryjer/opentracker                                                                              </span><br><span class=\"line\">661ff4d9561e: Pull complete                                                                                         </span><br><span class=\"line\">f29ffd230948: Pull complete                                                                                         </span><br><span class=\"line\">e72e6a981102: Pull complete                                                                                         </span><br><span class=\"line\">Digest: sha256:67db529ec69573ab3bee534b75c4e9ac9374b78e7ac386f1286a77be7ad346e3                                     </span><br><span class=\"line\">Status: Downloaded newer image for ryjer/opentracker:latest                                                         </span><br><span class=\"line\">docker.io/ryjer/opentracker:latest  </span><br></pre></td></tr></table></figure>\n\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=nas\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><h2 id=\"通过ssh命令控制重启Docker服务或者直接重启机器\"><a href=\"#通过ssh命令控制重启Docker服务或者直接重启机器\" class=\"headerlink\" title=\"通过ssh命令控制重启Docker服务或者直接重启机器\"></a>通过ssh命令控制重启Docker服务或者直接重启机器</h2><p>NAS停用Docker套件 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash /var/packages/Docker/scripts/start-stop-status stop</span><br></pre></td></tr></table></figure>\n\n<p>NAS开启Docker套件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash /var/packages/Docker/scripts/start-stop-status start</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"老版本的群晖NAS\"><a href=\"#老版本的群晖NAS\" class=\"headerlink\" title=\"老版本的群晖NAS\"></a>老版本的群晖NAS</h2><p>方法一：</p>\n<ol>\n<li><p>添加 &#x2F;etc&#x2F;docker&#x2F;env 文件<br>export HTTP_PROXY&#x3D;127.0.0.1:8899</p>\n</li>\n<li><p>编辑 &#x2F;etc&#x2F;init&#x2F;pkg-Docker-dockerd.conf 文件<br>将<br>exec &#x2F;var&#x2F;packages&#x2F;Docker&#x2F;target&#x2F;usr&#x2F;bin&#x2F;dockerd –config-file &#x2F;var&#x2F;packages&#x2F;Docker&#x2F;etc&#x2F;dockerd.json<br>改为</p>\n</li>\n</ol>\n<p>#exec &#x2F;var&#x2F;packages&#x2F;Docker&#x2F;target&#x2F;usr&#x2F;bin&#x2F;dockerd –config-file &#x2F;var&#x2F;packages&#x2F;Docker&#x2F;etc&#x2F;dockerd.json<br>script<br>source &#x2F;etc&#x2F;docker&#x2F;env<br>&#x2F;var&#x2F;packages&#x2F;Docker&#x2F;target&#x2F;usr&#x2F;bin&#x2F;dockerd –config-file &#x2F;var&#x2F;packages&#x2F;Docker&#x2F;etc&#x2F;dockerd.json<br>end script</p>\n<ol start=\"3\">\n<li>然后，重启 docker 服务，<ol>\n<li>停止 docker <ol>\n<li>&#x2F;var&#x2F;packages&#x2F;Docker&#x2F;scripts&#x2F;start-stop-status stop</li>\n</ol>\n</li>\n<li>启动 docker <ol>\n<li>&#x2F;var&#x2F;packages&#x2F;Docker&#x2F;scripts&#x2F;start-stop-status start</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>接着，你就尽情的 pull 吧，速度拉满</p>\n<p>方法二：</p>\n<ol>\n<li>删除 NAS 》 控制面板 》网络 》代理服务器</li>\n<li>手动配置DNS服务器<ol>\n<li>223.5.5.5</li>\n<li>114.114.114.114</li>\n</ol>\n</li>\n<li>设置  Docker 》 注册表 》设置 <ol>\n<li><a href=\"https://registry.cn-hangzhou.aliyuncs.com/\">https://registry.cn-hangzhou.aliyuncs.com/</a></li>\n<li><a href=\"https://docker.nju.edu.cn/\">https://docker.nju.edu.cn</a></li>\n<li></li>\n</ol>\n</li>\n<li>清空 &#x2F;etc&#x2F;docker&#x2F;daemon.json</li>\n</ol>\n<p>方法三：</p>\n<p>测试拉取失败：<a href=\"https://dockerproxy.com/\">https://dockerproxy.com/</a> </p>\n<h2 id=\"旧版本的pkg-Docker-dockerd-service\"><a href=\"#旧版本的pkg-Docker-dockerd-service\" class=\"headerlink\" title=\"旧版本的pkg-Docker-dockerd.service\"></a>旧版本的pkg-Docker-dockerd.service</h2><p>cat pkg-Docker-dockerd.service    </p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[Unit]</span>                                                                                                              </span><br><span class=\"line\"><span class=\"attr\">Description</span>=Docker Application Container Engine                                                                     </span><br><span class=\"line\"><span class=\"attr\">Documentation</span>=https://docs.docker.com                                                                               </span><br><span class=\"line\"><span class=\"attr\">IgnoreOnIsolate</span>=<span class=\"literal\">true</span>                                                                                                </span><br><span class=\"line\"><span class=\"attr\">DefaultDependencies</span>=<span class=\"literal\">no</span>                                                                                              </span><br><span class=\"line\">                                                                                                                    </span><br><span class=\"line\"><span class=\"section\">[Service]</span>                                                                                                           </span><br><span class=\"line\"><span class=\"attr\">Type</span>=notify                                                                                                         </span><br><span class=\"line\"><span class=\"attr\">ExecStart</span>=/var/packages/Docker/target/usr/bin/dockerd --config-file /var/packages/Docker/etc/dockerd.json           </span><br><span class=\"line\"><span class=\"attr\">ExecReload</span>=/bin/kill -s HUP <span class=\"variable\">$MAINPID</span>                                                                                </span><br><span class=\"line\"><span class=\"attr\">LimitNOFILE</span>=<span class=\"number\">1048576</span>                                                                                                 </span><br><span class=\"line\"><span class=\"comment\"># Having non-zero Limit*s causes performance problems due to accounting overhead                                    </span></span><br><span class=\"line\"><span class=\"comment\"># in the kernel. We recommend using cgroups to do container-local accounting.                                       </span></span><br><span class=\"line\"><span class=\"attr\">LimitNPROC</span>=infinity                                                                                                 </span><br><span class=\"line\"><span class=\"attr\">LimitCORE</span>=infinity                                                                                                  </span><br><span class=\"line\"><span class=\"comment\"># Uncomment TasksMax if your systemd version supports it.                                                           </span></span><br><span class=\"line\"><span class=\"comment\"># Only systemd 226 and above support this version.                                                                  </span></span><br><span class=\"line\"><span class=\"comment\">#TasksMax=infinity                                                                                                  </span></span><br><span class=\"line\"><span class=\"comment\"># set delegate yes so that systemd does not reset the cgroups of docker containers                                  </span></span><br><span class=\"line\"><span class=\"attr\">Delegate</span>=<span class=\"literal\">yes</span>                                                                                                        </span><br><span class=\"line\"><span class=\"comment\"># kill only the docker process, not all processes in the cgroup                                                     </span></span><br><span class=\"line\"><span class=\"attr\">KillMode</span>=process                                                                                                    </span><br><span class=\"line\"><span class=\"comment\"># restart the docker process if it exits prematurely                                                                </span></span><br><span class=\"line\"><span class=\"attr\">Restart</span>=always                                                                                                      </span><br><span class=\"line\"><span class=\"attr\">RestartSec</span>=<span class=\"number\">2</span>                                                                                                        </span><br><span class=\"line\"><span class=\"attr\">TimeoutSec</span>=<span class=\"number\">0</span>                                                                                                        </span><br><span class=\"line\"><span class=\"attr\">StartLimitBurst</span>=<span class=\"number\">3</span>                                                                                                   </span><br><span class=\"line\"><span class=\"attr\">StartLimitInterval</span>=<span class=\"number\">60</span>s                                                                                              </span><br><span class=\"line\">                                                                                                                    </span><br><span class=\"line\"><span class=\"section\">[X-Synology]</span>               </span><br></pre></td></tr></table></figure>\n\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p><a href=\"https://v2ex.com/t/874777\">怎样才能让我的 docker 走代理</a></p>\n<p><a href=\"https://www.v2ex.com/t/981481?p=1#r_14833577\">群晖的 Docker 无法使用系统代理拉取镜像</a></p>\n<p>关键字：群晖 docker daemon http proxy 配置</p>\n","more":"<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.top:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n\n\n<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p><img data-src=\"https://img.carlzeng.top:3/i/2024/07/15/6695257eb59ff.png\" alt=\"image-20240715213450500\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">error pulling image configuration: Get &quot;https://production.cloudflare.docker.com/registry-v2/docker/registry/v2/...</span><br><span class=\"line\"></span><br><span class=\"line\">dial tcp 128.242.250.148:443: i/o timeout</span><br></pre></td></tr></table></figure>\n\n<p>该方法适用于：</p>\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/07/15/669530ad2c579.png\" alt=\"image-20240715222232393\"></p>\n<h1 id=\"怎么用\"><a href=\"#怎么用\" class=\"headerlink\" title=\"怎么用\"></a>怎么用</h1><p>群晖 7.1 和 7.1.1，没有 ContainerManager ，Mac 上开 clash 允许 Lan 访问，配置下代理：</p>\n<p>目录：&#x2F;usr&#x2F;local&#x2F;lib&#x2F;systemd&#x2F;system</p>\n<p>vim pkg-Docker-dockerd.service</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Service]</span><br><span class=\"line\">Environment=&quot;HTTP_PROXY=http://192.168.1.10:7890&quot;</span><br><span class=\"line\">Environment=&quot;HTTPS_PROXY=http://192.168.1.10:7890&quot;</span><br><span class=\"line\">Environment=&quot;NO_PROXY=localhost,127.0.0.1&quot;</span><br></pre></td></tr></table></figure>\n\n<p>（请根据自己情况，适当修改这个文件内容）</p>\n<p>systemctl daemon-reload<br>systemctl restart pkg-Docker-dockerd</p>\n<p>测试成功，测试过程如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@DS918:/usr/local/lib/systemd/system# docker pull ryjer/opentracker                                             </span><br><span class=\"line\">Using default tag: latest                                                                                           </span><br><span class=\"line\">latest: Pulling from ryjer/opentracker                                                                              </span><br><span class=\"line\">661ff4d9561e: Pull complete                                                                                         </span><br><span class=\"line\">f29ffd230948: Pull complete                                                                                         </span><br><span class=\"line\">e72e6a981102: Pull complete                                                                                         </span><br><span class=\"line\">Digest: sha256:67db529ec69573ab3bee534b75c4e9ac9374b78e7ac386f1286a77be7ad346e3                                     </span><br><span class=\"line\">Status: Downloaded newer image for ryjer/opentracker:latest                                                         </span><br><span class=\"line\">docker.io/ryjer/opentracker:latest  </span><br></pre></td></tr></table></figure>\n\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=nas\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><h2 id=\"通过ssh命令控制重启Docker服务或者直接重启机器\"><a href=\"#通过ssh命令控制重启Docker服务或者直接重启机器\" class=\"headerlink\" title=\"通过ssh命令控制重启Docker服务或者直接重启机器\"></a>通过ssh命令控制重启Docker服务或者直接重启机器</h2><p>NAS停用Docker套件 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash /var/packages/Docker/scripts/start-stop-status stop</span><br></pre></td></tr></table></figure>\n\n<p>NAS开启Docker套件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash /var/packages/Docker/scripts/start-stop-status start</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"老版本的群晖NAS\"><a href=\"#老版本的群晖NAS\" class=\"headerlink\" title=\"老版本的群晖NAS\"></a>老版本的群晖NAS</h2><p>方法一：</p>\n<ol>\n<li><p>添加 &#x2F;etc&#x2F;docker&#x2F;env 文件<br>export HTTP_PROXY&#x3D;127.0.0.1:8899</p>\n</li>\n<li><p>编辑 &#x2F;etc&#x2F;init&#x2F;pkg-Docker-dockerd.conf 文件<br>将<br>exec &#x2F;var&#x2F;packages&#x2F;Docker&#x2F;target&#x2F;usr&#x2F;bin&#x2F;dockerd –config-file &#x2F;var&#x2F;packages&#x2F;Docker&#x2F;etc&#x2F;dockerd.json<br>改为</p>\n</li>\n</ol>\n<p>#exec &#x2F;var&#x2F;packages&#x2F;Docker&#x2F;target&#x2F;usr&#x2F;bin&#x2F;dockerd –config-file &#x2F;var&#x2F;packages&#x2F;Docker&#x2F;etc&#x2F;dockerd.json<br>script<br>source &#x2F;etc&#x2F;docker&#x2F;env<br>&#x2F;var&#x2F;packages&#x2F;Docker&#x2F;target&#x2F;usr&#x2F;bin&#x2F;dockerd –config-file &#x2F;var&#x2F;packages&#x2F;Docker&#x2F;etc&#x2F;dockerd.json<br>end script</p>\n<ol start=\"3\">\n<li>然后，重启 docker 服务，<ol>\n<li>停止 docker <ol>\n<li>&#x2F;var&#x2F;packages&#x2F;Docker&#x2F;scripts&#x2F;start-stop-status stop</li>\n</ol>\n</li>\n<li>启动 docker <ol>\n<li>&#x2F;var&#x2F;packages&#x2F;Docker&#x2F;scripts&#x2F;start-stop-status start</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>接着，你就尽情的 pull 吧，速度拉满</p>\n<p>方法二：</p>\n<ol>\n<li>删除 NAS 》 控制面板 》网络 》代理服务器</li>\n<li>手动配置DNS服务器<ol>\n<li>223.5.5.5</li>\n<li>114.114.114.114</li>\n</ol>\n</li>\n<li>设置  Docker 》 注册表 》设置 <ol>\n<li><a href=\"https://registry.cn-hangzhou.aliyuncs.com/\">https://registry.cn-hangzhou.aliyuncs.com/</a></li>\n<li><a href=\"https://docker.nju.edu.cn/\">https://docker.nju.edu.cn</a></li>\n<li></li>\n</ol>\n</li>\n<li>清空 &#x2F;etc&#x2F;docker&#x2F;daemon.json</li>\n</ol>\n<p>方法三：</p>\n<p>测试拉取失败：<a href=\"https://dockerproxy.com/\">https://dockerproxy.com/</a> </p>\n<h2 id=\"旧版本的pkg-Docker-dockerd-service\"><a href=\"#旧版本的pkg-Docker-dockerd-service\" class=\"headerlink\" title=\"旧版本的pkg-Docker-dockerd.service\"></a>旧版本的pkg-Docker-dockerd.service</h2><p>cat pkg-Docker-dockerd.service    </p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[Unit]</span>                                                                                                              </span><br><span class=\"line\"><span class=\"attr\">Description</span>=Docker Application Container Engine                                                                     </span><br><span class=\"line\"><span class=\"attr\">Documentation</span>=https://docs.docker.com                                                                               </span><br><span class=\"line\"><span class=\"attr\">IgnoreOnIsolate</span>=<span class=\"literal\">true</span>                                                                                                </span><br><span class=\"line\"><span class=\"attr\">DefaultDependencies</span>=<span class=\"literal\">no</span>                                                                                              </span><br><span class=\"line\">                                                                                                                    </span><br><span class=\"line\"><span class=\"section\">[Service]</span>                                                                                                           </span><br><span class=\"line\"><span class=\"attr\">Type</span>=notify                                                                                                         </span><br><span class=\"line\"><span class=\"attr\">ExecStart</span>=/var/packages/Docker/target/usr/bin/dockerd --config-file /var/packages/Docker/etc/dockerd.json           </span><br><span class=\"line\"><span class=\"attr\">ExecReload</span>=/bin/kill -s HUP <span class=\"variable\">$MAINPID</span>                                                                                </span><br><span class=\"line\"><span class=\"attr\">LimitNOFILE</span>=<span class=\"number\">1048576</span>                                                                                                 </span><br><span class=\"line\"><span class=\"comment\"># Having non-zero Limit*s causes performance problems due to accounting overhead                                    </span></span><br><span class=\"line\"><span class=\"comment\"># in the kernel. We recommend using cgroups to do container-local accounting.                                       </span></span><br><span class=\"line\"><span class=\"attr\">LimitNPROC</span>=infinity                                                                                                 </span><br><span class=\"line\"><span class=\"attr\">LimitCORE</span>=infinity                                                                                                  </span><br><span class=\"line\"><span class=\"comment\"># Uncomment TasksMax if your systemd version supports it.                                                           </span></span><br><span class=\"line\"><span class=\"comment\"># Only systemd 226 and above support this version.                                                                  </span></span><br><span class=\"line\"><span class=\"comment\">#TasksMax=infinity                                                                                                  </span></span><br><span class=\"line\"><span class=\"comment\"># set delegate yes so that systemd does not reset the cgroups of docker containers                                  </span></span><br><span class=\"line\"><span class=\"attr\">Delegate</span>=<span class=\"literal\">yes</span>                                                                                                        </span><br><span class=\"line\"><span class=\"comment\"># kill only the docker process, not all processes in the cgroup                                                     </span></span><br><span class=\"line\"><span class=\"attr\">KillMode</span>=process                                                                                                    </span><br><span class=\"line\"><span class=\"comment\"># restart the docker process if it exits prematurely                                                                </span></span><br><span class=\"line\"><span class=\"attr\">Restart</span>=always                                                                                                      </span><br><span class=\"line\"><span class=\"attr\">RestartSec</span>=<span class=\"number\">2</span>                                                                                                        </span><br><span class=\"line\"><span class=\"attr\">TimeoutSec</span>=<span class=\"number\">0</span>                                                                                                        </span><br><span class=\"line\"><span class=\"attr\">StartLimitBurst</span>=<span class=\"number\">3</span>                                                                                                   </span><br><span class=\"line\"><span class=\"attr\">StartLimitInterval</span>=<span class=\"number\">60</span>s                                                                                              </span><br><span class=\"line\">                                                                                                                    </span><br><span class=\"line\"><span class=\"section\">[X-Synology]</span>               </span><br></pre></td></tr></table></figure>\n\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p><a href=\"https://v2ex.com/t/874777\">怎样才能让我的 docker 走代理</a></p>\n<p><a href=\"https://www.v2ex.com/t/981481?p=1#r_14833577\">群晖的 Docker 无法使用系统代理拉取镜像</a></p>\n<p>关键字：群晖 docker daemon http proxy 配置</p>","categories":[{"name":"Docker群晖docker查询注册表失败","path":"api/categories/Docker群晖docker查询注册表失败.json"}],"tags":[{"name":"docker","path":"api/tags/docker.json"},{"name":"NAS","path":"api/tags/NAS.json"},{"name":"docker-compse","path":"api/tags/docker-compse.json"}]}