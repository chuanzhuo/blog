{"title":"Github加速Github代理","slug":"Github加速Github代理","date":"2024-12-30T01:01:49.000Z","updated":"2025-02-03T02:35:50.590Z","comments":true,"path":"api/articles/Github加速Github代理.json","excerpt":" [Figure] ","covers":["https://img.carlzeng.com:3/i/2024/12/30/6771f330cf6cc.png"],"content":"<img class=\"lozad\" data-src=\"https://img.carlzeng.com:3/i/2024/12/30/6771f330cf6cc.png\">\n\n<span id=\"more\"></span>\n\n<p>20250203 新的github文件mirror, 举例说明: </p>\n<p><a href=\"https://raw.gitmirror.com/chuanzhuo/local_clash_servers/master/local_clash_proxies.yaml\">https://raw.gitmirror.com/chuanzhuo/local_clash_servers/master/local_clash_proxies.yaml</a></p>\n<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.com:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n\n\n<h1 id=\"有什么用-怎么用\"><a href=\"#有什么用-怎么用\" class=\"headerlink\" title=\"有什么用&#x2F;怎么用\"></a>有什么用&#x2F;怎么用</h1><p>建议有自己的墙外服务器, 这样使用大佬的脚步建立一个Github加速的服务以后, 就能在墙内访问到github的资源</p>\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.com:3/appsearch?q=github\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n\n\n<h1 id=\"搭建自己的GitHub加速-CF-Workers或Python或Go自建\"><a href=\"#搭建自己的GitHub加速-CF-Workers或Python或Go自建\" class=\"headerlink\" title=\"搭建自己的GitHub加速 CF Workers或Python或Go自建\"></a>搭建自己的GitHub加速 CF Workers或Python或Go自建</h1><p>网上很多开源项目感谢一众大佬的开源技术，让我的脚本运行更稳定。</p>\n<p>主要国内网络不稳定，拉取GitHub上代码经常卡住，之前国内版脚本用的别人的加速源，现在可以用自己的了。非常简单！</p>\n<h2 id=\"CF-Workers-大佬1\"><a href=\"#CF-Workers-大佬1\" class=\"headerlink\" title=\"(CF Workers)大佬1\"></a>(CF Workers)大佬1</h2><p>GitHub地址</p>\n<p><a href=\"https://github.com/fscarmen2/gh_proxy\">https://github.com/fscarmen2/gh_proxy</a></p>\n<h2 id=\"Python自建服务-大佬2\"><a href=\"#Python自建服务-大佬2\" class=\"headerlink\" title=\"(Python自建服务)大佬2\"></a>(Python自建服务)大佬2</h2><p>另一个大佬的，这个网页搭建好后还有页面效果。</p>\n<p>GitHub地址</p>\n<p><a href=\"https://github.com/hunshcn/gh-proxy\">https://github.com/hunshcn/gh-proxy</a></p>\n<p>docker命令</p>\n<p>docker run -d –name&#x3D;”gh-proxy” \\<br>  -p 8088:80 \\<br>  –restart&#x3D;always \\<br>  hunsh&#x2F;gh-proxy-py:latest</p>\n<h2 id=\"Go自建服务-大佬3\"><a href=\"#Go自建服务-大佬3\" class=\"headerlink\" title=\"(Go自建服务)大佬3\"></a>(Go自建服务)大佬3</h2><p>GitHub地址</p>\n<p><a href=\"https://github.com/WJQSERVER-STUDIO/ghproxy\">https://github.com/WJQSERVER-STUDIO/ghproxy</a></p>\n<p>docker命令</p>\n<p>docker run -p 7210:80 -v .&#x2F;ghproxy&#x2F;log&#x2F;run:&#x2F;data&#x2F;ghproxy&#x2F;log -v .&#x2F;ghproxy&#x2F;log&#x2F;caddy:&#x2F;data&#x2F;caddy&#x2F;log -v .&#x2F;ghproxy&#x2F;config:&#x2F;data&#x2F;ghproxy&#x2F;config  –restart always wjqserver&#x2F;ghproxy</p>\n<p>来源:</p>\n<p><a href=\"https://kejilion.blogspot.com/2024/09/github-cf-workers.html\">搭建自己的GitHub加速 CF Workers 轻松搞定！</a></p>\n","more":"<p>20250203 新的github文件mirror, 举例说明: </p>\n<p><a href=\"https://raw.gitmirror.com/chuanzhuo/local_clash_servers/master/local_clash_proxies.yaml\">https://raw.gitmirror.com/chuanzhuo/local_clash_servers/master/local_clash_proxies.yaml</a></p>\n<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.com:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n\n\n<h1 id=\"有什么用-怎么用\"><a href=\"#有什么用-怎么用\" class=\"headerlink\" title=\"有什么用&#x2F;怎么用\"></a>有什么用&#x2F;怎么用</h1><p>建议有自己的墙外服务器, 这样使用大佬的脚步建立一个Github加速的服务以后, 就能在墙内访问到github的资源</p>\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.com:3/appsearch?q=github\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n\n\n<h1 id=\"搭建自己的GitHub加速-CF-Workers或Python或Go自建\"><a href=\"#搭建自己的GitHub加速-CF-Workers或Python或Go自建\" class=\"headerlink\" title=\"搭建自己的GitHub加速 CF Workers或Python或Go自建\"></a>搭建自己的GitHub加速 CF Workers或Python或Go自建</h1><p>网上很多开源项目感谢一众大佬的开源技术，让我的脚本运行更稳定。</p>\n<p>主要国内网络不稳定，拉取GitHub上代码经常卡住，之前国内版脚本用的别人的加速源，现在可以用自己的了。非常简单！</p>\n<h2 id=\"CF-Workers-大佬1\"><a href=\"#CF-Workers-大佬1\" class=\"headerlink\" title=\"(CF Workers)大佬1\"></a>(CF Workers)大佬1</h2><p>GitHub地址</p>\n<p><a href=\"https://github.com/fscarmen2/gh_proxy\">https://github.com/fscarmen2/gh_proxy</a></p>\n<h2 id=\"Python自建服务-大佬2\"><a href=\"#Python自建服务-大佬2\" class=\"headerlink\" title=\"(Python自建服务)大佬2\"></a>(Python自建服务)大佬2</h2><p>另一个大佬的，这个网页搭建好后还有页面效果。</p>\n<p>GitHub地址</p>\n<p><a href=\"https://github.com/hunshcn/gh-proxy\">https://github.com/hunshcn/gh-proxy</a></p>\n<p>docker命令</p>\n<p>docker run -d –name&#x3D;”gh-proxy” \\<br>  -p 8088:80 \\<br>  –restart&#x3D;always \\<br>  hunsh&#x2F;gh-proxy-py:latest</p>\n<h2 id=\"Go自建服务-大佬3\"><a href=\"#Go自建服务-大佬3\" class=\"headerlink\" title=\"(Go自建服务)大佬3\"></a>(Go自建服务)大佬3</h2><p>GitHub地址</p>\n<p><a href=\"https://github.com/WJQSERVER-STUDIO/ghproxy\">https://github.com/WJQSERVER-STUDIO/ghproxy</a></p>\n<p>docker命令</p>\n<p>docker run -p 7210:80 -v .&#x2F;ghproxy&#x2F;log&#x2F;run:&#x2F;data&#x2F;ghproxy&#x2F;log -v .&#x2F;ghproxy&#x2F;log&#x2F;caddy:&#x2F;data&#x2F;caddy&#x2F;log -v .&#x2F;ghproxy&#x2F;config:&#x2F;data&#x2F;ghproxy&#x2F;config  –restart always wjqserver&#x2F;ghproxy</p>\n<p>来源:</p>\n<p><a href=\"https://kejilion.blogspot.com/2024/09/github-cf-workers.html\">搭建自己的GitHub加速 CF Workers 轻松搞定！</a></p>","categories":[{"name":"Github加速","path":"api/categories/Github加速.json"}],"tags":[{"name":"github","path":"api/tags/github.json"}]}