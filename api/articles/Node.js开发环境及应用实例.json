{"title":"Node.js开发环境及应用实例","slug":"Node.js开发环境及应用实例","date":"2023-10-08T00:55:48.000Z","updated":"2023-10-09T01:03:16.493Z","comments":true,"path":"api/articles/Node.js开发环境及应用实例.json","excerpt":"Node.js 简练，清爽","covers":null,"content":"<p>Node.js 简练，清爽</p>\n<span id=\"more\"></span>\n\n<p>如何在IDEA中加入默认&#x2F;内置函数的auto-completion<br>IDEA node.js 函数的autocomplete</p>\n<h1 id=\"实现了批量编辑文件名含有netsuite的所有文件，添加tags-和-categories\"><a href=\"#实现了批量编辑文件名含有netsuite的所有文件，添加tags-和-categories\" class=\"headerlink\" title=\"实现了批量编辑文件名含有netsuite的所有文件，添加tags 和 categories\"></a>实现了批量编辑文件名含有netsuite的所有文件，添加tags 和 categories</h1><p>实现了月初的需求：寻求批量分类解决方案<br>这下面的代码可以灵活拓展，应用在不同的批量修改编辑磁盘目录下的文件内容。</p>\n<p>Node.js源代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;fs&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> buf = <span class=\"keyword\">new</span> <span class=\"title class_\">Buffer</span>.<span class=\"title function_\">alloc</span>(<span class=\"number\">1024</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;查看 _posts 目录&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> strPostDir = <span class=\"string\">&quot;/Users/carlzeng/AppTesting/blog/source/_posts&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> intUpdatedCnt = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">fs.<span class=\"title function_\">readdir</span>(strPostDir, <span class=\"keyword\">function</span> (<span class=\"params\">err, files</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(err);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        files.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span> (<span class=\"params\">file</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// console.log( file );</span></span><br><span class=\"line\">            <span class=\"comment\">// if (file == &#x27;0模版.md&#x27;)&#123;</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (file.<span class=\"title function_\">toLowerCase</span>().<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;netsuite&#x27;</span>) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(file);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//读取文件，并且替换文件中指定的字符串</span></span><br><span class=\"line\">                <span class=\"keyword\">let</span> replaceFile = <span class=\"keyword\">function</span> (<span class=\"params\">filePath, sourceRegx, targetStr</span>) &#123;</span><br><span class=\"line\">                    fs.<span class=\"title function_\">readFile</span>(filePath, <span class=\"keyword\">function</span> (<span class=\"params\">err, data</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">return</span> err;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">let</span> str = data.<span class=\"title function_\">toString</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"comment\">// console.info(str);</span></span><br><span class=\"line\"></span><br><span class=\"line\">                        str = str.<span class=\"title function_\">replace</span>(sourceRegx, targetStr);</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"comment\">// console.info(&quot;AFTER: \\n&quot; + str);</span></span><br><span class=\"line\">                        fs.<span class=\"title function_\">writeFile</span>(filePath, str, <span class=\"keyword\">function</span> (<span class=\"params\">err</span>) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (err) <span class=\"keyword\">return</span> err;</span><br><span class=\"line\">                        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125;);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">replaceFile</span>(strPostDir + <span class=\"string\">&#x27;/&#x27;</span> + file, <span class=\"regexp\">/tags: \\[\\]/</span>, <span class=\"string\">&quot;tags: [NetSuite] \\ncategories: NetSuite&quot;</span>)</span><br><span class=\"line\">                intUpdatedCnt++;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (intUpdatedCnt == <span class=\"number\">2000</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&quot;EndIterative&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.<span class=\"property\">message</span> != <span class=\"string\">&quot;EndIterative&quot;</span>) <span class=\"keyword\">throw</span> e;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Sublime-Text-编辑器-打开文件夹目录\"><a href=\"#Sublime-Text-编辑器-打开文件夹目录\" class=\"headerlink\" title=\"Sublime Text 编辑器 打开文件夹目录\"></a>Sublime Text 编辑器 打开文件夹目录</h2><p>Sublime Text 编辑器 打开文件夹目录，它便会加载这个文件夹下的所有文件，（用这种方式更新文章，非常便捷）<br>然后使用菜单“查找 》 替换”来搜索特定的特征的字符串.<br>搜索内容，也是支持正则表达</p>\n","more":"<p>如何在IDEA中加入默认&#x2F;内置函数的auto-completion<br>IDEA node.js 函数的autocomplete</p>\n<h1 id=\"实现了批量编辑文件名含有netsuite的所有文件，添加tags-和-categories\"><a href=\"#实现了批量编辑文件名含有netsuite的所有文件，添加tags-和-categories\" class=\"headerlink\" title=\"实现了批量编辑文件名含有netsuite的所有文件，添加tags 和 categories\"></a>实现了批量编辑文件名含有netsuite的所有文件，添加tags 和 categories</h1><p>实现了月初的需求：寻求批量分类解决方案<br>这下面的代码可以灵活拓展，应用在不同的批量修改编辑磁盘目录下的文件内容。</p>\n<p>Node.js源代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;fs&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> buf = <span class=\"keyword\">new</span> <span class=\"title class_\">Buffer</span>.<span class=\"title function_\">alloc</span>(<span class=\"number\">1024</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;查看 _posts 目录&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> strPostDir = <span class=\"string\">&quot;/Users/carlzeng/AppTesting/blog/source/_posts&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> intUpdatedCnt = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">fs.<span class=\"title function_\">readdir</span>(strPostDir, <span class=\"keyword\">function</span> (<span class=\"params\">err, files</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(err);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        files.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span> (<span class=\"params\">file</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// console.log( file );</span></span><br><span class=\"line\">            <span class=\"comment\">// if (file == &#x27;0模版.md&#x27;)&#123;</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (file.<span class=\"title function_\">toLowerCase</span>().<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;netsuite&#x27;</span>) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(file);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//读取文件，并且替换文件中指定的字符串</span></span><br><span class=\"line\">                <span class=\"keyword\">let</span> replaceFile = <span class=\"keyword\">function</span> (<span class=\"params\">filePath, sourceRegx, targetStr</span>) &#123;</span><br><span class=\"line\">                    fs.<span class=\"title function_\">readFile</span>(filePath, <span class=\"keyword\">function</span> (<span class=\"params\">err, data</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">return</span> err;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">let</span> str = data.<span class=\"title function_\">toString</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"comment\">// console.info(str);</span></span><br><span class=\"line\"></span><br><span class=\"line\">                        str = str.<span class=\"title function_\">replace</span>(sourceRegx, targetStr);</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"comment\">// console.info(&quot;AFTER: \\n&quot; + str);</span></span><br><span class=\"line\">                        fs.<span class=\"title function_\">writeFile</span>(filePath, str, <span class=\"keyword\">function</span> (<span class=\"params\">err</span>) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (err) <span class=\"keyword\">return</span> err;</span><br><span class=\"line\">                        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125;);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">replaceFile</span>(strPostDir + <span class=\"string\">&#x27;/&#x27;</span> + file, <span class=\"regexp\">/tags: \\[\\]/</span>, <span class=\"string\">&quot;tags: [NetSuite] \\ncategories: NetSuite&quot;</span>)</span><br><span class=\"line\">                intUpdatedCnt++;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (intUpdatedCnt == <span class=\"number\">2000</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&quot;EndIterative&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.<span class=\"property\">message</span> != <span class=\"string\">&quot;EndIterative&quot;</span>) <span class=\"keyword\">throw</span> e;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Sublime-Text-编辑器-打开文件夹目录\"><a href=\"#Sublime-Text-编辑器-打开文件夹目录\" class=\"headerlink\" title=\"Sublime Text 编辑器 打开文件夹目录\"></a>Sublime Text 编辑器 打开文件夹目录</h2><p>Sublime Text 编辑器 打开文件夹目录，它便会加载这个文件夹下的所有文件，（用这种方式更新文章，非常便捷）<br>然后使用菜单“查找 》 替换”来搜索特定的特征的字符串.<br>搜索内容，也是支持正则表达</p>","categories":[{"name":"Node.js","path":"api/categories/Node.js.json"}],"tags":[{"name":"Node.js","path":"api/tags/Node.js.json"}]}