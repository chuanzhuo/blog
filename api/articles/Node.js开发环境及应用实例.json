{"title":"Node.js开发环境及应用实例","slug":"Node.js开发环境及应用实例","date":"2023-10-08T00:55:48.000Z","updated":"2025-02-04T00:37:34.550Z","comments":true,"path":"api/articles/Node.js开发环境及应用实例.json","excerpt":" [Figure] Node.js 简练，清爽","covers":["https://www.evernote.com/shard/s122/sh/dc99b8af-2a8b-4c92-80ae-53c85662c84e/EAOQ4Tvjt3XR_wnOW7aoUNhkXRSFxKDw74NLFTaMLLVKv_XDfXX-Lz2wOw/deep/0/image.png"],"content":"<p><img data-src=\"https://www.evernote.com/shard/s122/sh/dc99b8af-2a8b-4c92-80ae-53c85662c84e/EAOQ4Tvjt3XR_wnOW7aoUNhkXRSFxKDw74NLFTaMLLVKv_XDfXX-Lz2wOw/deep/0/image.png\" alt=\"node.jsnpmrundev\"></p>\n<p>Node.js 简练，清爽</p>\n<span id=\"more\"></span>\n\n<p>如何在IDEA中加入默认&#x2F;内置函数的auto-completion<br>IDEA node.js 函数的autocomplete</p>\n<h1 id=\"实现了批量编辑文件名含有netsuite的所有文件，添加tags-和-categories\"><a href=\"#实现了批量编辑文件名含有netsuite的所有文件，添加tags-和-categories\" class=\"headerlink\" title=\"实现了批量编辑文件名含有netsuite的所有文件，添加tags 和 categories\"></a>实现了批量编辑文件名含有netsuite的所有文件，添加tags 和 categories</h1><p>实现了月初的需求：寻求批量分类解决方案<br>这下面的代码可以灵活拓展，应用在不同的批量修改编辑磁盘目录下的文件内容。</p>\n<p>Node.js源代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;fs&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> buf = <span class=\"keyword\">new</span> <span class=\"title class_\">Buffer</span>.<span class=\"title function_\">alloc</span>(<span class=\"number\">1024</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;查看 _posts 目录&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> strPostDir = <span class=\"string\">&quot;/Users/carlzeng/AppTesting/blog/source/_posts&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> intUpdatedCnt = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">fs.<span class=\"title function_\">readdir</span>(strPostDir, <span class=\"keyword\">function</span> (<span class=\"params\">err, files</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(err);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        files.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span> (<span class=\"params\">file</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// console.log( file );</span></span><br><span class=\"line\">            <span class=\"comment\">// if (file == &#x27;0模版.md&#x27;)&#123;</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (file.<span class=\"title function_\">toLowerCase</span>().<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;netsuite&#x27;</span>) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(file);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//读取文件，并且替换文件中指定的字符串</span></span><br><span class=\"line\">                <span class=\"keyword\">let</span> replaceFile = <span class=\"keyword\">function</span> (<span class=\"params\">filePath, sourceRegx, targetStr</span>) &#123;</span><br><span class=\"line\">                    fs.<span class=\"title function_\">readFile</span>(filePath, <span class=\"keyword\">function</span> (<span class=\"params\">err, data</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">return</span> err;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">let</span> str = data.<span class=\"title function_\">toString</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"comment\">// console.info(str);</span></span><br><span class=\"line\"></span><br><span class=\"line\">                        str = str.<span class=\"title function_\">replace</span>(sourceRegx, targetStr);</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"comment\">// console.info(&quot;AFTER: \\n&quot; + str);</span></span><br><span class=\"line\">                        fs.<span class=\"title function_\">writeFile</span>(filePath, str, <span class=\"keyword\">function</span> (<span class=\"params\">err</span>) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (err) <span class=\"keyword\">return</span> err;</span><br><span class=\"line\">                        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125;);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">replaceFile</span>(strPostDir + <span class=\"string\">&#x27;/&#x27;</span> + file, <span class=\"regexp\">/tags: \\[\\]/</span>, <span class=\"string\">&quot;tags: [NetSuite] \\ncategories: NetSuite&quot;</span>)</span><br><span class=\"line\">                intUpdatedCnt++;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (intUpdatedCnt == <span class=\"number\">2000</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&quot;EndIterative&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.<span class=\"property\">message</span> != <span class=\"string\">&quot;EndIterative&quot;</span>) <span class=\"keyword\">throw</span> e;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Sublime-Text-编辑器-打开文件夹目录\"><a href=\"#Sublime-Text-编辑器-打开文件夹目录\" class=\"headerlink\" title=\"Sublime Text 编辑器 打开文件夹目录\"></a>Sublime Text 编辑器 打开文件夹目录</h2><p>Sublime Text 编辑器 打开文件夹目录，它便会加载这个文件夹下的所有文件，（用这种方式更新文章，非常便捷）<br>然后使用菜单“查找 》 替换”来搜索特定的特征的字符串.<br>搜索内容，也是支持正则表达</p>\n<h1 id=\"Node-js-Dev-步骤\"><a href=\"#Node-js-Dev-步骤\" class=\"headerlink\" title=\"Node.js Dev 步骤\"></a>Node.js Dev 步骤</h1><ol>\n<li><p>Git clone</p>\n<ol>\n<li>用IDE编辑器（比如：WebStorm）git clone下来</li>\n</ol>\n</li>\n<li><p>打开IDE，Terminal Tab会自动切换到clone下来的当前nodejs目录</p>\n<ol>\n<li>npm install<ol>\n<li>如遇到版本问题（比如本机运行环境的版本太低）就去下载安装新版，或者直接把node可执行文件放到&#x2F;usr&#x2F;local&#x2F;bin目录下（MAC环境，我放了四个文件版本就升级了：node，npm，npx，corepack）</li>\n</ol>\n</li>\n<li>npm run dev<ol>\n<li>如遇到问题，可能需要安装特定的包，比如：npx patch-package</li>\n</ol>\n</li>\n<li>[可选]npx vite build</li>\n</ol>\n</li>\n<li><p>可直接编辑Node JS代码</p>\n</li>\n<li><p>网络环境的情况下npm命令前面可能需要爬墙：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTPS_PROXY=&quot;http://127.0.0.1:7890&quot; </span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>调试</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">On MacOS or Linux, run the app with this <span class=\"built_in\">command</span>:</span></span><br><span class=\"line\">DEBUG=myapp:* npm start</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">On Windows Command Prompt, use this <span class=\"built_in\">command</span>:</span></span><br><span class=\"line\">set DEBUG=myapp:* &amp; npm start</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li></li>\n</ol>\n<h1 id=\"Node-js-Build-步骤\"><a href=\"#Node-js-Build-步骤\" class=\"headerlink\" title=\"Node.js Build 步骤\"></a>Node.js Build 步骤</h1><p>编译到当前项目的dist目录中： npm run build</p>\n<p>详细步骤见</p>\n<p><a href=\"https://21xrx.com/Articles/read_article/233702\">Node.js项目打包和发布的实现方法</a></p>\n<h2 id=\"Docker编译\"><a href=\"#Docker编译\" class=\"headerlink\" title=\"Docker编译\"></a>Docker编译</h2><p>​\tdocker build -t ipserver .</p>\n<h2 id=\"版本更新后的npm-run-build\"><a href=\"#版本更新后的npm-run-build\" class=\"headerlink\" title=\"版本更新后的npm run build\"></a>版本更新后的npm run build</h2><p>运行 npm run build 后提示报错</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm warn cli npm v11.0.0 does not support Node.js v20.10.0. This version of npm supports the following node versions: `^20.17.0 || &gt;=22.9.0`. You can find the latest version at https://nodejs.org/.</span><br><span class=\"line\">11.0.0</span><br></pre></td></tr></table></figure>\n\n<p>升级</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g npm</span><br><span class=\"line\">npm warn cli npm v11.0.0 does not support Node.js v20.10.0. This version of npm supports the following node versions: `^20.17.0 || &gt;=22.9.0`. You can find the latest version at https://nodejs.org/.</span><br><span class=\"line\">npm error code EACCES</span><br><span class=\"line\">npm error syscall rename</span><br><span class=\"line\">npm error path /usr/local/lib/node_modules/npm</span><br><span class=\"line\">npm error dest /usr/local/lib/node_modules/.npm-i9nnxROI</span><br><span class=\"line\">npm error errno -13</span><br><span class=\"line\">npm error [Error: EACCES: permission denied, rename &#x27;/usr/local/lib/node_modules/npm&#x27; -&gt; &#x27;/usr/local/lib/node_modules/.npm-i9nnxROI&#x27;] &#123;</span><br><span class=\"line\">npm error   errno: -13,</span><br><span class=\"line\">npm error   code: &#x27;EACCES&#x27;,</span><br><span class=\"line\">npm error   syscall: &#x27;rename&#x27;,</span><br><span class=\"line\">npm error   path: &#x27;/usr/local/lib/node_modules/npm&#x27;,</span><br><span class=\"line\">npm error   dest: &#x27;/usr/local/lib/node_modules/.npm-i9nnxROI&#x27;</span><br><span class=\"line\">npm error &#125;</span><br><span class=\"line\">npm error</span><br><span class=\"line\">npm error The operation was rejected by your operating system.</span><br><span class=\"line\">npm error It is likely you do not have the permissions to access this file as the current user</span><br><span class=\"line\">npm error</span><br><span class=\"line\">npm error If you believe this might be a permissions issue, please double-check the</span><br><span class=\"line\">npm error permissions of the file and its containing directories, or try running</span><br><span class=\"line\">npm error the command again as root/Administrator.</span><br><span class=\"line\">npm error A complete log of this run can be found in: /Users/carlzeng/.npm/_logs/2025-02-04T00_15_58_385Z-debug-0.log</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>切换到sudo -i 管理员用户, 重新尝试更新 </p>\n<p>HTTPS_PROXY&#x3D;”socks5:&#x2F;&#x2F;127.0.0.1:7890” npm update -g</p>\n<p><a href=\"https://bun.sh/\">https://bun.sh/</a></p>\n<p>Bun is a fast JavaScript<br>all-in-one toolkit<br>Develop, test, run, and bundle JavaScript &amp; TypeScript projects—all with Bun. Bun is an all-in-one JavaScript runtime &amp; toolkit designed for speed, complete with a bundler, test runner, and Node.js-compatible package manager. Bun aims for 100% Node.js compatibility.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -fsSL https://bun.sh/install | bash</span><br><span class=\"line\"></span><br><span class=\"line\">//如果下载失败就换成(前提是您有可以*墙的环境)</span><br><span class=\"line\">HTTPS_PROXY=&quot;socks5://127.0.0.1:7890&quot; curl -fsSL https://bun.sh/install | bash</span><br><span class=\"line\"></span><br><span class=\"line\">//还是失败, 就换成:</span><br><span class=\"line\">HTTPS_PROXY=&quot;socks5://127.0.0.1:7890&quot; curl -fsSL https://bun.sh/install | HTTPS_PROXY=&quot;socks5://127.0.0.1:7890&quot; bash</span><br></pre></td></tr></table></figure>\n\n\n\n<p>运行成功了, 但是环境没有配置好</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> bun                                                                      </span><br><span class=\"line\">dyld[968]: Symbol not found: _ubrk_clone                                                          </span><br><span class=\"line\">  Referenced from: /Users/carlzeng/.bun/bin/bun                                                   </span><br><span class=\"line\">  Expected in: /usr/lib/libicucore.A.dylib                                                        </span><br><span class=\"line\">zsh: abort      bun   </span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"Node-js的Docker容器\"><a href=\"#Node-js的Docker容器\" class=\"headerlink\" title=\"Node.js的Docker容器\"></a>Node.js的Docker容器</h1><p>目前完还不会打一整个docker的包，先搞一个Node.js的Docker容器，方便管理</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&quot;3&quot;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">    <span class=\"attr\">node:</span></span><br><span class=\"line\">        <span class=\"attr\">stdin_open:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">tty:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">container_name:</span> <span class=\"string\">nodejs</span></span><br><span class=\"line\">        <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">        <span class=\"attr\">volumes:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">&#x27;./app:/home/app&#x27;</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"number\">3001</span><span class=\"string\">:3000</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">node</span></span><br><span class=\"line\">        <span class=\"attr\">command:</span> <span class=\"string\">bash</span></span><br></pre></td></tr></table></figure>\n\n<p>本小节思路来源：<a href=\"https://21xrx.com/Articles/read_article/184856\">Mac上安装Node.js的Docker容器</a></p>\n<h2 id=\"Node-js的Docker-Deployment步骤\"><a href=\"#Node-js的Docker-Deployment步骤\" class=\"headerlink\" title=\"Node.js的Docker Deployment步骤\"></a>Node.js的Docker Deployment步骤</h2><ol>\n<li>docker exec -it nodejs bash</li>\n<li>[可选步骤，仅适用于升级发布]<ol>\n<li>ps -falx | head -1; ps -falx | grep ‘npm|node’</li>\n<li>kill -9 「node进程id，PPID值」</li>\n</ol>\n</li>\n<li>node &#x2F;home&#x2F;app&#x2F;blogsearch&#x2F;bin&#x2F;www &amp;<ol>\n<li>在命令后面添加一个 &amp;，让node运行在后台；回车以后，还有机会输入其他命令</li>\n<li>nohup node &#x2F;home&#x2F;app&#x2F;blogsearch&#x2F;bin&#x2F;www &amp;<ol>\n<li>回车以后，还有机会输入其他命令; 退出 docker exec -it 里面的bash后，程序还在后台运行</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>疑问：如何让这个node常驻在后台执行，意思是：当按键control+c退出当前docker exec -it nodejs bash时，不要退出这个进程。</p>\n<hr>\n<h1 id=\"已上线2-0版本\"><a href=\"#已上线2-0版本\" class=\"headerlink\" title=\"已上线2.0版本\"></a>已上线2.0版本</h1><p>实测：Adding full text Search via FlexSearch to a Blog</p>\n<p>起步：<a href=\"https://expressjs.com/en/starter/installing.html\">https://expressjs.com/en/starter/installing.html</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir blogsearch</span><br><span class=\"line\"></span><br><span class=\"line\">cd blogsearch </span><br><span class=\"line\"></span><br><span class=\"line\">npm init</span><br><span class=\"line\">\tentry point: (index.js) server.js</span><br><span class=\"line\">\t</span><br><span class=\"line\">HTTPS_PROXY=&quot;http://127.0.0.1:7890&quot; npm install express</span><br><span class=\"line\">\tadded 62 packages, and audited 63 packages in 10s</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">HTTPS_PROXY=&quot;http://127.0.0.1:7890&quot; npm install --save flexsearch</span><br><span class=\"line\">\tadded 1 package, and audited 64 packages in 3s</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"title class_\">Index</span>, <span class=\"title class_\">Document</span>, <span class=\"title class_\">Worker</span> &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;flexsearch&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> index = <span class=\"keyword\">new</span> <span class=\"title class_\">Index</span>();</span><br></pre></td></tr></table></figure>\n\n\n\n<p>思路来源：<a href=\"https://tnickel.de/2020/12/21/2020-12-Adding-full-text-search-via-flexSearch-to-a-blog/\">Adding full text Search via FlexSearch to a Blog</a></p>\n<form action=\"https://query.carlzeng.com:3/appsearch?q=\" method=\"get\" target=\"_blank\">\n<input name=\"q\" value type=\"search\" maxlength=\"36\" placeholder>\n</form>\n## 本地node程序的测试\n\n<p>备注: 本地node程序的测试方式为:</p>\n<ol>\n<li>在WebStorm &gt; Terminal中运行: <strong>npm start</strong></li>\n<li>打开浏览器访问: localhost:3000</li>\n<li>编辑修改的jade模版会实时展现在本地网页localhost:3000中</li>\n<li>app程序的修改部分, 需要重新启动&#x2F;运行npm start</li>\n</ol>\n","more":"<p>如何在IDEA中加入默认&#x2F;内置函数的auto-completion<br>IDEA node.js 函数的autocomplete</p>\n<h1 id=\"实现了批量编辑文件名含有netsuite的所有文件，添加tags-和-categories\"><a href=\"#实现了批量编辑文件名含有netsuite的所有文件，添加tags-和-categories\" class=\"headerlink\" title=\"实现了批量编辑文件名含有netsuite的所有文件，添加tags 和 categories\"></a>实现了批量编辑文件名含有netsuite的所有文件，添加tags 和 categories</h1><p>实现了月初的需求：寻求批量分类解决方案<br>这下面的代码可以灵活拓展，应用在不同的批量修改编辑磁盘目录下的文件内容。</p>\n<p>Node.js源代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;fs&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> buf = <span class=\"keyword\">new</span> <span class=\"title class_\">Buffer</span>.<span class=\"title function_\">alloc</span>(<span class=\"number\">1024</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;查看 _posts 目录&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> strPostDir = <span class=\"string\">&quot;/Users/carlzeng/AppTesting/blog/source/_posts&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> intUpdatedCnt = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">fs.<span class=\"title function_\">readdir</span>(strPostDir, <span class=\"keyword\">function</span> (<span class=\"params\">err, files</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(err);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        files.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span> (<span class=\"params\">file</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// console.log( file );</span></span><br><span class=\"line\">            <span class=\"comment\">// if (file == &#x27;0模版.md&#x27;)&#123;</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (file.<span class=\"title function_\">toLowerCase</span>().<span class=\"title function_\">indexOf</span>(<span class=\"string\">&#x27;netsuite&#x27;</span>) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(file);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">//读取文件，并且替换文件中指定的字符串</span></span><br><span class=\"line\">                <span class=\"keyword\">let</span> replaceFile = <span class=\"keyword\">function</span> (<span class=\"params\">filePath, sourceRegx, targetStr</span>) &#123;</span><br><span class=\"line\">                    fs.<span class=\"title function_\">readFile</span>(filePath, <span class=\"keyword\">function</span> (<span class=\"params\">err, data</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">return</span> err;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">let</span> str = data.<span class=\"title function_\">toString</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"comment\">// console.info(str);</span></span><br><span class=\"line\"></span><br><span class=\"line\">                        str = str.<span class=\"title function_\">replace</span>(sourceRegx, targetStr);</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"comment\">// console.info(&quot;AFTER: \\n&quot; + str);</span></span><br><span class=\"line\">                        fs.<span class=\"title function_\">writeFile</span>(filePath, str, <span class=\"keyword\">function</span> (<span class=\"params\">err</span>) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (err) <span class=\"keyword\">return</span> err;</span><br><span class=\"line\">                        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">                    &#125;);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"title function_\">replaceFile</span>(strPostDir + <span class=\"string\">&#x27;/&#x27;</span> + file, <span class=\"regexp\">/tags: \\[\\]/</span>, <span class=\"string\">&quot;tags: [NetSuite] \\ncategories: NetSuite&quot;</span>)</span><br><span class=\"line\">                intUpdatedCnt++;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (intUpdatedCnt == <span class=\"number\">2000</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Error</span>(<span class=\"string\">&quot;EndIterative&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e.<span class=\"property\">message</span> != <span class=\"string\">&quot;EndIterative&quot;</span>) <span class=\"keyword\">throw</span> e;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Sublime-Text-编辑器-打开文件夹目录\"><a href=\"#Sublime-Text-编辑器-打开文件夹目录\" class=\"headerlink\" title=\"Sublime Text 编辑器 打开文件夹目录\"></a>Sublime Text 编辑器 打开文件夹目录</h2><p>Sublime Text 编辑器 打开文件夹目录，它便会加载这个文件夹下的所有文件，（用这种方式更新文章，非常便捷）<br>然后使用菜单“查找 》 替换”来搜索特定的特征的字符串.<br>搜索内容，也是支持正则表达</p>\n<h1 id=\"Node-js-Dev-步骤\"><a href=\"#Node-js-Dev-步骤\" class=\"headerlink\" title=\"Node.js Dev 步骤\"></a>Node.js Dev 步骤</h1><ol>\n<li><p>Git clone</p>\n<ol>\n<li>用IDE编辑器（比如：WebStorm）git clone下来</li>\n</ol>\n</li>\n<li><p>打开IDE，Terminal Tab会自动切换到clone下来的当前nodejs目录</p>\n<ol>\n<li>npm install<ol>\n<li>如遇到版本问题（比如本机运行环境的版本太低）就去下载安装新版，或者直接把node可执行文件放到&#x2F;usr&#x2F;local&#x2F;bin目录下（MAC环境，我放了四个文件版本就升级了：node，npm，npx，corepack）</li>\n</ol>\n</li>\n<li>npm run dev<ol>\n<li>如遇到问题，可能需要安装特定的包，比如：npx patch-package</li>\n</ol>\n</li>\n<li>[可选]npx vite build</li>\n</ol>\n</li>\n<li><p>可直接编辑Node JS代码</p>\n</li>\n<li><p>网络环境的情况下npm命令前面可能需要爬墙：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTPS_PROXY=&quot;http://127.0.0.1:7890&quot; </span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>调试</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">On MacOS or Linux, run the app with this <span class=\"built_in\">command</span>:</span></span><br><span class=\"line\">DEBUG=myapp:* npm start</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">On Windows Command Prompt, use this <span class=\"built_in\">command</span>:</span></span><br><span class=\"line\">set DEBUG=myapp:* &amp; npm start</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li></li>\n</ol>\n<h1 id=\"Node-js-Build-步骤\"><a href=\"#Node-js-Build-步骤\" class=\"headerlink\" title=\"Node.js Build 步骤\"></a>Node.js Build 步骤</h1><p>编译到当前项目的dist目录中： npm run build</p>\n<p>详细步骤见</p>\n<p><a href=\"https://21xrx.com/Articles/read_article/233702\">Node.js项目打包和发布的实现方法</a></p>\n<h2 id=\"Docker编译\"><a href=\"#Docker编译\" class=\"headerlink\" title=\"Docker编译\"></a>Docker编译</h2><p>​\tdocker build -t ipserver .</p>\n<h2 id=\"版本更新后的npm-run-build\"><a href=\"#版本更新后的npm-run-build\" class=\"headerlink\" title=\"版本更新后的npm run build\"></a>版本更新后的npm run build</h2><p>运行 npm run build 后提示报错</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm warn cli npm v11.0.0 does not support Node.js v20.10.0. This version of npm supports the following node versions: `^20.17.0 || &gt;=22.9.0`. You can find the latest version at https://nodejs.org/.</span><br><span class=\"line\">11.0.0</span><br></pre></td></tr></table></figure>\n\n<p>升级</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g npm</span><br><span class=\"line\">npm warn cli npm v11.0.0 does not support Node.js v20.10.0. This version of npm supports the following node versions: `^20.17.0 || &gt;=22.9.0`. You can find the latest version at https://nodejs.org/.</span><br><span class=\"line\">npm error code EACCES</span><br><span class=\"line\">npm error syscall rename</span><br><span class=\"line\">npm error path /usr/local/lib/node_modules/npm</span><br><span class=\"line\">npm error dest /usr/local/lib/node_modules/.npm-i9nnxROI</span><br><span class=\"line\">npm error errno -13</span><br><span class=\"line\">npm error [Error: EACCES: permission denied, rename &#x27;/usr/local/lib/node_modules/npm&#x27; -&gt; &#x27;/usr/local/lib/node_modules/.npm-i9nnxROI&#x27;] &#123;</span><br><span class=\"line\">npm error   errno: -13,</span><br><span class=\"line\">npm error   code: &#x27;EACCES&#x27;,</span><br><span class=\"line\">npm error   syscall: &#x27;rename&#x27;,</span><br><span class=\"line\">npm error   path: &#x27;/usr/local/lib/node_modules/npm&#x27;,</span><br><span class=\"line\">npm error   dest: &#x27;/usr/local/lib/node_modules/.npm-i9nnxROI&#x27;</span><br><span class=\"line\">npm error &#125;</span><br><span class=\"line\">npm error</span><br><span class=\"line\">npm error The operation was rejected by your operating system.</span><br><span class=\"line\">npm error It is likely you do not have the permissions to access this file as the current user</span><br><span class=\"line\">npm error</span><br><span class=\"line\">npm error If you believe this might be a permissions issue, please double-check the</span><br><span class=\"line\">npm error permissions of the file and its containing directories, or try running</span><br><span class=\"line\">npm error the command again as root/Administrator.</span><br><span class=\"line\">npm error A complete log of this run can be found in: /Users/carlzeng/.npm/_logs/2025-02-04T00_15_58_385Z-debug-0.log</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>切换到sudo -i 管理员用户, 重新尝试更新 </p>\n<p>HTTPS_PROXY&#x3D;”socks5:&#x2F;&#x2F;127.0.0.1:7890” npm update -g</p>\n<p><a href=\"https://bun.sh/\">https://bun.sh/</a></p>\n<p>Bun is a fast JavaScript<br>all-in-one toolkit<br>Develop, test, run, and bundle JavaScript &amp; TypeScript projects—all with Bun. Bun is an all-in-one JavaScript runtime &amp; toolkit designed for speed, complete with a bundler, test runner, and Node.js-compatible package manager. Bun aims for 100% Node.js compatibility.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -fsSL https://bun.sh/install | bash</span><br><span class=\"line\"></span><br><span class=\"line\">//如果下载失败就换成(前提是您有可以*墙的环境)</span><br><span class=\"line\">HTTPS_PROXY=&quot;socks5://127.0.0.1:7890&quot; curl -fsSL https://bun.sh/install | bash</span><br><span class=\"line\"></span><br><span class=\"line\">//还是失败, 就换成:</span><br><span class=\"line\">HTTPS_PROXY=&quot;socks5://127.0.0.1:7890&quot; curl -fsSL https://bun.sh/install | HTTPS_PROXY=&quot;socks5://127.0.0.1:7890&quot; bash</span><br></pre></td></tr></table></figure>\n\n\n\n<p>运行成功了, 但是环境没有配置好</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> bun                                                                      </span><br><span class=\"line\">dyld[968]: Symbol not found: _ubrk_clone                                                          </span><br><span class=\"line\">  Referenced from: /Users/carlzeng/.bun/bin/bun                                                   </span><br><span class=\"line\">  Expected in: /usr/lib/libicucore.A.dylib                                                        </span><br><span class=\"line\">zsh: abort      bun   </span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"Node-js的Docker容器\"><a href=\"#Node-js的Docker容器\" class=\"headerlink\" title=\"Node.js的Docker容器\"></a>Node.js的Docker容器</h1><p>目前完还不会打一整个docker的包，先搞一个Node.js的Docker容器，方便管理</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&quot;3&quot;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">    <span class=\"attr\">node:</span></span><br><span class=\"line\">        <span class=\"attr\">stdin_open:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">tty:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">container_name:</span> <span class=\"string\">nodejs</span></span><br><span class=\"line\">        <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">        <span class=\"attr\">volumes:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">&#x27;./app:/home/app&#x27;</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"number\">3001</span><span class=\"string\">:3000</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">node</span></span><br><span class=\"line\">        <span class=\"attr\">command:</span> <span class=\"string\">bash</span></span><br></pre></td></tr></table></figure>\n\n<p>本小节思路来源：<a href=\"https://21xrx.com/Articles/read_article/184856\">Mac上安装Node.js的Docker容器</a></p>\n<h2 id=\"Node-js的Docker-Deployment步骤\"><a href=\"#Node-js的Docker-Deployment步骤\" class=\"headerlink\" title=\"Node.js的Docker Deployment步骤\"></a>Node.js的Docker Deployment步骤</h2><ol>\n<li>docker exec -it nodejs bash</li>\n<li>[可选步骤，仅适用于升级发布]<ol>\n<li>ps -falx | head -1; ps -falx | grep ‘npm|node’</li>\n<li>kill -9 「node进程id，PPID值」</li>\n</ol>\n</li>\n<li>node &#x2F;home&#x2F;app&#x2F;blogsearch&#x2F;bin&#x2F;www &amp;<ol>\n<li>在命令后面添加一个 &amp;，让node运行在后台；回车以后，还有机会输入其他命令</li>\n<li>nohup node &#x2F;home&#x2F;app&#x2F;blogsearch&#x2F;bin&#x2F;www &amp;<ol>\n<li>回车以后，还有机会输入其他命令; 退出 docker exec -it 里面的bash后，程序还在后台运行</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>疑问：如何让这个node常驻在后台执行，意思是：当按键control+c退出当前docker exec -it nodejs bash时，不要退出这个进程。</p>\n<hr>\n<h1 id=\"已上线2-0版本\"><a href=\"#已上线2-0版本\" class=\"headerlink\" title=\"已上线2.0版本\"></a>已上线2.0版本</h1><p>实测：Adding full text Search via FlexSearch to a Blog</p>\n<p>起步：<a href=\"https://expressjs.com/en/starter/installing.html\">https://expressjs.com/en/starter/installing.html</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir blogsearch</span><br><span class=\"line\"></span><br><span class=\"line\">cd blogsearch </span><br><span class=\"line\"></span><br><span class=\"line\">npm init</span><br><span class=\"line\">\tentry point: (index.js) server.js</span><br><span class=\"line\">\t</span><br><span class=\"line\">HTTPS_PROXY=&quot;http://127.0.0.1:7890&quot; npm install express</span><br><span class=\"line\">\tadded 62 packages, and audited 63 packages in 10s</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">HTTPS_PROXY=&quot;http://127.0.0.1:7890&quot; npm install --save flexsearch</span><br><span class=\"line\">\tadded 1 package, and audited 64 packages in 3s</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"title class_\">Index</span>, <span class=\"title class_\">Document</span>, <span class=\"title class_\">Worker</span> &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;flexsearch&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> index = <span class=\"keyword\">new</span> <span class=\"title class_\">Index</span>();</span><br></pre></td></tr></table></figure>\n\n\n\n<p>思路来源：<a href=\"https://tnickel.de/2020/12/21/2020-12-Adding-full-text-search-via-flexSearch-to-a-blog/\">Adding full text Search via FlexSearch to a Blog</a></p>\n<form action=\"https://query.carlzeng.com:3/appsearch?q=\" method=\"get\" target=\"_blank\">\n<input name=\"q\" value type=\"search\" maxlength=\"36\" placeholder>\n</form>\n## 本地node程序的测试\n\n<p>备注: 本地node程序的测试方式为:</p>\n<ol>\n<li>在WebStorm &gt; Terminal中运行: <strong>npm start</strong></li>\n<li>打开浏览器访问: localhost:3000</li>\n<li>编辑修改的jade模版会实时展现在本地网页localhost:3000中</li>\n<li>app程序的修改部分, 需要重新启动&#x2F;运行npm start</li>\n</ol>","categories":[{"name":"Node.js","path":"api/categories/Node.js.json"}],"tags":[{"name":"Javascript","path":"api/tags/Javascript.json"},{"name":"Node.js","path":"api/tags/Node.js.json"},{"name":"node","path":"api/tags/node.json"},{"name":"Debian","path":"api/tags/Debian.json"},{"name":"Linux","path":"api/tags/Linux.json"}]}