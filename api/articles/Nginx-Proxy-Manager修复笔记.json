{"title":"Nginx Proxy Manager修复笔记","slug":"Nginx-Proxy-Manager修复笔记","date":"2023-11-03T14:02:36.000Z","updated":"2024-08-03T05:47:19.620Z","comments":true,"path":"api/articles/Nginx-Proxy-Manager修复笔记.json","excerpt":" [Figure] 排查Nginx Proxy Manager，反向代理，让网站变成HTTPS","covers":["https://www.evernote.com/shard/s122/sh/ce8ceac4-b340-41f4-9e1e-4f4929ec58ce/OtBRkRas9WaV8LEDHgzPycXnbgoDdWkn62Q9mVuipiG8Ladqru7Q2G0Jlg/deep/0/image.png","https://img.carlzeng.top:3/i/2024/03/25/6600cfe4f3237.png","https://img.carlzeng.top:3/i/2024/03/25/6600e6fc8e104.png","https://img.carlzeng.top:3/i/2024/08/01/66aa6168f09ca.png","https://img.carlzeng.top:3/i/2024/08/01/66aa61d22854c.png"],"content":"<img class=\"lozad\" data-src=\"https://www.evernote.com/shard/s122/sh/ce8ceac4-b340-41f4-9e1e-4f4929ec58ce/OtBRkRas9WaV8LEDHgzPycXnbgoDdWkn62Q9mVuipiG8Ladqru7Q2G0Jlg/deep/0/image.png\">\n排查Nginx Proxy Manager，反向代理，让网站变成HTTPS\n<span id=\"more\"></span>\n\n<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>排查Nginx Proxy Manager，反向代理，让网站变成HTTPS</p>\n<p>证书签发失败的补救措施, 解决NPM 泛域名证书故障</p>\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><p>Nginx Proxy Manager 登录异常\t<br>    <a href=\"http://192.168.6.116:881/login\">http://192.168.6.116:881/login</a></p>\n<pre><code>11am NPM, 登录失败错误：Bad Gateway\n    template-db-1\t已停止\tjc21/mariadb-aria:latest\t\n发现是附属的docker的&quot;/template-db-1&quot; 启动失败\n- 修复？\n\n2023-11-03  3:13:28 0 [Note] /usr/bin/mysqld (mysqld 10.4.15-MariaDB) starting as process 1 ...\n2023-11-03  3:13:28 0 [ERROR] mysqld: Can&#39;t create/write to file &#39;/var/lib/mysql/aria_log_control&#39; (Errcode: 13 &quot;Permission denied&quot;)\n2023-11-03  3:13:28 0 [ERROR] mysqld: Got error &#39;Can&#39;t create file&#39; when trying to use aria control file &#39;/var/lib/mysql/aria_log_control&#39;\n2023-11-03  3:13:28 0 [ERROR] Plugin &#39;Aria&#39; init function returned error.\n2023-11-03  3:13:28 0 [ERROR] Plugin &#39;Aria&#39; registration as a STORAGE ENGINE failed.\n2023-11-03  3:13:28 0 [Note] Plugin &#39;InnoDB&#39; is disabled.\n2023-11-03  3:13:28 0 [Note] Plugin &#39;FEEDBACK&#39; is disabled.\n2023-11-03  3:13:28 0 [ERROR] Could not open mysql.plugin table. Some plugins may be not loaded\n2023-11-03  3:13:28 0 [ERROR] Failed to initialize plugins.\n2023-11-03  3:13:28 0 [ERROR] Aborting\n\n可能是从因为Nginx Proxy Manager是通过docker-compose来运行的，断电重启以后，docker无法自动正确地按docker-compose来启动了。\n解决办法是\n1. 关闭这个两个docker容器（jc21/nginx-proxy-manager:latest\t和 jc21/mariadb-aria:latest）\n2. SSH去执行\n    # cd /www/server/panel/data/compose/NginxPorxyManager/template\n    # docker-compose up -d\n这就意味着以后，以后机器重启，都要去手动去执行这docker-compose，有没有更好的解决办法？\n解决了docker启动，登录NPM还是提示：Bad Gateway错误\n检查了docker ps，依旧Restarting (1) 28 seconds ago  template-db-1\n</code></pre>\n<p>2:20pm<br>    Docker 具体错误<br>    <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">template-db-1   | 2023-11-03  6:20:19 0 [ERROR] Plugin &#x27;Aria&#x27; init function returned error.</span><br><span class=\"line\">template-db-1   | 2023-11-03  6:20:19 0 [ERROR] Plugin &#x27;Aria&#x27; registration as a STORAGE ENGINE failed.</span><br><span class=\"line\">template-db-1   | 2023-11-03  6:20:19 0 [Note] Plugin &#x27;InnoDB&#x27; is disabled.</span><br><span class=\"line\">template-db-1   | 2023-11-03  6:20:19 0 [Note] Plugin &#x27;FEEDBACK&#x27; is disabled.</span><br><span class=\"line\">template-db-1   | 2023-11-03  6:20:19 0 [ERROR] Could not open mysql.plugin table. Some plugins may be not loaded</span><br><span class=\"line\">template-db-1   | 2023-11-03  6:20:19 0 [ERROR] Failed to initialize plugins.</span><br><span class=\"line\">template-db-1   | 2023-11-03  6:20:19 0 [ERROR] Aborting\t\t</span><br></pre></td></tr></table></figure><br>    最后方案：放弃视频‘推荐’的方案，改用默认的sqlite.</p>\n<pre><code>4:46pm NPM\n改了配置以后，服务都正常了；可是新的配置在UI上没有加载之前的的配置内容。\n不配置maradb db section, NPM会自己在保存在./data目录下面一个database.sqlite文件数据库。\n5:10pm Cloudflare API token 重新配置\ndns_cloudflare_api_token e385e19ce47c207b15bf@@@@@\n重新申请证书，用DNS challenge的方式。 \n\n接下来，新的反代的就直接去新建就好了（待验证）\n》5:17pm\n</code></pre>\n<p>安装目录：&#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;NginxPorxyManager&#x2F;template</p>\n<h2 id=\"如何编辑artalk的robots-txt\"><a href=\"#如何编辑artalk的robots-txt\" class=\"headerlink\" title=\"如何编辑artalk的robots.txt\"></a>如何编辑artalk的robots.txt</h2><p>收到Google的邮件（New reason preventing your pages from being indexed）<br>第二天根据链接里面的indexing report，转到问题的问题；之前还去主站点位置添加的<a href=\"http://www.carlzeng.top/robots.txt\">www.carlzeng.top/robots.txt</a>.<br>原来是报告<a href=\"https://artalk.carlzeng.top:4443/robots.txt\">https://artalk.carlzeng.top:4443/robots.txt</a> 这个页面下的。</p>\n<p>在artalk容器以及映射出来的目录找了半天也找不到这个文件，莫非是程序动态生成的（无解了？）<br>也可能是NPM的反代有这样的设置?<br>        <a href=\"https://www.iots.vip/post/hexo-artalk-comment.html\">https://www.iots.vip/post/hexo-artalk-comment.html</a></p>\n<p>在BT中，&#x2F;www&#x2F;server&#x2F;phpmyadmin&#x2F;phpmyadmin_c123@@&#x2F;目录下，搜索到了robots.txt, 修改内容为：<br>    User-agent: *<br>    Allow: &#x2F;<br>    继续访问<a href=\"https://artalk.carlzeng.top:4443/robots.txt%EF%BC%9B%E4%BB%8D%E7%84%B6%E6%97%A0%E6%95%88\">https://artalk.carlzeng.top:4443/robots.txt；仍然无效</a><br>    尝试修改NPM中关于artalk反代的nginx配置文件，参考博客样式<br>    location &#x3D;&#x2F;robots.txt {<br>        default_type text&#x2F;html;<br>        add_header Content-Type “text&#x2F;plain; charset&#x3D;UTF-8”;<br>        return 200 “User-Agent: <em>\\nAllow: &#x2F;</em>“;<br>    }</p>\n<p>12:56pm NPM配置好的一个个host，被保存在了debian映射出来的那个目录？<br>    原来都保存在了 docker-compose.yml 的目录下，<br>    &#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;NginxPorxyManager&#x2F;template&#x2F;data&#x2F;nginx&#x2F;proxy_host#</p>\n<ol>\n<li><p>修改配置nginx问题\troot@Debian11:&#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;NginxPorxyManager&#x2F;template&#x2F;data&#x2F;nginx&#x2F;proxy_host# vi 1.conf </p>\n</li>\n<li><p>重启NPM docker-compose<br> root@Debian11:&#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;NginxPorxyManager&#x2F;template# docker-compose restart</p>\n</li>\n<li><p>验证 <a href=\"https://artalk.carlzeng.top:4443/robots.txt\">https://artalk.carlzeng.top:4443/robots.txt</a><br> User-agent: *<br> Allow:&#x2F;<br> Works perfect</p>\n</li>\n</ol>\n<p>灵感来源：<br>    <a href=\"https://www.iots.vip/post/hexo-artalk-comment.html\">如果需要 Nginx 反向代理， 这里提供一份 Nginx 配置参考</a><br>    <a href=\"https://zh.wikipedia.org/zh-tw/Robots.txt\">https://zh.wikipedia.org/zh-tw/Robots.txt</a></p>\n<h2 id=\"Debian-11的一些基础\"><a href=\"#Debian-11的一些基础\" class=\"headerlink\" title=\"Debian 11的一些基础\"></a>Debian 11的一些基础</h2><pre><code>Debian 11默认是关闭ssh的，如何开启？设置了自动开启，断电重启就无忧\n    旧方案是：在BT面板中开启SSH开关，然后用carl用户登录进ssh，在su，就可以到root用户下\n    新的：\n        算了，为了debian11安全，就不开放ssh了；走面板，或者pve终端的ssh\n\n\nartalk docker 没有自动重启，如何设置特定的docker自动重启？假设机器死机需要断电重启\n    手动重启成功\n</code></pre>\n<h2 id=\"缩短URL之简化4443端口成3端口\"><a href=\"#缩短URL之简化4443端口成3端口\" class=\"headerlink\" title=\"缩短URL之简化4443端口成3端口\"></a>缩短URL之简化4443端口成3端口</h2><p>尝试在NPM的docker把443映射成4443，同时增加了映射到3（后来发现这个步骤是可选的）</p>\n<img class=\"lozad\" data-src=https://www.evernote.com/shard/s122/sh/04908e9f-02fa-4e85-ba8c-47448ca38092/uSFzRs0qKFfN6TqubZnYUk95Mlr6lsMFQtozVsBmzGLlvV_h8Tu1P_iXHg/deep/0/image.png>\n\n<p>原来仅需要在OP上，把3端口映射给重复的内部端口4443即可。<br>    <a href=\"https://c.carlzeng.top:4443/tv\">https://c.carlzeng.top:4443/tv</a><br>    <a href=\"https://c.carlzeng.top:3/tv\">https://c.carlzeng.top:3/tv</a></p>\n<h3 id=\"Docker端口映射之一对多的几种情况\"><a href=\"#Docker端口映射之一对多的几种情况\" class=\"headerlink\" title=\"Docker端口映射之一对多的几种情况\"></a>Docker端口映射之一对多的几种情况</h3><ol>\n<li>端口多对一，可行：访问宿主的多个端口可以映射到容器中的同一个端口。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># docker run -d -p 9000-9001:9000 tomcat:8.5-jre8</span><br></pre></td></tr></table></figure></li>\n<li>多对多的几种情况 9000-9001:9000-9001 可行<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># docker run -d -p 9000-9001:9000-9001 tomcat:8.5-jre8</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"NPM弊端？\"><a href=\"#NPM弊端？\" class=\"headerlink\" title=\"NPM弊端？\"></a>NPM弊端？</h2><p>不知为何本地局域网可访问的<a href=\"http://192.168.6.116:881/\">http://192.168.6.116:881/</a> 无法映射代理到外网，来实现npm自己代理自己的目标。</p>\n<p>真是奇怪，<a href=\"https://npm.carlzeng.top:4443/\">https://npm.carlzeng.top:4443/</a> 更可能是NPM自己做了什么设置？无法自己代理自己的web管理服务？</p>\n<div class=\"note success\"><p>2023年12月初：解决办法：用<a href=\"https://c.carlzeng.top:3/web2\">在线云浏览器Firefox</a>，远程过去访问本地局域网的NPM面板即可</p>\n<p>Mamoto面板反代以后无法正常登录，也请使用<a href=\"https://c.carlzeng.top:3/web2\">在线云浏览器Firefox</a></p>\n</div>\n\n\n\n<h2 id=\"J4125-pve半死状态\"><a href=\"#J4125-pve半死状态\" class=\"headerlink\" title=\"J4125 pve半死状态\"></a>J4125 pve半死状态</h2><p>这种状态大约半个月左右出现一次；难受；这次是（已启动13天1小时20分57秒）</p>\n<p>现象：</p>\n<ol>\n<li><p>各个设备终端上网正常</p>\n</li>\n<li><p>画面卡死，无法登录 <a href=\"http://192.168.6.116:881/nginx/proxy\">http://192.168.6.116:881/nginx/proxy</a></p>\n</li>\n<li><p>SSH可以到达192.168.6.1</p>\n<ol>\n<li>web到OP也正常</li>\n</ol>\n</li>\n<li><p>无法连接pve <a href=\"https://192.168.6.2:8006/\">https://192.168.6.2:8006</a></p>\n<ol>\n<li>This site can’t be reached192.168.6.2 took too long to respond.</li>\n</ol>\n</li>\n<li><p>SSH无法到达bebian .116的</p>\n<ol>\n<li>kex_exchange_identification: read: Operation timed out<br>banner exchange: Connection to 192.168.6.116 port 22: Operation timed out</li>\n</ol>\n</li>\n<li><p>metaUI无法正常打开，<a href=\"http://192.168.6.116:9090/#/overview\">http://192.168.6.116:9090/#/overview</a></p>\n<ol>\n<li>This site can’t be reached192.168.6.116 took too long to respond.</li>\n</ol>\n</li>\n<li><p>StatCount 无法正常打开，<a href=\"http://192.168.6.116:8597/index.php?module=CoreHome&action=index&idSite=1&period=day&date=yesterday#?period=day&date=2023-12-01&idSite=1&category=Dashboard_Dashboard&subcategory=1\">http://192.168.6.116:8597/index.php?module=CoreHome&amp;action=index&amp;idSite=1&amp;period=day&amp;date=yesterday#?period=day&amp;date=2023-12-01&amp;idSite=1&amp;category=Dashboard_Dashboard&amp;subcategory=1</a></p>\n<ol>\n<li>This site can’t be reached192.168.6.116 took too long to respond.</li>\n</ol>\n</li>\n<li><p>IPNAS 无法打开<a href=\"http://192.168.6.203:5000/\">http://192.168.6.203:5000/</a></p>\n<ol>\n<li>奇怪的是：用手机可以正常打开；反复测试中</li>\n</ol>\n</li>\n<li><p>NAS中的docker Aria2 可以正常使用 <a href=\"https://aria2.carlzeng.top:4443/#!/downloading\">https://aria2.carlzeng.top:4443/#!/downloading</a></p>\n</li>\n<li><p>Debian clash 的 7890无法正常使用</p>\n</li>\n<li><p>Debian</p>\n<ol>\n<li>artalk 正常</li>\n<li>bt 无法连接web</li>\n<li>dujiaoka正常<a href=\"https://buy.carlzeng.top:4443/\">https://buy.carlzeng.top:4443/</a></li>\n<li>Yourls正常<a href=\"https://c.carlzeng.top:3/admin/index.php\">https://c.carlzeng.top:3/admin/index.php</a><ol>\n<li>Yourls后台可以正常登录查看<a href=\"https://c.carlzeng.top:3/admin/index.php\">https://c.carlzeng.top:3/admin/index.php</a></li>\n</ol>\n</li>\n<li>metaUI又能正常打开了，<a href=\"http://192.168.6.116:9090/#/overview\">http://192.168.6.116:9090/#/overview</a><ol>\n<li>可是，仍然无法连接到<a href=\"http://192.168.6.116:9091/\">http://192.168.6.116:9091</a></li>\n</ol>\n</li>\n<li>NPM无法正常打开<a href=\"http://192.168.6.116:881/nginx/proxy\">http://192.168.6.116:881/nginx/proxy</a></li>\n<li>Hnet Web首页正常了<a href=\"https://proxy.carlzeng.top:4443/\">https://proxy.carlzeng.top:4443/</a></li>\n<li>电脑端的statcounter无法打开，可是手机端（在系统中）可以正常查看各种信息<ol>\n<li>奇怪</li>\n</ol>\n</li>\n<li></li>\n</ol>\n</li>\n<li><p>20231204昨天没有重启，后来自动就恢复了；今天又假死了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -vz 192.168.6.116 881                                                                              </span><br><span class=\"line\">nc: connectx to 192.168.6.116 port 881 (tcp) failed: No route to host </span><br></pre></td></tr></table></figure></li>\n</ol>\n<blockquote>\n<p>PVE, 以及PVE中的docker debian，NAS都下线了</p>\n<p>可是OP还活着，一直充当主路由的工作</p>\n<p>稀奇的是手机确可以ping通192.168.6.116；这简直无法理解</p>\n<p>手机端也是无法打开NPM的881端口，可是matomo可以正常使用</p>\n<p>重启一下MAC电脑，重新测试</p>\n</blockquote>\n<p>重启MAC，链接NPM又正常了！pve又可以链接了; 原来问题的根源不是在J4125；汗，而是在用来发现问题的MAC上，引以为戒。下次核查的时候要多设备核实（才能去硬重启J4125）</p>\n<h2 id=\"跳闸后J4125通电未正常启动\"><a href=\"#跳闸后J4125通电未正常启动\" class=\"headerlink\" title=\"跳闸后J4125通电未正常启动\"></a>跳闸后J4125通电未正常启动</h2><p>J4125断电后无法启动，<br>    导致K2P无法正常获取192.168.6网段的IP地址；（获取的169.254.12.86不正常IP）<br>    整个本地局域网瘫痪。</p>\n<pre><code>理清楚，如果J4125小主机无法启动，要怎么调试？\n有没有画面输出？如何输出画面；\n答：通过连接HDMI的液晶显示器，在连接USB键盘操作\n\n目前J4125 和 K2P是怎么连接工作的？\n\n目前J4125的网口分配情况？\n\n如何调试？调整K2P的设置？连接端口？\n答：通过连接HDMI的液晶显示器，在连接USB键盘操作\n</code></pre>\n<p>J4125进入命令行模式（由于WEB控制没有启动，无法远程。需要借助显示器和键盘）</p>\n<p>一种pve的命令行模式，好像输出startup.sh的倒计时（由于无显示器，进入命令行模式后，通过WEB只能判定其属于无法启动或死机状态）</p>\n<p>无意间通过输入help（很多命令，但大部分一闪而过，无法使用 ｜more来暂停；不知道怎么慢慢输出所有的help内容）和 exit命令，退出了这个命令行模式；系统正常启动成功，所有虚拟机和docker，启动成功。</p>\n<p>目前启动状态（这也是最干净的状态）：</p>\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/03/25/6600cfe4f3237.png\" alt=\"image-20240325091403026\"></p>\n<h3 id=\"解决Debian异常\"><a href=\"#解决Debian异常\" class=\"headerlink\" title=\"解决Debian异常\"></a>解决Debian异常</h3><p>Yourls、Matomo没有正常启动</p>\n<p>pve中debian状态也正常，ping debian的IP是正常的。最终进入SSH，通过bt命令14，查看了面板地址。进入bt面板后，发现是mariadb没有正常启动，造成了特定的三个容器（Yourls、Matomo 和surveyking）因缺少数据库而无法正常运行。</p>\n<p>解决办法：</p>\n<p>ssh下进入目录进行docker-compose down 和 docker-compose up</p>\n<p>查看日志发现Permission denied错误</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yourls_mysql    | 2024-03-25 01:34:54+00:00 [Note] [Entrypoint]: Switching to dedicated user &#x27;mysql&#x27;          </span><br><span class=\"line\">yourls_mysql    | 2024-03-25 01:34:54+00:00 [Note] [Entrypoint]: Entrypoint script for MariaDB Server 1:11.2.2</span><br><span class=\"line\">+maria~ubu2204 started.                                                                                       </span><br><span class=\"line\">yourls_mysql    | 2024-03-25 01:34:55+00:00 [Note] [Entrypoint]: Initializing database files                  </span><br><span class=\"line\">yourls_mysql    | 2024-03-25  1:34:55 0 [Warning] Can&#x27;t create test file &#x27;/var/lib/mysql/d6741f2674af.lower-te</span><br><span class=\"line\">st&#x27; (Errcode: 13 &quot;Permission denied&quot;)                                                                         </span><br><span class=\"line\">yourls_mysql    | /usr/sbin/mariadbd: Can&#x27;t change dir to &#x27;/var/lib/mysql/&#x27; (Errcode: 13 &quot;Permission denied&quot;) </span><br><span class=\"line\">yourls_mysql    | 2024-03-25  1:34:55 0 [ERROR] Aborting                                                      </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql    | Installation of system tables failed!  Examine the logs in                                  </span><br><span class=\"line\">yourls_mysql    | /var/lib/mysql/ for more information.                                                       </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql    | The problem could be conflicting information in an external                                 </span><br><span class=\"line\">yourls_mysql    | my.cnf files. You can ignore these by doing:                                                </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql    |     shell&gt; /usr/bin/mariadb-install-db --defaults-file=~/.my.cnf                            </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql    | You can also try to start the mariadbd daemon with:                                         </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql    |     shell&gt; /usr/sbin/mariadbd --skip-grant-tables --general-log &amp;                           </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql    | and use the command line tool /usr/bin/mariadb                                              </span><br><span class=\"line\">yourls_mysql    | to connect to the mysql database and look at the grant tables:                              </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql    |     shell&gt; /usr/bin/mariadb -u root mysql                                                   </span><br><span class=\"line\">yourls_mysql    |     MariaDB&gt; show tables;                                                                   </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql    | Try &#x27;/usr/sbin/mariadbd --help&#x27; if you have problems with paths.  Using                     </span><br><span class=\"line\">yourls_mysql    | --general-log gives you a log in /var/lib/mysql/ that may be helpful.                       </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql    | The latest information about mariadb-install-db is available at                             </span><br><span class=\"line\">yourls_mysql    | https://mariadb.com/kb/en/installing-system-tables-mysql_install_db                         </span><br><span class=\"line\">yourls_mysql    | You can find the latest source at https://downloads.mariadb.org and                         </span><br><span class=\"line\">yourls_mysql    | the maria-discuss email list at https://launchpad.net/~maria-discuss                        </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql    | Please check all of the above before submitting a bug report                                </span><br><span class=\"line\">yourls_mysql    | at https://mariadb.org/jira                                                                 </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql exited with code 1 </span><br></pre></td></tr></table></figure>\n\n<p>解决办法：授予mysql用户在目录下的执行权限&#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;yourls_service&#x2F;template&#x2F;yMariaDb</p>\n<p>解决mariadb启动正常后，访问yourls网页仍然错误</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yourls_service  | 172.18.0.1 - - [25/Mar/2024:01:38:29 +0000] &quot;GET /admin/index.php HTTP/1.1&quot; 403 521 &quot;-&quot; &quot;Moz</span><br><span class=\"line\">illa/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/53</span><br><span class=\"line\">7.36&quot;                                                                                                         </span><br><span class=\"line\">yourls_service  | [Mon Mar 25 01:38:29.171055 2024] [core:crit] [pid 23] (13)Permission denied: [client 172.18</span><br><span class=\"line\">.0.1:18438] AH00529: /var/www/html/.htaccess pcfg_openfile: unable to check htaccess file, ensure it is readab</span><br><span class=\"line\">le and that &#x27;/var/www/html/&#x27; is executable                                                                    </span><br><span class=\"line\">yourls_service  | [Mon Mar 25 01:38:29.208916 2024] [core:crit] [pid 24] (13)Permission denied: [client 172.18</span><br><span class=\"line\">.0.1:18450] AH00529: /var/www/html/.htaccess pcfg_openfile: unable to check htaccess file, ensure it is readab</span><br><span class=\"line\">le and that &#x27;/var/www/html/&#x27; is executable, referer: https://c.carlzeng.top:4443/admin/index.php              </span><br><span class=\"line\">yourls_service  | 172.18.0.1 - - [25/Mar/2024:01:38:29 +0000] &quot;GET /favicon.ico HTTP/1.1&quot; 403 521 &quot;https://c.c</span><br><span class=\"line\">arlzeng.top:4443/admin/index.php&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, </span><br><span class=\"line\">like Gecko) Chrome/122.0.0.0 Safari/537.36&quot;                                                                   </span><br><span class=\"line\">yourls_service  | [Mon Mar 25 01:38:29.737844 2024] [core:crit] [pid 25] (13)Permission denied: [client 172.18</span><br><span class=\"line\">.0.1:18464] AH00529: /var/www/html/.htaccess pcfg_openfile: unable to check htaccess file, ensure it is readab</span><br><span class=\"line\">le and that &#x27;/var/www/html/&#x27; is executable </span><br></pre></td></tr></table></figure>\n\n<p>解决办法：授予所有用户在目录下的执行权限777</p>\n<p>&#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;yourls_service&#x2F;template&#x2F;yourlsData20231229</p>\n<p>yourls Docker启动修复</p>\n<p>chown mysql &#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;yourls_service&#x2F;template&#x2F;yMariaDb -R<br>chown mysql &#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;yourls_service&#x2F;template&#x2F;yourlsData20231229 -R</p>\n<p>chmod +777 &#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;yourls_service&#x2F;template&#x2F;yMariaDb -R<br>chmod +777 &#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;yourls_service&#x2F;template&#x2F;yourlsData20231229&#x2F; -R<br>cd &#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;yourls_service&#x2F;template<br>docker-compose down<br>docker-compose up -d</p>\n<h3 id=\"解决mariadb-和-应用程序的-Permission-denied-错误\"><a href=\"#解决mariadb-和-应用程序的-Permission-denied-错误\" class=\"headerlink\" title=\"解决mariadb 和 应用程序的 Permission denied 错误\"></a>解决mariadb 和 应用程序的 Permission denied 错误</h3><p>同上原理:</p>\n<ul>\n<li>将mariadb的目录授予mysql用户执行权限</li>\n<li>将应用程序的主目录授予所有用户执行权限777</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">应用程序目录如果没有777权限，错误信息如下：</span></span><br><span class=\"line\">Matomo     | [Mon Mar 25 09:52:04.935003 2024] [core:crit] [pid 51] (13)Permission denied: [client 192.168.6.2。21:65111] AH00529: /var/www/html/.htaccess pcfg_openfile: unable to check htaccess file, ensure it is readable</span><br><span class=\"line\"> and that &#x27;/var/www/html/&#x27; is executable, referer: http://192.168.6.116:8597/index.php   </span><br></pre></td></tr></table></figure>\n\n\n\n<p>Matomo Docker启动修复</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +777 /www/server/panel/data/compose/matomo/matomo -R</span><br><span class=\"line\">chmod +777 /www/server/panel/data/compose/matomo/matomodb -R</span><br><span class=\"line\">\t</span><br><span class=\"line\">chown mysql /www/server/panel/data/compose/matomo/matomo -R</span><br><span class=\"line\">chown mysql /www/server/panel/data/compose/matomo/matomodb -R</span><br><span class=\"line\"></span><br><span class=\"line\">cd /www/server/panel/data/compose/matomo</span><br><span class=\"line\">docker-compose down</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n\n\n<p>chmod +777 &#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;surveyking&#x2F;mysql_data -R</p>\n<p>cd &#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;searx<br>chmod +777 searx&#x2F; -R<br>解决了docker启动错误</p>\n<h3 id=\"MAC清除-刷新DNS缓存\"><a href=\"#MAC清除-刷新DNS缓存\" class=\"headerlink\" title=\"MAC清除+刷新DNS缓存\"></a>MAC清除+刷新DNS缓存</h3><p>Mac OSX本机的DNS缓存误导了一些自定义域名的IP指向。</p>\n<p>ping  frp.carlzeng.top -c 3<br>    PING frp.carlzeng.top (123.112.254.91): 56 data bytes<br>    64 bytes from 123.112.254.91: icmp_seq&#x3D;0 ttl&#x3D;62 time&#x3D;7.484 ms</p>\n<pre><code>发现是Mac OSX本机的DNS缓存误导了一些自定义域名的IP指向。\n</code></pre>\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/03/25/6600e6fc8e104.png\" alt=\"image-20240325105222077\"></p>\n<p>ping  frp.carlzeng.top -c 3<br>    PING frp.carlzeng.top (123.112.254.91): 56 data bytes<br>    64 bytes from 123.112.254.91: icmp_seq&#x3D;0 ttl&#x3D;62 time&#x3D;7.484 ms</p>\n<pre><code>发现是Mac OSX本机的DNS缓存误导了一些自定义域名的IP指向。\n10:51am dns问题依旧，\n\n\n11:54am 突然frp的域名恢复了：\nping -c 3 frp.carlzeng.top\nPING frp.carlzeng.top (221.218.236.157): 56 data bytes\n64 bytes from 221.218.236.157: icmp_seq=0 ttl=64 time=2.954 ms\n</code></pre>\n<p>​\t</p>\n<p>how to fix non-authoritative answer<br>似乎只有等待！（大约等了2小时）</p>\n<p>优化：删除掉mail.carlzeng.top的A记录，因为*的A记录，会自动涵盖这一条A记录</p>\n<h3 id=\"修复DNS-A记录\"><a href=\"#修复DNS-A记录\" class=\"headerlink\" title=\"修复DNS A记录\"></a>修复DNS A记录</h3><p>7:30pm 发现img.carlzeng.top仍然对应了错误的IP，导致上传图片出错</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">策略：</span><br><span class=\"line\">1. 反复的dig查询dig img.carlzeng.top</span><br><span class=\"line\">2. 更换本机DNS IP服务器地址</span><br><span class=\"line\">8:17pm dns的A记录依旧是错误的；即便更换了本机的DNS服务器到本地192.168.6.1 TTL越查询，数值越小；目前到了341<span class=\"comment\">; 猜测这个值越来越小的时候（到0），会主动向CF的根域名服务器查询；到那时，就会返回正确的IP。</span></span><br><span class=\"line\">8:19pm </span><br><span class=\"line\"><span class=\"comment\">;; ANSWER SECTION:</span></span><br><span class=\"line\">img.carlzeng.top.       246     IN      A       123.112.254.91</span><br><span class=\"line\">8:21pm</span><br><span class=\"line\">img.carlzeng.top.       109     IN      A       123.112.254.91</span><br><span class=\"line\">8:22pm 自动变为41</span><br><span class=\"line\">8:22pm 自动变为19，然后9</span><br><span class=\"line\">8:23pm <span class=\"comment\">#重新返回到3600秒=1小时</span></span><br><span class=\"line\"><span class=\"comment\">;; ANSWER SECTION:</span></span><br><span class=\"line\">img.carlzeng.top.       3600    IN      A       221.218.236.157</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 也就是说DNS记录在自动循环着向主/根服务器查询A记录或更新，每个小时，不停递减后查询一次。</span></span><br></pre></td></tr></table></figure>\n\n<p>策略：</p>\n<ol>\n<li><p>反复的dig查询dig img.carlzeng.top（检查ANSWER SECTION 中的TTL）</p>\n</li>\n<li><p>更换本机DNS IP服务器地址（切换以后，dig查询发现 TTL值，一直加快速度地变小，相对于不切换DNS服务器的情况下）</p>\n<p>Note： <a href=\"https://howtouselinux.medium.com/dns%E8%AE%B0%E5%BD%95%E8%AF%A6%E8%A7%A3-355e923f1ccc\">DNS记录详解</a> 中详细讲解了TTL的含义及设计原理</p>\n</li>\n</ol>\n<h3 id=\"DNS相关命令\"><a href=\"#DNS相关命令\" class=\"headerlink\" title=\"DNS相关命令\"></a>DNS相关命令</h3><p>dig命令：</p>\n<ul>\n<li>dig img.carlzeng.top 查询DNS寻址过程</li>\n<li>dig +short math.stackexchange.com 直接显示DNS寻址结果</li>\n<li>dig @8.8.8.8 math.stackexchange.com 向特定DNS服务器寻址</li>\n<li>dig ns com 查询com顶级域名的ns记录</li>\n<li>dig a com 查询com顶级域名的a记录</li>\n<li>dig -x 192.30.252.153 用于查询PTR记录（用IP查域名）</li>\n</ul>\n<p>host命令：</p>\n<ul>\n<li>host github.com 返回域名的各种记录</li>\n<li>host 192.30.252.153 逆向查询IP地址对应的域名</li>\n</ul>\n<p>nslookup命令：</p>\n<ul>\n<li>nslookup github.com 查询域名记录</li>\n</ul>\n<p>whois命令：</p>\n<ul>\n<li>whois abc.com 查询域名的注册情况</li>\n</ul>\n<h3 id=\"K2P-udpxy异常\"><a href=\"#K2P-udpxy异常\" class=\"headerlink\" title=\"K2P udpxy异常\"></a>K2P udpxy异常</h3><p>ps 发现系统有：<br>441 admin      776 S  &#x2F;usr&#x2F;sbin&#x2F;udpxy -m br0 -p 8012 -B 65536 -c 10 -M 120</p>\n<p>kill -9 441 后，运行<br>udpxy -p 8012</p>\n<p>udpxy一切正常了；可以正常使用VLC播放：<a href=\"http://192.168.6.243:8012/rtp/239.3.1.158:8000\">http://192.168.6.243:8012/rtp/239.3.1.158:8000</a></p>\n<p>测试：</p>\n<p>UI上看太玄学了，kill掉‘udpxy -p 8012’，重新检查ps中udpxy都消失后，重新<a href=\"http://192.168.6.243/Advanced_IPTV_Content.asp\">提交IPTV页面</a>一切正常了。</p>\n<p>这导致每次重启K2P都需要运行 &#x2F;usr&#x2F;sbin&#x2F;udpxy -p 8012 </p>\n<p>即便在<a href=\"http://192.168.6.243/Advanced_Scripts_Content.asp\">自定义脚本》路由器启动后执行</a>定义了 &#x2F;usr&#x2F;sbin&#x2F;udpxy -p 8012 也不知道是否管用？</p>\n<blockquote>\n<p>期待下一次的断电重启测试</p>\n</blockquote>\n<hr>\n<p>无意间点进PVE，不看不知道，一看吓一跳：</p>\n<p>原来很可能是pve的磁盘占用 96.69% (104.62 GiB的108.20 GiB）</p>\n<p>我不知道&#x2F;dev&#x2F;sdb3(在SSD128上面, Reeinno CY128GB S1S3上面)为何就满了？里面放了什么了？<br><a href=\"https://www.youtube.com/watch?v=slZ3SwFflHU\">pve存储空间扩容 磁盘大小调整 proxmox6</a></p>\n<p>采取措施（对debian和NAS）</p>\n<p>​\tdocker volume prune<br>​\tdocker image prune</p>\n<p>没招，找了一圈又一圈：没有找到解决办法。</p>\n<p>尝试着把Win2008的备份10G的文件删除，PVE的使用率从96.69%降到87.55%。先用吧，观察着debian中docker的安装有没有占用这块128G的SSD盘？</p>\n<blockquote>\n<p>答案是：有的，目前debian的数据还是没有被放到另外一块512的SSD上。2023.12.29</p>\n</blockquote>\n<h2 id=\"Linux-查看当前开放端口\"><a href=\"#Linux-查看当前开放端口\" class=\"headerlink\" title=\"Linux 查看当前开放端口\"></a>Linux 查看当前开放端口</h2><p>在K2P的padavan或者openwrt里面都是适用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -nl</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">tcpdump 不会用啊</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">想要查看那些客户端连接了？</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">通过padavan的UI查询：网络信息 &gt; 流量监控https://k2pzl.carlzeng.top:4443/Main_BWMon.asp</span></span><br><span class=\"line\"></span><br><span class=\"line\">找到了服务器上frps的192.168.6.116:6006, frpc映射至192.168.123.189:5555</span><br><span class=\"line\">这样scrcpy -e</span><br><span class=\"line\">就会显示两个客户端了！</span><br><span class=\"line\">scrcpy -e</span><br><span class=\"line\">scrcpy 2.1.1 &lt;https://github.com/Genymobile/scrcpy&gt;</span><br><span class=\"line\">ERROR: Multiple (2) ADB devices over TCP/IP:</span><br><span class=\"line\">ERROR:     --&gt; (tcpip)  192.168.6.116:6006              device  p230</span><br><span class=\"line\">ERROR:     --&gt; (tcpip)  192.168.6.216:5555              device  p230</span><br><span class=\"line\">ERROR: Select a device via -s (--serial), -d (--select-usb) or -e (--select-tcpip)</span><br><span class=\"line\">ERROR: Server connection failed</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">手动指定连接到那一个adb 5555 客户端（即便是被frp映射过的也一样）</span></span><br><span class=\"line\">scrcpy --tcpip=192.168.6.116:6006</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"重启docker服务\"><a href=\"#重启docker服务\" class=\"headerlink\" title=\"重启docker服务\"></a>重启docker服务</h1><p>这是一个类似于把整台软路由重启一样的指令</p>\n<p>磁盘占用率97%导致数据库无法写入，应用开始出错。  为什么重启？据说能减轻磁盘占用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@Debian11:/www/server/panel/data/compose/matomo# du -hs /var/lib/docker/                               </span><br><span class=\"line\">11G     /var/lib/docker/ </span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">docker system <span class=\"built_in\">df</span></span></span><br><span class=\"line\">TYPE            TOTAL     ACTIVE    SIZE      RECLAIMABLE</span><br><span class=\"line\">Images          17        14        5.674GB   624.4MB (11%)</span><br><span class=\"line\">Containers      14        14        224.4MB   0B (0%)</span><br><span class=\"line\">Local Volumes   0         0         0B        0B</span><br><span class=\"line\">Build Cache     0         0         0B        0B</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">docker system prune -a</span></span><br><span class=\"line\">y</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">docker system <span class=\"built_in\">df</span></span></span><br><span class=\"line\">TYPE            TOTAL     ACTIVE    SIZE      RECLAIMABLE</span><br><span class=\"line\">Images          14        14        5.057GB   7.335MB (0%)</span><br><span class=\"line\">Containers      14        14        224.4MB   0B (0%)</span><br><span class=\"line\">Local Volumes   0         0         0B        0B</span><br><span class=\"line\">Build Cache     0         0         0B        0B</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl restart  docker</span><br></pre></td></tr></table></figure>\n\n<p>重启  以后 引导磁盘大小92.47% (45.23 GiB的48.91 GiB)</p>\n<p>重启以后，其他的服务都正常重启了，除了：Matomo，ChatgptNextWeb，和Firefox。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. docker start chatgpt-next-web</span><br><span class=\"line\"></span><br><span class=\"line\">2. 添加</span><br><span class=\"line\">restart: always</span><br><span class=\"line\">到firefox的docker-compose.yml文件中</span><br><span class=\"line\">启动巨慢，表面上docker已经启动完成的状态，可实际中，观察日志</span><br><span class=\"line\">[cont-init   ] 15-cjk-font.sh: installing CJK font...</span><br><span class=\"line\">[cont-init   ] 15-cjk-font.sh: fetch https://dl-cdn.alpinelinux.org/alpine/edge/community/x86_64/APKINDEX.tar.gz</span><br><span class=\"line\">[cont-init   ] 15-cjk-font.sh: fetch https://dl-cdn.alpinelinux.org/alpine/v3.18/main/x86_64/APKINDEX.tar.gz</span><br><span class=\"line\">[cont-init   ] 15-cjk-font.sh: fetch https://dl-cdn.alpinelinux.org/alpine/v3.18/community/x86_64/APKINDEX.tar.gz</span><br><span class=\"line\">[cont-init   ] 15-cjk-font.sh: (1/1) Installing font-wqy-zenhei (0.9.45-r3)</span><br><span class=\"line\">要耗时4-5分钟左右</span><br><span class=\"line\"></span><br><span class=\"line\">3. Matomo已经有restart: on-failure:3比较尴尬。</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"PVE-如何给docker-debian虚拟机分配更多的磁盘空间？\"><a href=\"#PVE-如何给docker-debian虚拟机分配更多的磁盘空间？\" class=\"headerlink\" title=\"PVE 如何给docker debian虚拟机分配更多的磁盘空间？\"></a>PVE 如何给docker debian虚拟机分配更多的磁盘空间？</h2><p>目前是50G 92%的占用率。</p>\n<h3 id=\"防止-Docker-日志塞满硬盘（泪的教训）\"><a href=\"#防止-Docker-日志塞满硬盘（泪的教训）\" class=\"headerlink\" title=\"防止 Docker 日志塞满硬盘（泪的教训）\"></a>防止 Docker 日志塞满硬盘（泪的教训）</h3><p>&#x2F;etc&#x2F;docker&#x2F;daemon.json</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 增加：</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">&quot;log-driver&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;json-file&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;log-opts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">&quot;max-size&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;20m&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;max-file&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;3&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<p>无法解决问题，反而让docker无法启动数据库了（因为磁盘已满）</p>\n<p>rm -rf &#x2F;var&#x2F;log&#x2F;*</p>\n<p>终于找到原因了BT 默认备份功能（默认每天备份panel文件夹下的所有内容）害死我了</p>\n<p>采取行动：关闭宝塔面板自动备份功能</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\"><span class=\"built_in\">cd</span> /</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\"><span class=\"built_in\">du</span> -sh *</span></span><br><span class=\"line\">。。。</span><br><span class=\"line\">12G     var</span><br><span class=\"line\">35G     www</span><br><span class=\"line\">root@Debian11:/www# du -s /www/* | sort -nr                                                        </span><br><span class=\"line\">31497608        /www/backup                                                                        </span><br><span class=\"line\">4538716 /www/server                                                                                </span><br><span class=\"line\">652     /www/dk_project                                                                            </span><br><span class=\"line\">36      /www/wwwlogs                                                                               </span><br><span class=\"line\">8       /www/wwwroot                                                                               </span><br><span class=\"line\">4       /www/disk.pl                                                                               </span><br><span class=\"line\">root@Debian11:/www# bt                                                                             </span><br><span class=\"line\">===============宝塔面板命令行==================                                                    </span><br><span class=\"line\">(1) 重启面板服务           (8) 改面板端口                                                          </span><br><span class=\"line\">(2) 停止面板服务           (9) 清除面板缓存                                                        </span><br><span class=\"line\">(3) 启动面板服务           (10) 清除登录限制                                                       </span><br><span class=\"line\">(4) 重载面板服务           (11) 设置是否开启IP + User-Agent验证                                    </span><br><span class=\"line\">(5) 修改面板密码           (12) 取消域名绑定限制                                                   </span><br><span class=\"line\">(6) 修改面板用户名         (13) 取消IP访问限制                                                     </span><br><span class=\"line\">(7) 强制修改MySQL密码      (14) 查看面板默认信息                                                   </span><br><span class=\"line\">(22) 显示面板错误日志      (15) 清理系统垃圾                                                       </span><br><span class=\"line\">(23) 关闭BasicAuth认证     (16) 修复面板(检查错误并更新面板文件到最新版)                           </span><br><span class=\"line\">(24) 关闭动态口令认证          (17) 设置日志切割是否压缩                                           </span><br><span class=\"line\">(25) 设置是否保存文件历史副本  (18) 设置是否自动备份面板                                           </span><br><span class=\"line\">(26) 关闭面板ssl           (28) 修改面板安全入口                                                   </span><br><span class=\"line\">(0) 取消                   (29) 取消访问设备验证                                                   </span><br><span class=\"line\">===============================================                                                    </span><br><span class=\"line\">请输入命令编号：18                                                                                 </span><br><span class=\"line\">===============================================                                                    </span><br><span class=\"line\">正在执行(18)...                                                                                    </span><br><span class=\"line\">===============================================                                                    </span><br><span class=\"line\">|-检测到已开启面板自动备份功能,正在关闭...                                                         </span><br><span class=\"line\">|-已关闭面板自动备份功能                                                                           </span><br><span class=\"line\">root@Debian11:/www#                                                                                </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"排查过程\"><a href=\"#排查过程\" class=\"headerlink\" title=\"排查过程\"></a>排查过程</h3><ol>\n<li>cd &#x2F;. 然后 du -sh *<ol>\n<li>这样查找出来www目录占用了35G（不知情）</li>\n</ol>\n</li>\n<li>du -s &#x2F;www&#x2F;* | sort -nr<ol>\n<li>按文件占用大小排序，找出最大的占用空间文件夹： &#x2F;www&#x2F;backup</li>\n</ol>\n</li>\n<li>清除所有的文件：&#x2F;www&#x2F;backup</li>\n<li>运行bt 选18 关闭面板自动备份功能</li>\n</ol>\n<p>这个BT还是更适合方便+初级用户+快速上线，很高心释放出了30G空间。下一步：找BT替换方案。</p>\n<p>感谢列表：</p>\n<p><a href=\"https://ruxi.org/386.html\">一个反向代理神器——Nginx Proxy Manager&gt;修改Docker配置</a></p>\n<p><a href=\"https://www.bilibili.com/read/cv21872516/\">一种给PVE虚拟机磁盘扩容的方法</a></p>\n<h1 id=\"如何迁移-导入-导出-NPM-数据库\"><a href=\"#如何迁移-导入-导出-NPM-数据库\" class=\"headerlink\" title=\"如何迁移&#x2F;导入&#x2F;导出 NPM 数据库\"></a>如何迁移&#x2F;导入&#x2F;导出 NPM 数据库</h1><ol>\n<li><p>Copy the <code>/data</code> and <code>/etc/letsencrypt</code> volumes to your new instance and mount them into your new instance. If you use the default config</p>\n</li>\n<li><p><a href=\"https://github.com/NginxProxyManager/nginx-proxy-manager/discussions/1529#export-from-mariadb\">Export the database</a> if you are using the MariaDB &#x2F; MySQL database. If you are using the SQLite database it is likely included in your <code>data</code> folder, otherwise just copy the file over. Also possible using <a href=\"https://github.com/NginxProxyManager/nginx-proxy-manager/discussions/1529#export-from-mariadb-dbeaver\">DBeaver</a>.</p>\n<ol>\n<li><pre><code class=\"shell\">docker exec -it [db-container-name] mysqldump --user=[mysql-user] --password=[mysql-password] [mysql-db-name] -h 127.0.0.1 &gt; npm-export.sql\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">我的实例是</span><br><span class=\"line\"></span><br><span class=\"line\">```shell</span><br><span class=\"line\">docker exec -i template-app-1 apt-get update</span><br><span class=\"line\">docker exec -i template-app-1 apt-get install -y default-mysql-client</span><br><span class=\"line\">docker exec -it template-app-1 mysqldump --user=npm --password=npm npm -h 127.0.0.1 &gt; my-export2024010501.sql</span><br><span class=\"line\"></span><br><span class=\"line\">mysqldump: Got error: 2002: &quot;Can&#x27;t connect to MySQL server on &#x27;127.0.0.1&#x27; (115)&quot; when trying to connect</span><br><span class=\"line\"></span><br><span class=\"line\">docker exec -it template-app-1 mysqldump --user=npm --password=npm npm -h 127.0.0.1 &gt; my-export2024010501.sql</span><br><span class=\"line\"></span><br><span class=\"line\">#我就卡在这步，也不用往前了，因为我用的是sqlite文件型数据库，直接复制就可以备份了</span><br><span class=\"line\">docker cp 2c88aa4ba4d5:/data/database.sqlite /home/pi/database.sqlite</span><br></pre></td></tr></table></figure>\n</code></pre>\n</li>\n</ol>\n</li>\n<li><p><a href=\"https://github.com/NginxProxyManager/nginx-proxy-manager/discussions/1529#import-to-mariadb\">Import the database</a> to your new database container (if you are using the MariaDB &#x2F; MySQL database). Also possible using <a href=\"https://github.com/NginxProxyManager/nginx-proxy-manager/discussions/1529#import-to-mariadb-dbeaver\">DBeaver</a>.</p>\n<ol>\n<li><pre><code class=\"shell\">docker exec -i [db-container-name] mysql --user=[mysql-user] --password=[mysql-password] [mysql-db-name] -h 127.0.0.1 &lt; npm-export.sql\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">      </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">假如mysqldump没有在容器里面</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</code></pre>\n</li>\n</ol>\n</li>\n</ol>\n<p>抱错误：<br>OCI runtime exec failed: exec failed: unable to start container process: exec: “mysqldump”: executable file not found in $PATH: unknown                          </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">```shell</span><br><span class=\"line\">docker exec -i [container_name] apt-get update</span><br><span class=\"line\">docker exec -i [container_name] apt-get install -y default-mysql-client</span><br><span class=\"line\"></span><br><span class=\"line\">docker exec -i [conatiner_name] mysqldump --column-statistics=0 --user=[user_id] --password=[user_password] --databases npm &gt; npm-backup.sql</span><br></pre></td></tr></table></figure>\n\n<p>网上的文档有滞后现象，mysql-client 已改名：default-mysql-client</p>\n<p>docker exec -i template-app-1 apt-get install -y <strong>default-mysql-client</strong></p>\n<h1 id=\"证书签发失败的补救措施\"><a href=\"#证书签发失败的补救措施\" class=\"headerlink\" title=\"证书签发失败的补救措施\"></a>证书签发失败的补救措施</h1><p>解决NPM 泛域名证书故障</p>\n<p>思路转变: 从cdn中创建证书,然后手工上传到 NPM的自定义证书中</p>\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/08/01/66aa6168f09ca.png\" alt=\"image-20240801000806758\"></p>\n<p>点击 Add SSL Certificate, 选择 custom</p>\n<p>输入Certificate Key 证书的密钥文件内容(比如您可以从其他的网站上申请成功的,复制内容过来)</p>\n<p>输入Certificate 证书文件内容(比如您可以从其他的cdn网站上申请成功的,复制内容进一个文件,然后选择进来)</p>\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/08/01/66aa61d22854c.png\" alt=\"image-20240801000952298\"></p>\n<p>最后需要把所有的站点,重新都选中这个新建的Custom证书, 这样证书的过期错误问题就解决了</p>\n<p>每三个月都要这么操作一下</p>\n<p>TODO</p>\n<p>Migrate to </p>\n<p><a href=\"https://github.com/gdy666/lucky\">软硬路由公网神器,ipv6&#x2F;ipv4 端口转发,反向代理,DDNS,WOL,ipv4 stun内网穿透,cron,acme,阿里云盘,ftp,webdav,filebrowser</a></p>\n<p>官网: <a href=\"https://lucky666.cn/\">https://lucky666.cn/</a></p>\n<p>替代方案介绍: </p>\n<p><a href=\"https://post.smzdm.com/p/awz4dnrk/\">使用Lucky轻松实现反向代理+Https外网访问家庭NAS</a></p>\n<p><a href=\"https://sangxuesheng.com/archives/991.html\">openwrt使用lucky插件开启反向代理服务</a></p>\n","more":"<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>排查Nginx Proxy Manager，反向代理，让网站变成HTTPS</p>\n<p>证书签发失败的补救措施, 解决NPM 泛域名证书故障</p>\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><p>Nginx Proxy Manager 登录异常\t<br>    <a href=\"http://192.168.6.116:881/login\">http://192.168.6.116:881/login</a></p>\n<pre><code>11am NPM, 登录失败错误：Bad Gateway\n    template-db-1\t已停止\tjc21/mariadb-aria:latest\t\n发现是附属的docker的&quot;/template-db-1&quot; 启动失败\n- 修复？\n\n2023-11-03  3:13:28 0 [Note] /usr/bin/mysqld (mysqld 10.4.15-MariaDB) starting as process 1 ...\n2023-11-03  3:13:28 0 [ERROR] mysqld: Can&#39;t create/write to file &#39;/var/lib/mysql/aria_log_control&#39; (Errcode: 13 &quot;Permission denied&quot;)\n2023-11-03  3:13:28 0 [ERROR] mysqld: Got error &#39;Can&#39;t create file&#39; when trying to use aria control file &#39;/var/lib/mysql/aria_log_control&#39;\n2023-11-03  3:13:28 0 [ERROR] Plugin &#39;Aria&#39; init function returned error.\n2023-11-03  3:13:28 0 [ERROR] Plugin &#39;Aria&#39; registration as a STORAGE ENGINE failed.\n2023-11-03  3:13:28 0 [Note] Plugin &#39;InnoDB&#39; is disabled.\n2023-11-03  3:13:28 0 [Note] Plugin &#39;FEEDBACK&#39; is disabled.\n2023-11-03  3:13:28 0 [ERROR] Could not open mysql.plugin table. Some plugins may be not loaded\n2023-11-03  3:13:28 0 [ERROR] Failed to initialize plugins.\n2023-11-03  3:13:28 0 [ERROR] Aborting\n\n可能是从因为Nginx Proxy Manager是通过docker-compose来运行的，断电重启以后，docker无法自动正确地按docker-compose来启动了。\n解决办法是\n1. 关闭这个两个docker容器（jc21/nginx-proxy-manager:latest\t和 jc21/mariadb-aria:latest）\n2. SSH去执行\n    # cd /www/server/panel/data/compose/NginxPorxyManager/template\n    # docker-compose up -d\n这就意味着以后，以后机器重启，都要去手动去执行这docker-compose，有没有更好的解决办法？\n解决了docker启动，登录NPM还是提示：Bad Gateway错误\n检查了docker ps，依旧Restarting (1) 28 seconds ago  template-db-1\n</code></pre>\n<p>2:20pm<br>    Docker 具体错误<br>    <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">template-db-1   | 2023-11-03  6:20:19 0 [ERROR] Plugin &#x27;Aria&#x27; init function returned error.</span><br><span class=\"line\">template-db-1   | 2023-11-03  6:20:19 0 [ERROR] Plugin &#x27;Aria&#x27; registration as a STORAGE ENGINE failed.</span><br><span class=\"line\">template-db-1   | 2023-11-03  6:20:19 0 [Note] Plugin &#x27;InnoDB&#x27; is disabled.</span><br><span class=\"line\">template-db-1   | 2023-11-03  6:20:19 0 [Note] Plugin &#x27;FEEDBACK&#x27; is disabled.</span><br><span class=\"line\">template-db-1   | 2023-11-03  6:20:19 0 [ERROR] Could not open mysql.plugin table. Some plugins may be not loaded</span><br><span class=\"line\">template-db-1   | 2023-11-03  6:20:19 0 [ERROR] Failed to initialize plugins.</span><br><span class=\"line\">template-db-1   | 2023-11-03  6:20:19 0 [ERROR] Aborting\t\t</span><br></pre></td></tr></table></figure><br>    最后方案：放弃视频‘推荐’的方案，改用默认的sqlite.</p>\n<pre><code>4:46pm NPM\n改了配置以后，服务都正常了；可是新的配置在UI上没有加载之前的的配置内容。\n不配置maradb db section, NPM会自己在保存在./data目录下面一个database.sqlite文件数据库。\n5:10pm Cloudflare API token 重新配置\ndns_cloudflare_api_token e385e19ce47c207b15bf@@@@@\n重新申请证书，用DNS challenge的方式。 \n\n接下来，新的反代的就直接去新建就好了（待验证）\n》5:17pm\n</code></pre>\n<p>安装目录：&#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;NginxPorxyManager&#x2F;template</p>\n<h2 id=\"如何编辑artalk的robots-txt\"><a href=\"#如何编辑artalk的robots-txt\" class=\"headerlink\" title=\"如何编辑artalk的robots.txt\"></a>如何编辑artalk的robots.txt</h2><p>收到Google的邮件（New reason preventing your pages from being indexed）<br>第二天根据链接里面的indexing report，转到问题的问题；之前还去主站点位置添加的<a href=\"http://www.carlzeng.top/robots.txt\">www.carlzeng.top/robots.txt</a>.<br>原来是报告<a href=\"https://artalk.carlzeng.top:4443/robots.txt\">https://artalk.carlzeng.top:4443/robots.txt</a> 这个页面下的。</p>\n<p>在artalk容器以及映射出来的目录找了半天也找不到这个文件，莫非是程序动态生成的（无解了？）<br>也可能是NPM的反代有这样的设置?<br>        <a href=\"https://www.iots.vip/post/hexo-artalk-comment.html\">https://www.iots.vip/post/hexo-artalk-comment.html</a></p>\n<p>在BT中，&#x2F;www&#x2F;server&#x2F;phpmyadmin&#x2F;phpmyadmin_c123@@&#x2F;目录下，搜索到了robots.txt, 修改内容为：<br>    User-agent: *<br>    Allow: &#x2F;<br>    继续访问<a href=\"https://artalk.carlzeng.top:4443/robots.txt%EF%BC%9B%E4%BB%8D%E7%84%B6%E6%97%A0%E6%95%88\">https://artalk.carlzeng.top:4443/robots.txt；仍然无效</a><br>    尝试修改NPM中关于artalk反代的nginx配置文件，参考博客样式<br>    location &#x3D;&#x2F;robots.txt {<br>        default_type text&#x2F;html;<br>        add_header Content-Type “text&#x2F;plain; charset&#x3D;UTF-8”;<br>        return 200 “User-Agent: <em>\\nAllow: &#x2F;</em>“;<br>    }</p>\n<p>12:56pm NPM配置好的一个个host，被保存在了debian映射出来的那个目录？<br>    原来都保存在了 docker-compose.yml 的目录下，<br>    &#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;NginxPorxyManager&#x2F;template&#x2F;data&#x2F;nginx&#x2F;proxy_host#</p>\n<ol>\n<li><p>修改配置nginx问题\troot@Debian11:&#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;NginxPorxyManager&#x2F;template&#x2F;data&#x2F;nginx&#x2F;proxy_host# vi 1.conf </p>\n</li>\n<li><p>重启NPM docker-compose<br> root@Debian11:&#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;NginxPorxyManager&#x2F;template# docker-compose restart</p>\n</li>\n<li><p>验证 <a href=\"https://artalk.carlzeng.top:4443/robots.txt\">https://artalk.carlzeng.top:4443/robots.txt</a><br> User-agent: *<br> Allow:&#x2F;<br> Works perfect</p>\n</li>\n</ol>\n<p>灵感来源：<br>    <a href=\"https://www.iots.vip/post/hexo-artalk-comment.html\">如果需要 Nginx 反向代理， 这里提供一份 Nginx 配置参考</a><br>    <a href=\"https://zh.wikipedia.org/zh-tw/Robots.txt\">https://zh.wikipedia.org/zh-tw/Robots.txt</a></p>\n<h2 id=\"Debian-11的一些基础\"><a href=\"#Debian-11的一些基础\" class=\"headerlink\" title=\"Debian 11的一些基础\"></a>Debian 11的一些基础</h2><pre><code>Debian 11默认是关闭ssh的，如何开启？设置了自动开启，断电重启就无忧\n    旧方案是：在BT面板中开启SSH开关，然后用carl用户登录进ssh，在su，就可以到root用户下\n    新的：\n        算了，为了debian11安全，就不开放ssh了；走面板，或者pve终端的ssh\n\n\nartalk docker 没有自动重启，如何设置特定的docker自动重启？假设机器死机需要断电重启\n    手动重启成功\n</code></pre>\n<h2 id=\"缩短URL之简化4443端口成3端口\"><a href=\"#缩短URL之简化4443端口成3端口\" class=\"headerlink\" title=\"缩短URL之简化4443端口成3端口\"></a>缩短URL之简化4443端口成3端口</h2><p>尝试在NPM的docker把443映射成4443，同时增加了映射到3（后来发现这个步骤是可选的）</p>\n<img class=\"lozad\" data-src=https://www.evernote.com/shard/s122/sh/04908e9f-02fa-4e85-ba8c-47448ca38092/uSFzRs0qKFfN6TqubZnYUk95Mlr6lsMFQtozVsBmzGLlvV_h8Tu1P_iXHg/deep/0/image.png>\n\n<p>原来仅需要在OP上，把3端口映射给重复的内部端口4443即可。<br>    <a href=\"https://c.carlzeng.top:4443/tv\">https://c.carlzeng.top:4443/tv</a><br>    <a href=\"https://c.carlzeng.top:3/tv\">https://c.carlzeng.top:3/tv</a></p>\n<h3 id=\"Docker端口映射之一对多的几种情况\"><a href=\"#Docker端口映射之一对多的几种情况\" class=\"headerlink\" title=\"Docker端口映射之一对多的几种情况\"></a>Docker端口映射之一对多的几种情况</h3><ol>\n<li>端口多对一，可行：访问宿主的多个端口可以映射到容器中的同一个端口。<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># docker run -d -p 9000-9001:9000 tomcat:8.5-jre8</span><br></pre></td></tr></table></figure></li>\n<li>多对多的几种情况 9000-9001:9000-9001 可行<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># docker run -d -p 9000-9001:9000-9001 tomcat:8.5-jre8</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"NPM弊端？\"><a href=\"#NPM弊端？\" class=\"headerlink\" title=\"NPM弊端？\"></a>NPM弊端？</h2><p>不知为何本地局域网可访问的<a href=\"http://192.168.6.116:881/\">http://192.168.6.116:881/</a> 无法映射代理到外网，来实现npm自己代理自己的目标。</p>\n<p>真是奇怪，<a href=\"https://npm.carlzeng.top:4443/\">https://npm.carlzeng.top:4443/</a> 更可能是NPM自己做了什么设置？无法自己代理自己的web管理服务？</p>\n<div class=\"note success\"><p>2023年12月初：解决办法：用<a href=\"https://c.carlzeng.top:3/web2\">在线云浏览器Firefox</a>，远程过去访问本地局域网的NPM面板即可</p>\n<p>Mamoto面板反代以后无法正常登录，也请使用<a href=\"https://c.carlzeng.top:3/web2\">在线云浏览器Firefox</a></p>\n</div>\n\n\n\n<h2 id=\"J4125-pve半死状态\"><a href=\"#J4125-pve半死状态\" class=\"headerlink\" title=\"J4125 pve半死状态\"></a>J4125 pve半死状态</h2><p>这种状态大约半个月左右出现一次；难受；这次是（已启动13天1小时20分57秒）</p>\n<p>现象：</p>\n<ol>\n<li><p>各个设备终端上网正常</p>\n</li>\n<li><p>画面卡死，无法登录 <a href=\"http://192.168.6.116:881/nginx/proxy\">http://192.168.6.116:881/nginx/proxy</a></p>\n</li>\n<li><p>SSH可以到达192.168.6.1</p>\n<ol>\n<li>web到OP也正常</li>\n</ol>\n</li>\n<li><p>无法连接pve <a href=\"https://192.168.6.2:8006/\">https://192.168.6.2:8006</a></p>\n<ol>\n<li>This site can’t be reached192.168.6.2 took too long to respond.</li>\n</ol>\n</li>\n<li><p>SSH无法到达bebian .116的</p>\n<ol>\n<li>kex_exchange_identification: read: Operation timed out<br>banner exchange: Connection to 192.168.6.116 port 22: Operation timed out</li>\n</ol>\n</li>\n<li><p>metaUI无法正常打开，<a href=\"http://192.168.6.116:9090/#/overview\">http://192.168.6.116:9090/#/overview</a></p>\n<ol>\n<li>This site can’t be reached192.168.6.116 took too long to respond.</li>\n</ol>\n</li>\n<li><p>StatCount 无法正常打开，<a href=\"http://192.168.6.116:8597/index.php?module=CoreHome&action=index&idSite=1&period=day&date=yesterday#?period=day&date=2023-12-01&idSite=1&category=Dashboard_Dashboard&subcategory=1\">http://192.168.6.116:8597/index.php?module=CoreHome&amp;action=index&amp;idSite=1&amp;period=day&amp;date=yesterday#?period=day&amp;date=2023-12-01&amp;idSite=1&amp;category=Dashboard_Dashboard&amp;subcategory=1</a></p>\n<ol>\n<li>This site can’t be reached192.168.6.116 took too long to respond.</li>\n</ol>\n</li>\n<li><p>IPNAS 无法打开<a href=\"http://192.168.6.203:5000/\">http://192.168.6.203:5000/</a></p>\n<ol>\n<li>奇怪的是：用手机可以正常打开；反复测试中</li>\n</ol>\n</li>\n<li><p>NAS中的docker Aria2 可以正常使用 <a href=\"https://aria2.carlzeng.top:4443/#!/downloading\">https://aria2.carlzeng.top:4443/#!/downloading</a></p>\n</li>\n<li><p>Debian clash 的 7890无法正常使用</p>\n</li>\n<li><p>Debian</p>\n<ol>\n<li>artalk 正常</li>\n<li>bt 无法连接web</li>\n<li>dujiaoka正常<a href=\"https://buy.carlzeng.top:4443/\">https://buy.carlzeng.top:4443/</a></li>\n<li>Yourls正常<a href=\"https://c.carlzeng.top:3/admin/index.php\">https://c.carlzeng.top:3/admin/index.php</a><ol>\n<li>Yourls后台可以正常登录查看<a href=\"https://c.carlzeng.top:3/admin/index.php\">https://c.carlzeng.top:3/admin/index.php</a></li>\n</ol>\n</li>\n<li>metaUI又能正常打开了，<a href=\"http://192.168.6.116:9090/#/overview\">http://192.168.6.116:9090/#/overview</a><ol>\n<li>可是，仍然无法连接到<a href=\"http://192.168.6.116:9091/\">http://192.168.6.116:9091</a></li>\n</ol>\n</li>\n<li>NPM无法正常打开<a href=\"http://192.168.6.116:881/nginx/proxy\">http://192.168.6.116:881/nginx/proxy</a></li>\n<li>Hnet Web首页正常了<a href=\"https://proxy.carlzeng.top:4443/\">https://proxy.carlzeng.top:4443/</a></li>\n<li>电脑端的statcounter无法打开，可是手机端（在系统中）可以正常查看各种信息<ol>\n<li>奇怪</li>\n</ol>\n</li>\n<li></li>\n</ol>\n</li>\n<li><p>20231204昨天没有重启，后来自动就恢复了；今天又假死了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -vz 192.168.6.116 881                                                                              </span><br><span class=\"line\">nc: connectx to 192.168.6.116 port 881 (tcp) failed: No route to host </span><br></pre></td></tr></table></figure></li>\n</ol>\n<blockquote>\n<p>PVE, 以及PVE中的docker debian，NAS都下线了</p>\n<p>可是OP还活着，一直充当主路由的工作</p>\n<p>稀奇的是手机确可以ping通192.168.6.116；这简直无法理解</p>\n<p>手机端也是无法打开NPM的881端口，可是matomo可以正常使用</p>\n<p>重启一下MAC电脑，重新测试</p>\n</blockquote>\n<p>重启MAC，链接NPM又正常了！pve又可以链接了; 原来问题的根源不是在J4125；汗，而是在用来发现问题的MAC上，引以为戒。下次核查的时候要多设备核实（才能去硬重启J4125）</p>\n<h2 id=\"跳闸后J4125通电未正常启动\"><a href=\"#跳闸后J4125通电未正常启动\" class=\"headerlink\" title=\"跳闸后J4125通电未正常启动\"></a>跳闸后J4125通电未正常启动</h2><p>J4125断电后无法启动，<br>    导致K2P无法正常获取192.168.6网段的IP地址；（获取的169.254.12.86不正常IP）<br>    整个本地局域网瘫痪。</p>\n<pre><code>理清楚，如果J4125小主机无法启动，要怎么调试？\n有没有画面输出？如何输出画面；\n答：通过连接HDMI的液晶显示器，在连接USB键盘操作\n\n目前J4125 和 K2P是怎么连接工作的？\n\n目前J4125的网口分配情况？\n\n如何调试？调整K2P的设置？连接端口？\n答：通过连接HDMI的液晶显示器，在连接USB键盘操作\n</code></pre>\n<p>J4125进入命令行模式（由于WEB控制没有启动，无法远程。需要借助显示器和键盘）</p>\n<p>一种pve的命令行模式，好像输出startup.sh的倒计时（由于无显示器，进入命令行模式后，通过WEB只能判定其属于无法启动或死机状态）</p>\n<p>无意间通过输入help（很多命令，但大部分一闪而过，无法使用 ｜more来暂停；不知道怎么慢慢输出所有的help内容）和 exit命令，退出了这个命令行模式；系统正常启动成功，所有虚拟机和docker，启动成功。</p>\n<p>目前启动状态（这也是最干净的状态）：</p>\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/03/25/6600cfe4f3237.png\" alt=\"image-20240325091403026\"></p>\n<h3 id=\"解决Debian异常\"><a href=\"#解决Debian异常\" class=\"headerlink\" title=\"解决Debian异常\"></a>解决Debian异常</h3><p>Yourls、Matomo没有正常启动</p>\n<p>pve中debian状态也正常，ping debian的IP是正常的。最终进入SSH，通过bt命令14，查看了面板地址。进入bt面板后，发现是mariadb没有正常启动，造成了特定的三个容器（Yourls、Matomo 和surveyking）因缺少数据库而无法正常运行。</p>\n<p>解决办法：</p>\n<p>ssh下进入目录进行docker-compose down 和 docker-compose up</p>\n<p>查看日志发现Permission denied错误</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yourls_mysql    | 2024-03-25 01:34:54+00:00 [Note] [Entrypoint]: Switching to dedicated user &#x27;mysql&#x27;          </span><br><span class=\"line\">yourls_mysql    | 2024-03-25 01:34:54+00:00 [Note] [Entrypoint]: Entrypoint script for MariaDB Server 1:11.2.2</span><br><span class=\"line\">+maria~ubu2204 started.                                                                                       </span><br><span class=\"line\">yourls_mysql    | 2024-03-25 01:34:55+00:00 [Note] [Entrypoint]: Initializing database files                  </span><br><span class=\"line\">yourls_mysql    | 2024-03-25  1:34:55 0 [Warning] Can&#x27;t create test file &#x27;/var/lib/mysql/d6741f2674af.lower-te</span><br><span class=\"line\">st&#x27; (Errcode: 13 &quot;Permission denied&quot;)                                                                         </span><br><span class=\"line\">yourls_mysql    | /usr/sbin/mariadbd: Can&#x27;t change dir to &#x27;/var/lib/mysql/&#x27; (Errcode: 13 &quot;Permission denied&quot;) </span><br><span class=\"line\">yourls_mysql    | 2024-03-25  1:34:55 0 [ERROR] Aborting                                                      </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql    | Installation of system tables failed!  Examine the logs in                                  </span><br><span class=\"line\">yourls_mysql    | /var/lib/mysql/ for more information.                                                       </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql    | The problem could be conflicting information in an external                                 </span><br><span class=\"line\">yourls_mysql    | my.cnf files. You can ignore these by doing:                                                </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql    |     shell&gt; /usr/bin/mariadb-install-db --defaults-file=~/.my.cnf                            </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql    | You can also try to start the mariadbd daemon with:                                         </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql    |     shell&gt; /usr/sbin/mariadbd --skip-grant-tables --general-log &amp;                           </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql    | and use the command line tool /usr/bin/mariadb                                              </span><br><span class=\"line\">yourls_mysql    | to connect to the mysql database and look at the grant tables:                              </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql    |     shell&gt; /usr/bin/mariadb -u root mysql                                                   </span><br><span class=\"line\">yourls_mysql    |     MariaDB&gt; show tables;                                                                   </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql    | Try &#x27;/usr/sbin/mariadbd --help&#x27; if you have problems with paths.  Using                     </span><br><span class=\"line\">yourls_mysql    | --general-log gives you a log in /var/lib/mysql/ that may be helpful.                       </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql    | The latest information about mariadb-install-db is available at                             </span><br><span class=\"line\">yourls_mysql    | https://mariadb.com/kb/en/installing-system-tables-mysql_install_db                         </span><br><span class=\"line\">yourls_mysql    | You can find the latest source at https://downloads.mariadb.org and                         </span><br><span class=\"line\">yourls_mysql    | the maria-discuss email list at https://launchpad.net/~maria-discuss                        </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql    | Please check all of the above before submitting a bug report                                </span><br><span class=\"line\">yourls_mysql    | at https://mariadb.org/jira                                                                 </span><br><span class=\"line\">yourls_mysql    |                                                                                             </span><br><span class=\"line\">yourls_mysql exited with code 1 </span><br></pre></td></tr></table></figure>\n\n<p>解决办法：授予mysql用户在目录下的执行权限&#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;yourls_service&#x2F;template&#x2F;yMariaDb</p>\n<p>解决mariadb启动正常后，访问yourls网页仍然错误</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yourls_service  | 172.18.0.1 - - [25/Mar/2024:01:38:29 +0000] &quot;GET /admin/index.php HTTP/1.1&quot; 403 521 &quot;-&quot; &quot;Moz</span><br><span class=\"line\">illa/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/53</span><br><span class=\"line\">7.36&quot;                                                                                                         </span><br><span class=\"line\">yourls_service  | [Mon Mar 25 01:38:29.171055 2024] [core:crit] [pid 23] (13)Permission denied: [client 172.18</span><br><span class=\"line\">.0.1:18438] AH00529: /var/www/html/.htaccess pcfg_openfile: unable to check htaccess file, ensure it is readab</span><br><span class=\"line\">le and that &#x27;/var/www/html/&#x27; is executable                                                                    </span><br><span class=\"line\">yourls_service  | [Mon Mar 25 01:38:29.208916 2024] [core:crit] [pid 24] (13)Permission denied: [client 172.18</span><br><span class=\"line\">.0.1:18450] AH00529: /var/www/html/.htaccess pcfg_openfile: unable to check htaccess file, ensure it is readab</span><br><span class=\"line\">le and that &#x27;/var/www/html/&#x27; is executable, referer: https://c.carlzeng.top:4443/admin/index.php              </span><br><span class=\"line\">yourls_service  | 172.18.0.1 - - [25/Mar/2024:01:38:29 +0000] &quot;GET /favicon.ico HTTP/1.1&quot; 403 521 &quot;https://c.c</span><br><span class=\"line\">arlzeng.top:4443/admin/index.php&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, </span><br><span class=\"line\">like Gecko) Chrome/122.0.0.0 Safari/537.36&quot;                                                                   </span><br><span class=\"line\">yourls_service  | [Mon Mar 25 01:38:29.737844 2024] [core:crit] [pid 25] (13)Permission denied: [client 172.18</span><br><span class=\"line\">.0.1:18464] AH00529: /var/www/html/.htaccess pcfg_openfile: unable to check htaccess file, ensure it is readab</span><br><span class=\"line\">le and that &#x27;/var/www/html/&#x27; is executable </span><br></pre></td></tr></table></figure>\n\n<p>解决办法：授予所有用户在目录下的执行权限777</p>\n<p>&#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;yourls_service&#x2F;template&#x2F;yourlsData20231229</p>\n<p>yourls Docker启动修复</p>\n<p>chown mysql &#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;yourls_service&#x2F;template&#x2F;yMariaDb -R<br>chown mysql &#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;yourls_service&#x2F;template&#x2F;yourlsData20231229 -R</p>\n<p>chmod +777 &#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;yourls_service&#x2F;template&#x2F;yMariaDb -R<br>chmod +777 &#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;yourls_service&#x2F;template&#x2F;yourlsData20231229&#x2F; -R<br>cd &#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;yourls_service&#x2F;template<br>docker-compose down<br>docker-compose up -d</p>\n<h3 id=\"解决mariadb-和-应用程序的-Permission-denied-错误\"><a href=\"#解决mariadb-和-应用程序的-Permission-denied-错误\" class=\"headerlink\" title=\"解决mariadb 和 应用程序的 Permission denied 错误\"></a>解决mariadb 和 应用程序的 Permission denied 错误</h3><p>同上原理:</p>\n<ul>\n<li>将mariadb的目录授予mysql用户执行权限</li>\n<li>将应用程序的主目录授予所有用户执行权限777</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">应用程序目录如果没有777权限，错误信息如下：</span></span><br><span class=\"line\">Matomo     | [Mon Mar 25 09:52:04.935003 2024] [core:crit] [pid 51] (13)Permission denied: [client 192.168.6.2。21:65111] AH00529: /var/www/html/.htaccess pcfg_openfile: unable to check htaccess file, ensure it is readable</span><br><span class=\"line\"> and that &#x27;/var/www/html/&#x27; is executable, referer: http://192.168.6.116:8597/index.php   </span><br></pre></td></tr></table></figure>\n\n\n\n<p>Matomo Docker启动修复</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +777 /www/server/panel/data/compose/matomo/matomo -R</span><br><span class=\"line\">chmod +777 /www/server/panel/data/compose/matomo/matomodb -R</span><br><span class=\"line\">\t</span><br><span class=\"line\">chown mysql /www/server/panel/data/compose/matomo/matomo -R</span><br><span class=\"line\">chown mysql /www/server/panel/data/compose/matomo/matomodb -R</span><br><span class=\"line\"></span><br><span class=\"line\">cd /www/server/panel/data/compose/matomo</span><br><span class=\"line\">docker-compose down</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n\n\n<p>chmod +777 &#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;surveyking&#x2F;mysql_data -R</p>\n<p>cd &#x2F;www&#x2F;server&#x2F;panel&#x2F;data&#x2F;compose&#x2F;searx<br>chmod +777 searx&#x2F; -R<br>解决了docker启动错误</p>\n<h3 id=\"MAC清除-刷新DNS缓存\"><a href=\"#MAC清除-刷新DNS缓存\" class=\"headerlink\" title=\"MAC清除+刷新DNS缓存\"></a>MAC清除+刷新DNS缓存</h3><p>Mac OSX本机的DNS缓存误导了一些自定义域名的IP指向。</p>\n<p>ping  frp.carlzeng.top -c 3<br>    PING frp.carlzeng.top (123.112.254.91): 56 data bytes<br>    64 bytes from 123.112.254.91: icmp_seq&#x3D;0 ttl&#x3D;62 time&#x3D;7.484 ms</p>\n<pre><code>发现是Mac OSX本机的DNS缓存误导了一些自定义域名的IP指向。\n</code></pre>\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/03/25/6600e6fc8e104.png\" alt=\"image-20240325105222077\"></p>\n<p>ping  frp.carlzeng.top -c 3<br>    PING frp.carlzeng.top (123.112.254.91): 56 data bytes<br>    64 bytes from 123.112.254.91: icmp_seq&#x3D;0 ttl&#x3D;62 time&#x3D;7.484 ms</p>\n<pre><code>发现是Mac OSX本机的DNS缓存误导了一些自定义域名的IP指向。\n10:51am dns问题依旧，\n\n\n11:54am 突然frp的域名恢复了：\nping -c 3 frp.carlzeng.top\nPING frp.carlzeng.top (221.218.236.157): 56 data bytes\n64 bytes from 221.218.236.157: icmp_seq=0 ttl=64 time=2.954 ms\n</code></pre>\n<p>​\t</p>\n<p>how to fix non-authoritative answer<br>似乎只有等待！（大约等了2小时）</p>\n<p>优化：删除掉mail.carlzeng.top的A记录，因为*的A记录，会自动涵盖这一条A记录</p>\n<h3 id=\"修复DNS-A记录\"><a href=\"#修复DNS-A记录\" class=\"headerlink\" title=\"修复DNS A记录\"></a>修复DNS A记录</h3><p>7:30pm 发现img.carlzeng.top仍然对应了错误的IP，导致上传图片出错</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">策略：</span><br><span class=\"line\">1. 反复的dig查询dig img.carlzeng.top</span><br><span class=\"line\">2. 更换本机DNS IP服务器地址</span><br><span class=\"line\">8:17pm dns的A记录依旧是错误的；即便更换了本机的DNS服务器到本地192.168.6.1 TTL越查询，数值越小；目前到了341<span class=\"comment\">; 猜测这个值越来越小的时候（到0），会主动向CF的根域名服务器查询；到那时，就会返回正确的IP。</span></span><br><span class=\"line\">8:19pm </span><br><span class=\"line\"><span class=\"comment\">;; ANSWER SECTION:</span></span><br><span class=\"line\">img.carlzeng.top.       246     IN      A       123.112.254.91</span><br><span class=\"line\">8:21pm</span><br><span class=\"line\">img.carlzeng.top.       109     IN      A       123.112.254.91</span><br><span class=\"line\">8:22pm 自动变为41</span><br><span class=\"line\">8:22pm 自动变为19，然后9</span><br><span class=\"line\">8:23pm <span class=\"comment\">#重新返回到3600秒=1小时</span></span><br><span class=\"line\"><span class=\"comment\">;; ANSWER SECTION:</span></span><br><span class=\"line\">img.carlzeng.top.       3600    IN      A       221.218.236.157</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 也就是说DNS记录在自动循环着向主/根服务器查询A记录或更新，每个小时，不停递减后查询一次。</span></span><br></pre></td></tr></table></figure>\n\n<p>策略：</p>\n<ol>\n<li><p>反复的dig查询dig img.carlzeng.top（检查ANSWER SECTION 中的TTL）</p>\n</li>\n<li><p>更换本机DNS IP服务器地址（切换以后，dig查询发现 TTL值，一直加快速度地变小，相对于不切换DNS服务器的情况下）</p>\n<p>Note： <a href=\"https://howtouselinux.medium.com/dns%E8%AE%B0%E5%BD%95%E8%AF%A6%E8%A7%A3-355e923f1ccc\">DNS记录详解</a> 中详细讲解了TTL的含义及设计原理</p>\n</li>\n</ol>\n<h3 id=\"DNS相关命令\"><a href=\"#DNS相关命令\" class=\"headerlink\" title=\"DNS相关命令\"></a>DNS相关命令</h3><p>dig命令：</p>\n<ul>\n<li>dig img.carlzeng.top 查询DNS寻址过程</li>\n<li>dig +short math.stackexchange.com 直接显示DNS寻址结果</li>\n<li>dig @8.8.8.8 math.stackexchange.com 向特定DNS服务器寻址</li>\n<li>dig ns com 查询com顶级域名的ns记录</li>\n<li>dig a com 查询com顶级域名的a记录</li>\n<li>dig -x 192.30.252.153 用于查询PTR记录（用IP查域名）</li>\n</ul>\n<p>host命令：</p>\n<ul>\n<li>host github.com 返回域名的各种记录</li>\n<li>host 192.30.252.153 逆向查询IP地址对应的域名</li>\n</ul>\n<p>nslookup命令：</p>\n<ul>\n<li>nslookup github.com 查询域名记录</li>\n</ul>\n<p>whois命令：</p>\n<ul>\n<li>whois abc.com 查询域名的注册情况</li>\n</ul>\n<h3 id=\"K2P-udpxy异常\"><a href=\"#K2P-udpxy异常\" class=\"headerlink\" title=\"K2P udpxy异常\"></a>K2P udpxy异常</h3><p>ps 发现系统有：<br>441 admin      776 S  &#x2F;usr&#x2F;sbin&#x2F;udpxy -m br0 -p 8012 -B 65536 -c 10 -M 120</p>\n<p>kill -9 441 后，运行<br>udpxy -p 8012</p>\n<p>udpxy一切正常了；可以正常使用VLC播放：<a href=\"http://192.168.6.243:8012/rtp/239.3.1.158:8000\">http://192.168.6.243:8012/rtp/239.3.1.158:8000</a></p>\n<p>测试：</p>\n<p>UI上看太玄学了，kill掉‘udpxy -p 8012’，重新检查ps中udpxy都消失后，重新<a href=\"http://192.168.6.243/Advanced_IPTV_Content.asp\">提交IPTV页面</a>一切正常了。</p>\n<p>这导致每次重启K2P都需要运行 &#x2F;usr&#x2F;sbin&#x2F;udpxy -p 8012 </p>\n<p>即便在<a href=\"http://192.168.6.243/Advanced_Scripts_Content.asp\">自定义脚本》路由器启动后执行</a>定义了 &#x2F;usr&#x2F;sbin&#x2F;udpxy -p 8012 也不知道是否管用？</p>\n<blockquote>\n<p>期待下一次的断电重启测试</p>\n</blockquote>\n<hr>\n<p>无意间点进PVE，不看不知道，一看吓一跳：</p>\n<p>原来很可能是pve的磁盘占用 96.69% (104.62 GiB的108.20 GiB）</p>\n<p>我不知道&#x2F;dev&#x2F;sdb3(在SSD128上面, Reeinno CY128GB S1S3上面)为何就满了？里面放了什么了？<br><a href=\"https://www.youtube.com/watch?v=slZ3SwFflHU\">pve存储空间扩容 磁盘大小调整 proxmox6</a></p>\n<p>采取措施（对debian和NAS）</p>\n<p>​\tdocker volume prune<br>​\tdocker image prune</p>\n<p>没招，找了一圈又一圈：没有找到解决办法。</p>\n<p>尝试着把Win2008的备份10G的文件删除，PVE的使用率从96.69%降到87.55%。先用吧，观察着debian中docker的安装有没有占用这块128G的SSD盘？</p>\n<blockquote>\n<p>答案是：有的，目前debian的数据还是没有被放到另外一块512的SSD上。2023.12.29</p>\n</blockquote>\n<h2 id=\"Linux-查看当前开放端口\"><a href=\"#Linux-查看当前开放端口\" class=\"headerlink\" title=\"Linux 查看当前开放端口\"></a>Linux 查看当前开放端口</h2><p>在K2P的padavan或者openwrt里面都是适用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -nl</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">tcpdump 不会用啊</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">想要查看那些客户端连接了？</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">通过padavan的UI查询：网络信息 &gt; 流量监控https://k2pzl.carlzeng.top:4443/Main_BWMon.asp</span></span><br><span class=\"line\"></span><br><span class=\"line\">找到了服务器上frps的192.168.6.116:6006, frpc映射至192.168.123.189:5555</span><br><span class=\"line\">这样scrcpy -e</span><br><span class=\"line\">就会显示两个客户端了！</span><br><span class=\"line\">scrcpy -e</span><br><span class=\"line\">scrcpy 2.1.1 &lt;https://github.com/Genymobile/scrcpy&gt;</span><br><span class=\"line\">ERROR: Multiple (2) ADB devices over TCP/IP:</span><br><span class=\"line\">ERROR:     --&gt; (tcpip)  192.168.6.116:6006              device  p230</span><br><span class=\"line\">ERROR:     --&gt; (tcpip)  192.168.6.216:5555              device  p230</span><br><span class=\"line\">ERROR: Select a device via -s (--serial), -d (--select-usb) or -e (--select-tcpip)</span><br><span class=\"line\">ERROR: Server connection failed</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">手动指定连接到那一个adb 5555 客户端（即便是被frp映射过的也一样）</span></span><br><span class=\"line\">scrcpy --tcpip=192.168.6.116:6006</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"重启docker服务\"><a href=\"#重启docker服务\" class=\"headerlink\" title=\"重启docker服务\"></a>重启docker服务</h1><p>这是一个类似于把整台软路由重启一样的指令</p>\n<p>磁盘占用率97%导致数据库无法写入，应用开始出错。  为什么重启？据说能减轻磁盘占用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@Debian11:/www/server/panel/data/compose/matomo# du -hs /var/lib/docker/                               </span><br><span class=\"line\">11G     /var/lib/docker/ </span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">docker system <span class=\"built_in\">df</span></span></span><br><span class=\"line\">TYPE            TOTAL     ACTIVE    SIZE      RECLAIMABLE</span><br><span class=\"line\">Images          17        14        5.674GB   624.4MB (11%)</span><br><span class=\"line\">Containers      14        14        224.4MB   0B (0%)</span><br><span class=\"line\">Local Volumes   0         0         0B        0B</span><br><span class=\"line\">Build Cache     0         0         0B        0B</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">docker system prune -a</span></span><br><span class=\"line\">y</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">docker system <span class=\"built_in\">df</span></span></span><br><span class=\"line\">TYPE            TOTAL     ACTIVE    SIZE      RECLAIMABLE</span><br><span class=\"line\">Images          14        14        5.057GB   7.335MB (0%)</span><br><span class=\"line\">Containers      14        14        224.4MB   0B (0%)</span><br><span class=\"line\">Local Volumes   0         0         0B        0B</span><br><span class=\"line\">Build Cache     0         0         0B        0B</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl restart  docker</span><br></pre></td></tr></table></figure>\n\n<p>重启  以后 引导磁盘大小92.47% (45.23 GiB的48.91 GiB)</p>\n<p>重启以后，其他的服务都正常重启了，除了：Matomo，ChatgptNextWeb，和Firefox。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. docker start chatgpt-next-web</span><br><span class=\"line\"></span><br><span class=\"line\">2. 添加</span><br><span class=\"line\">restart: always</span><br><span class=\"line\">到firefox的docker-compose.yml文件中</span><br><span class=\"line\">启动巨慢，表面上docker已经启动完成的状态，可实际中，观察日志</span><br><span class=\"line\">[cont-init   ] 15-cjk-font.sh: installing CJK font...</span><br><span class=\"line\">[cont-init   ] 15-cjk-font.sh: fetch https://dl-cdn.alpinelinux.org/alpine/edge/community/x86_64/APKINDEX.tar.gz</span><br><span class=\"line\">[cont-init   ] 15-cjk-font.sh: fetch https://dl-cdn.alpinelinux.org/alpine/v3.18/main/x86_64/APKINDEX.tar.gz</span><br><span class=\"line\">[cont-init   ] 15-cjk-font.sh: fetch https://dl-cdn.alpinelinux.org/alpine/v3.18/community/x86_64/APKINDEX.tar.gz</span><br><span class=\"line\">[cont-init   ] 15-cjk-font.sh: (1/1) Installing font-wqy-zenhei (0.9.45-r3)</span><br><span class=\"line\">要耗时4-5分钟左右</span><br><span class=\"line\"></span><br><span class=\"line\">3. Matomo已经有restart: on-failure:3比较尴尬。</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"PVE-如何给docker-debian虚拟机分配更多的磁盘空间？\"><a href=\"#PVE-如何给docker-debian虚拟机分配更多的磁盘空间？\" class=\"headerlink\" title=\"PVE 如何给docker debian虚拟机分配更多的磁盘空间？\"></a>PVE 如何给docker debian虚拟机分配更多的磁盘空间？</h2><p>目前是50G 92%的占用率。</p>\n<h3 id=\"防止-Docker-日志塞满硬盘（泪的教训）\"><a href=\"#防止-Docker-日志塞满硬盘（泪的教训）\" class=\"headerlink\" title=\"防止 Docker 日志塞满硬盘（泪的教训）\"></a>防止 Docker 日志塞满硬盘（泪的教训）</h3><p>&#x2F;etc&#x2F;docker&#x2F;daemon.json</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 增加：</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">&quot;log-driver&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;json-file&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;log-opts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">&quot;max-size&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;20m&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;max-file&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;3&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart docker</span><br></pre></td></tr></table></figure>\n\n<p>无法解决问题，反而让docker无法启动数据库了（因为磁盘已满）</p>\n<p>rm -rf &#x2F;var&#x2F;log&#x2F;*</p>\n<p>终于找到原因了BT 默认备份功能（默认每天备份panel文件夹下的所有内容）害死我了</p>\n<p>采取行动：关闭宝塔面板自动备份功能</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\"><span class=\"built_in\">cd</span> /</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\"><span class=\"built_in\">du</span> -sh *</span></span><br><span class=\"line\">。。。</span><br><span class=\"line\">12G     var</span><br><span class=\"line\">35G     www</span><br><span class=\"line\">root@Debian11:/www# du -s /www/* | sort -nr                                                        </span><br><span class=\"line\">31497608        /www/backup                                                                        </span><br><span class=\"line\">4538716 /www/server                                                                                </span><br><span class=\"line\">652     /www/dk_project                                                                            </span><br><span class=\"line\">36      /www/wwwlogs                                                                               </span><br><span class=\"line\">8       /www/wwwroot                                                                               </span><br><span class=\"line\">4       /www/disk.pl                                                                               </span><br><span class=\"line\">root@Debian11:/www# bt                                                                             </span><br><span class=\"line\">===============宝塔面板命令行==================                                                    </span><br><span class=\"line\">(1) 重启面板服务           (8) 改面板端口                                                          </span><br><span class=\"line\">(2) 停止面板服务           (9) 清除面板缓存                                                        </span><br><span class=\"line\">(3) 启动面板服务           (10) 清除登录限制                                                       </span><br><span class=\"line\">(4) 重载面板服务           (11) 设置是否开启IP + User-Agent验证                                    </span><br><span class=\"line\">(5) 修改面板密码           (12) 取消域名绑定限制                                                   </span><br><span class=\"line\">(6) 修改面板用户名         (13) 取消IP访问限制                                                     </span><br><span class=\"line\">(7) 强制修改MySQL密码      (14) 查看面板默认信息                                                   </span><br><span class=\"line\">(22) 显示面板错误日志      (15) 清理系统垃圾                                                       </span><br><span class=\"line\">(23) 关闭BasicAuth认证     (16) 修复面板(检查错误并更新面板文件到最新版)                           </span><br><span class=\"line\">(24) 关闭动态口令认证          (17) 设置日志切割是否压缩                                           </span><br><span class=\"line\">(25) 设置是否保存文件历史副本  (18) 设置是否自动备份面板                                           </span><br><span class=\"line\">(26) 关闭面板ssl           (28) 修改面板安全入口                                                   </span><br><span class=\"line\">(0) 取消                   (29) 取消访问设备验证                                                   </span><br><span class=\"line\">===============================================                                                    </span><br><span class=\"line\">请输入命令编号：18                                                                                 </span><br><span class=\"line\">===============================================                                                    </span><br><span class=\"line\">正在执行(18)...                                                                                    </span><br><span class=\"line\">===============================================                                                    </span><br><span class=\"line\">|-检测到已开启面板自动备份功能,正在关闭...                                                         </span><br><span class=\"line\">|-已关闭面板自动备份功能                                                                           </span><br><span class=\"line\">root@Debian11:/www#                                                                                </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"排查过程\"><a href=\"#排查过程\" class=\"headerlink\" title=\"排查过程\"></a>排查过程</h3><ol>\n<li>cd &#x2F;. 然后 du -sh *<ol>\n<li>这样查找出来www目录占用了35G（不知情）</li>\n</ol>\n</li>\n<li>du -s &#x2F;www&#x2F;* | sort -nr<ol>\n<li>按文件占用大小排序，找出最大的占用空间文件夹： &#x2F;www&#x2F;backup</li>\n</ol>\n</li>\n<li>清除所有的文件：&#x2F;www&#x2F;backup</li>\n<li>运行bt 选18 关闭面板自动备份功能</li>\n</ol>\n<p>这个BT还是更适合方便+初级用户+快速上线，很高心释放出了30G空间。下一步：找BT替换方案。</p>\n<p>感谢列表：</p>\n<p><a href=\"https://ruxi.org/386.html\">一个反向代理神器——Nginx Proxy Manager&gt;修改Docker配置</a></p>\n<p><a href=\"https://www.bilibili.com/read/cv21872516/\">一种给PVE虚拟机磁盘扩容的方法</a></p>\n<h1 id=\"如何迁移-导入-导出-NPM-数据库\"><a href=\"#如何迁移-导入-导出-NPM-数据库\" class=\"headerlink\" title=\"如何迁移&#x2F;导入&#x2F;导出 NPM 数据库\"></a>如何迁移&#x2F;导入&#x2F;导出 NPM 数据库</h1><ol>\n<li><p>Copy the <code>/data</code> and <code>/etc/letsencrypt</code> volumes to your new instance and mount them into your new instance. If you use the default config</p>\n</li>\n<li><p><a href=\"https://github.com/NginxProxyManager/nginx-proxy-manager/discussions/1529#export-from-mariadb\">Export the database</a> if you are using the MariaDB &#x2F; MySQL database. If you are using the SQLite database it is likely included in your <code>data</code> folder, otherwise just copy the file over. Also possible using <a href=\"https://github.com/NginxProxyManager/nginx-proxy-manager/discussions/1529#export-from-mariadb-dbeaver\">DBeaver</a>.</p>\n<ol>\n<li><pre><code class=\"shell\">docker exec -it [db-container-name] mysqldump --user=[mysql-user] --password=[mysql-password] [mysql-db-name] -h 127.0.0.1 &gt; npm-export.sql\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">我的实例是</span><br><span class=\"line\"></span><br><span class=\"line\">```shell</span><br><span class=\"line\">docker exec -i template-app-1 apt-get update</span><br><span class=\"line\">docker exec -i template-app-1 apt-get install -y default-mysql-client</span><br><span class=\"line\">docker exec -it template-app-1 mysqldump --user=npm --password=npm npm -h 127.0.0.1 &gt; my-export2024010501.sql</span><br><span class=\"line\"></span><br><span class=\"line\">mysqldump: Got error: 2002: &quot;Can&#x27;t connect to MySQL server on &#x27;127.0.0.1&#x27; (115)&quot; when trying to connect</span><br><span class=\"line\"></span><br><span class=\"line\">docker exec -it template-app-1 mysqldump --user=npm --password=npm npm -h 127.0.0.1 &gt; my-export2024010501.sql</span><br><span class=\"line\"></span><br><span class=\"line\">#我就卡在这步，也不用往前了，因为我用的是sqlite文件型数据库，直接复制就可以备份了</span><br><span class=\"line\">docker cp 2c88aa4ba4d5:/data/database.sqlite /home/pi/database.sqlite</span><br></pre></td></tr></table></figure>\n</code></pre>\n</li>\n</ol>\n</li>\n<li><p><a href=\"https://github.com/NginxProxyManager/nginx-proxy-manager/discussions/1529#import-to-mariadb\">Import the database</a> to your new database container (if you are using the MariaDB &#x2F; MySQL database). Also possible using <a href=\"https://github.com/NginxProxyManager/nginx-proxy-manager/discussions/1529#import-to-mariadb-dbeaver\">DBeaver</a>.</p>\n<ol>\n<li><pre><code class=\"shell\">docker exec -i [db-container-name] mysql --user=[mysql-user] --password=[mysql-password] [mysql-db-name] -h 127.0.0.1 &lt; npm-export.sql\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">      </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">假如mysqldump没有在容器里面</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</code></pre>\n</li>\n</ol>\n</li>\n</ol>\n<p>抱错误：<br>OCI runtime exec failed: exec failed: unable to start container process: exec: “mysqldump”: executable file not found in $PATH: unknown                          </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">```shell</span><br><span class=\"line\">docker exec -i [container_name] apt-get update</span><br><span class=\"line\">docker exec -i [container_name] apt-get install -y default-mysql-client</span><br><span class=\"line\"></span><br><span class=\"line\">docker exec -i [conatiner_name] mysqldump --column-statistics=0 --user=[user_id] --password=[user_password] --databases npm &gt; npm-backup.sql</span><br></pre></td></tr></table></figure>\n\n<p>网上的文档有滞后现象，mysql-client 已改名：default-mysql-client</p>\n<p>docker exec -i template-app-1 apt-get install -y <strong>default-mysql-client</strong></p>\n<h1 id=\"证书签发失败的补救措施\"><a href=\"#证书签发失败的补救措施\" class=\"headerlink\" title=\"证书签发失败的补救措施\"></a>证书签发失败的补救措施</h1><p>解决NPM 泛域名证书故障</p>\n<p>思路转变: 从cdn中创建证书,然后手工上传到 NPM的自定义证书中</p>\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/08/01/66aa6168f09ca.png\" alt=\"image-20240801000806758\"></p>\n<p>点击 Add SSL Certificate, 选择 custom</p>\n<p>输入Certificate Key 证书的密钥文件内容(比如您可以从其他的网站上申请成功的,复制内容过来)</p>\n<p>输入Certificate 证书文件内容(比如您可以从其他的cdn网站上申请成功的,复制内容进一个文件,然后选择进来)</p>\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/08/01/66aa61d22854c.png\" alt=\"image-20240801000952298\"></p>\n<p>最后需要把所有的站点,重新都选中这个新建的Custom证书, 这样证书的过期错误问题就解决了</p>\n<p>每三个月都要这么操作一下</p>\n<p>TODO</p>\n<p>Migrate to </p>\n<p><a href=\"https://github.com/gdy666/lucky\">软硬路由公网神器,ipv6&#x2F;ipv4 端口转发,反向代理,DDNS,WOL,ipv4 stun内网穿透,cron,acme,阿里云盘,ftp,webdav,filebrowser</a></p>\n<p>官网: <a href=\"https://lucky666.cn/\">https://lucky666.cn/</a></p>\n<p>替代方案介绍: </p>\n<p><a href=\"https://post.smzdm.com/p/awz4dnrk/\">使用Lucky轻松实现反向代理+Https外网访问家庭NAS</a></p>\n<p><a href=\"https://sangxuesheng.com/archives/991.html\">openwrt使用lucky插件开启反向代理服务</a></p>","categories":[{"name":"Nginx Proxy Manager","path":"api/categories/Nginx Proxy Manager.json"}],"tags":[{"name":"docker-compose","path":"api/tags/docker-compose.json"},{"name":"docker","path":"api/tags/docker.json"},{"name":"家宽","path":"api/tags/家宽.json"},{"name":"NPM","path":"api/tags/NPM.json"},{"name":"debian","path":"api/tags/debian.json"},{"name":"Nginx Proxy Manager","path":"api/tags/Nginx Proxy Manager.json"},{"name":"linux","path":"api/tags/linux.json"},{"name":"pve","path":"api/tags/pve.json"}]}