{"title":"(强大的ffmpeg)如何下载并转化网络M3U8文件为mp4文件-CarlZeng","slug":"强大的ffmpeg-如何下载并转化网络M3U8文件为mp4文件-CarlZeng","date":"2023-01-10T03:15:00.000Z","updated":"2023-11-08T05:03:22.639Z","comments":true,"path":"api/articles/强大的ffmpeg-如何下载并转化网络M3U8文件为mp4文件-CarlZeng.json","excerpt":"背景本文将的是如何在苹果MAC电脑下，将网络地址的M3U8文件（URL地址）转化为方便播放的MP4文件。什么是M3U8文件？先去搜索下怎么下载ffmpeg，怎么使用？ 也可以参考下：如何使用youtube-dl下载Youtube上面的音视频，油管视频Support SOCKS5 proxies #3373","covers":null,"content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>本文将的是如何在苹果MAC电脑下，将网络地址的M3U8文件（URL地址）转化为方便播放的MP4文件。</p>\n<ol>\n<li>什么是M3U8文件？先去搜索下</li>\n<li>怎么下载ffmpeg，怎么使用？ 也可以参考下：<a href=\"https://www.cnblogs.com/backuper/p/16913601.html\">如何使用youtube-dl下载Youtube上面的音视频，油管视频</a></li>\n<li><a href=\"https://trac.ffmpeg.org/ticket/5776\">Support SOCKS5 proxies #3373</a> <span id=\"more\"></span></li>\n</ol>\n<h2 id=\"步骤（方案一）\"><a href=\"#步骤（方案一）\" class=\"headerlink\" title=\"步骤（方案一）\"></a>步骤（方案一）</h2><ol>\n<li><p>使用浏览器查看获取M3U8文件的地址<br>（插件如：Firefox的 Bulk Media Downloader, Video DownloadHelper<br>    Chrome的Media Download Helper）</p>\n</li>\n<li><p>打开Terminal</p>\n<ol>\n<li>　　<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ffmpeg -i &quot;http://host/视频地址/file.m3u8&quot; -bsf:a aac_adtstoasc -vcodec copy -c copy -crf 50 file.mp4</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">请更换参数中的 URL地址 和 末尾要保存的mp4文件名(已测试可用)。</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>如果该网络的URL地址需要Proxy才能访问，需要用到-http_proxy 参数。</p>\n<ol>\n<li>实例演示，假设已存在本机http proxy信息如下（很实用，因为即便已下载.m3u8文件，而其中所指向的具体视频分段地址还是需要proxy才能访问）</li>\n<li></li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ffmpeg -http_proxy &quot;http://127.0.0.1:7890&quot; -i &quot;http://host/folder/file.m3u8&quot; -bsf:a aac_adtstoasc -vcodec copy -c copy -crf 50 file1.mp4</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"下载循环录播资源\"><a href=\"#下载循环录播资源\" class=\"headerlink\" title=\"下载循环录播资源\"></a>下载循环录播资源</h3><p>下载循环录播专为单mp4文件，<br>长期实践的发现ffmpeg用来下载直播流也是666<br>比如, 实际的命令就像这样：<br>ffmpeg -http_proxy “<a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a>“ -i “<a href=\"https://hls.vdtuzv.com/videos2/77e1a56ec7cb38182c7df417d22f0b9a/77e1a56ec7cb38182c7df417d22f0b9a.m3u8?auth_key=1699418332-654b10dc8a7a2-0-498db8173470eb197016a656ac0ec821&v=2\">https://hls.vdtuzv.com/videos2/77e1a56ec7cb38182c7df417d22f0b9a/77e1a56ec7cb38182c7df417d22f0b9a.m3u8?auth_key=1699418332-654b10dc8a7a2-0-498db8173470eb197016a656ac0ec821&amp;v=2</a>“ -bsf:a aac_adtstoasc -vcodec copy -c copy -crf 50 file1108.mp4</p>\n<p>很多m3u8, 地址的加密方案是在url参数中增加auth_key；而且这个auth_key是会变更的。<br>这样维护源文件就简单了，放到特定地网盘（比如说）以后，由专门的软件负责循环直播这些mp4资源，其实就是录播，走实时的IPTV流量一样的原理。这样不暴露源文件的原始url链接，访问速度快（因为是分段式在内存下载），又能统计和分析视频的访问量等信息。<br>ffmpeg可以拼接这些分段式的.ts文件，最终转化成单个mp4文件。</p>\n<h2 id=\"步骤（方案二）\"><a href=\"#步骤（方案二）\" class=\"headerlink\" title=\"步骤（方案二）\"></a>步骤（方案二）</h2><p>这个方案假设m3u8内容可以本机直接访问的情况下，We can use VLC to convert easily, File &gt; Convert &#x2F; Stream：</p>\n<ol>\n<li>Drop media here</li>\n<li>Choose Profile</li>\n<li>Choose Destination</li>\n</ol>\n<p>20231006实测吐槽：尽量别用这第二个方案（的MAC版下VLC来保存短视频），因为会无限循环提示是否重写或者保留原有的文件。</p>\n","more":"</li>\n</ol>\n<h2 id=\"步骤（方案一）\"><a href=\"#步骤（方案一）\" class=\"headerlink\" title=\"步骤（方案一）\"></a>步骤（方案一）</h2><ol>\n<li><p>使用浏览器查看获取M3U8文件的地址<br>（插件如：Firefox的 Bulk Media Downloader, Video DownloadHelper<br>    Chrome的Media Download Helper）</p>\n</li>\n<li><p>打开Terminal</p>\n<ol>\n<li>　　<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ffmpeg -i &quot;http://host/视频地址/file.m3u8&quot; -bsf:a aac_adtstoasc -vcodec copy -c copy -crf 50 file.mp4</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">请更换参数中的 URL地址 和 末尾要保存的mp4文件名(已测试可用)。</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>如果该网络的URL地址需要Proxy才能访问，需要用到-http_proxy 参数。</p>\n<ol>\n<li>实例演示，假设已存在本机http proxy信息如下（很实用，因为即便已下载.m3u8文件，而其中所指向的具体视频分段地址还是需要proxy才能访问）</li>\n<li></li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ffmpeg -http_proxy &quot;http://127.0.0.1:7890&quot; -i &quot;http://host/folder/file.m3u8&quot; -bsf:a aac_adtstoasc -vcodec copy -c copy -crf 50 file1.mp4</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"下载循环录播资源\"><a href=\"#下载循环录播资源\" class=\"headerlink\" title=\"下载循环录播资源\"></a>下载循环录播资源</h3><p>下载循环录播专为单mp4文件，<br>长期实践的发现ffmpeg用来下载直播流也是666<br>比如, 实际的命令就像这样：<br>ffmpeg -http_proxy “<a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a>“ -i “<a href=\"https://hls.vdtuzv.com/videos2/77e1a56ec7cb38182c7df417d22f0b9a/77e1a56ec7cb38182c7df417d22f0b9a.m3u8?auth_key=1699418332-654b10dc8a7a2-0-498db8173470eb197016a656ac0ec821&v=2\">https://hls.vdtuzv.com/videos2/77e1a56ec7cb38182c7df417d22f0b9a/77e1a56ec7cb38182c7df417d22f0b9a.m3u8?auth_key=1699418332-654b10dc8a7a2-0-498db8173470eb197016a656ac0ec821&amp;v=2</a>“ -bsf:a aac_adtstoasc -vcodec copy -c copy -crf 50 file1108.mp4</p>\n<p>很多m3u8, 地址的加密方案是在url参数中增加auth_key；而且这个auth_key是会变更的。<br>这样维护源文件就简单了，放到特定地网盘（比如说）以后，由专门的软件负责循环直播这些mp4资源，其实就是录播，走实时的IPTV流量一样的原理。这样不暴露源文件的原始url链接，访问速度快（因为是分段式在内存下载），又能统计和分析视频的访问量等信息。<br>ffmpeg可以拼接这些分段式的.ts文件，最终转化成单个mp4文件。</p>\n<h2 id=\"步骤（方案二）\"><a href=\"#步骤（方案二）\" class=\"headerlink\" title=\"步骤（方案二）\"></a>步骤（方案二）</h2><p>这个方案假设m3u8内容可以本机直接访问的情况下，We can use VLC to convert easily, File &gt; Convert &#x2F; Stream：</p>\n<ol>\n<li>Drop media here</li>\n<li>Choose Profile</li>\n<li>Choose Destination</li>\n</ol>\n<p>20231006实测吐槽：尽量别用这第二个方案（的MAC版下VLC来保存短视频），因为会无限循环提示是否重写或者保留原有的文件。</p>","categories":[{"name":"ffmpeg","path":"api/categories/ffmpeg.json"}],"tags":[{"name":"ffmpeg","path":"api/tags/ffmpeg.json"},{"name":"m3u8","path":"api/tags/m3u8.json"},{"name":"m3u","path":"api/tags/m3u.json"},{"name":"mp4","path":"api/tags/mp4.json"}]}