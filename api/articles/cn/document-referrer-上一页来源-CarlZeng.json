{"title":"document.referrer 上一页来源-CarlZeng","slug":"cn/document-referrer-上一页来源-CarlZeng","date":"2009-01-22T01:57:00.000Z","updated":"2023-10-02T02:27:28.960Z","comments":true,"path":"api/articles/cn/document-referrer-上一页来源-CarlZeng.json","excerpt":"document.referrer 取当前页面的上一页来源，当然这个是可以伪造的。request.getHeader(\"referer\");如果有兴趣可以看看：如何改变或伪造HTTP-REFERERhttp://www.aslibra.com/blog/read.php?860原理都是sock构造http头来senddata。其他语言什么的比如perl也可以,目前比较简单的防御伪造refe...","covers":null,"content":"<p>document.referrer 取当前页面的上一页来源，当然这个是可以伪造的。 request.getHeader(“referer”); 如果有兴趣可以看看：如何改变或伪造HTTP-REFERER <a href=\"http://www.aslibra.com/blog/read.php?860\">http://www.aslibra.com/blog/read.php?860</a> 原理都是sock构造http头来senddata。其他语言什么的比如perl也可以,目前比较简单的防御伪造refe…</p>\n<!-- more -->\n<p>document.referrer 取当前页面的上一页来源，当然这个是可以伪造的。</p>\n<p>request.getHeader(“referer”);</p>\n<p>如果有兴趣可以看看：如何改变或伪造HTTP-REFERER</p>\n<p><a href=\"http://www.aslibra.com/blog/read.php?860\">http://www.aslibra.com/blog/read.php?860</a></p>\n<p>原理都是sock构造http头来senddata。其他语言什么的比如perl也可以,目前比较简单的防御伪造referer的方法是用验证码（Session）。现在有一些能防盗链软件的商业公司比如UUDOG，linkgate，VirtualWall什么的，都是开发的应用于IIS上面的 dll。有的是采用cookies验证、线程控制，有的是能随机生成文件名然后做URL重写。有的方法能的确达到不错的效果.</p>\n<p>内容：</p>\n<p>原理都是sock构造http头来senddata。其他语言什么的比如perl也可以,目前比较简单的防御伪造referer的方法是用验证码（Session）。</p>\n<p>dim http<br>set http&#x3D;server.createobject(“MSXML2.XMLHTTP”) ‘&#x2F;&#x2F;MSXML2.serverXMLHTTP也可以<br>Http.open “GET”,url,false<br>Http.setRequestHeader “Referer”,”<a href=\"http://www.fromdomain.cn/\">http://www.fromdomain.cn/</a>“<br>Http.send()</p>\n<p><strong>PHP(前提是装了curl):</strong>  </p>\n<p>$ch &#x3D; curl_init();<br>curl_setopt ($ch, CURLOPT_URL, “<a href=\"http://www.readdomain.cn/xxx.asp\">http://www.readdomain.cn/xxx.asp</a>“);<br>curl_setopt ($ch, CURLOPT_REFERER, “<a href=\"http://www.fromdomain.cn/\">http://www.fromdomain.cn/</a>“);<br>curl_exec ($ch);<br>curl_close ($ch);</p>\n<p><strong>PHP(不装curl用sock)</strong>  </p>\n<p>$server &#x3D; ‘<a href=\"http://www.readdomain.cn/\">www.readdomain.cn</a>‘;<br>$host &#x3D; ‘<a href=\"http://www.fromdomain.cn/\">www.fromdomain.cn</a>‘;<br>$target &#x3D; ‘&#x2F;xxx.php’;<br>$referer &#x3D; ‘<a href=\"http://www.aslibra.com/\">http://www.aslibra.com/</a>‘; &#x2F;&#x2F; Referer<br>$port &#x3D; 80;<br>$fp &#x3D; fsockopen($server, $port, $errno, $errstr, 30);<br>if (!$fp)<br>{<br>echo “$errstr ($errno)<br />\\n”;<br>}<br>else<br>{<br>$out &#x3D; “GET $target HTTP&#x2F;1.1\\r\\n”;<br>$out .&#x3D; “Host: $host\\r\\n”;<br>$out .&#x3D; “Cookie: SESSIONID&#x3D;test\\r\\n”;<br>$out .&#x3D; “Referer: $referer\\r\\n”;<br>$out .&#x3D; “Connection: Close\\r\\n\\r\\n”;<br>fwrite($fp, $out);<br>while (!feof($fp))<br>{<br>echo fgets($fp, 128);<br>}<br>fclose($fp);<br>}</p>\n<p><strong>VB.NET&#x2F;C#.NET</strong>  </p>\n<p>Dim oXMLHttp As MSXML2.XMLHTTP30 &#x3D; New MSXML2.XMLHTTP30()<br>或者<br>MSXML2.XMLHTTP30 oXMLHttp &#x3D; new MSXML2.XMLHTTP30();<br>oXMLHttp.open(….<br>oXMLHttp.setRequestHeader(…<br>oXMLHttp.send(..</p>\n","more":"<p>document.referrer 取当前页面的上一页来源，当然这个是可以伪造的。 request.getHeader(“referer”); 如果有兴趣可以看看：如何改变或伪造HTTP-REFERER <a href=\"http://www.aslibra.com/blog/read.php?860\">http://www.aslibra.com/blog/read.php?860</a> 原理都是sock构造http头来senddata。其他语言什么的比如perl也可以,目前比较简单的防御伪造refe…</p>\n<!-- more -->\n<p>document.referrer 取当前页面的上一页来源，当然这个是可以伪造的。</p>\n<p>request.getHeader(“referer”);</p>\n<p>如果有兴趣可以看看：如何改变或伪造HTTP-REFERER</p>\n<p><a href=\"http://www.aslibra.com/blog/read.php?860\">http://www.aslibra.com/blog/read.php?860</a></p>\n<p>原理都是sock构造http头来senddata。其他语言什么的比如perl也可以,目前比较简单的防御伪造referer的方法是用验证码（Session）。现在有一些能防盗链软件的商业公司比如UUDOG，linkgate，VirtualWall什么的，都是开发的应用于IIS上面的 dll。有的是采用cookies验证、线程控制，有的是能随机生成文件名然后做URL重写。有的方法能的确达到不错的效果.</p>\n<p>内容：</p>\n<p>原理都是sock构造http头来senddata。其他语言什么的比如perl也可以,目前比较简单的防御伪造referer的方法是用验证码（Session）。</p>\n<p>dim http<br>set http&#x3D;server.createobject(“MSXML2.XMLHTTP”) ‘&#x2F;&#x2F;MSXML2.serverXMLHTTP也可以<br>Http.open “GET”,url,false<br>Http.setRequestHeader “Referer”,”<a href=\"http://www.fromdomain.cn/\">http://www.fromdomain.cn/</a>“<br>Http.send()</p>\n<p><strong>PHP(前提是装了curl):</strong>  </p>\n<p>$ch &#x3D; curl_init();<br>curl_setopt ($ch, CURLOPT_URL, “<a href=\"http://www.readdomain.cn/xxx.asp\">http://www.readdomain.cn/xxx.asp</a>“);<br>curl_setopt ($ch, CURLOPT_REFERER, “<a href=\"http://www.fromdomain.cn/\">http://www.fromdomain.cn/</a>“);<br>curl_exec ($ch);<br>curl_close ($ch);</p>\n<p><strong>PHP(不装curl用sock)</strong>  </p>\n<p>$server &#x3D; ‘<a href=\"http://www.readdomain.cn/\">www.readdomain.cn</a>‘;<br>$host &#x3D; ‘<a href=\"http://www.fromdomain.cn/\">www.fromdomain.cn</a>‘;<br>$target &#x3D; ‘&#x2F;xxx.php’;<br>$referer &#x3D; ‘<a href=\"http://www.aslibra.com/\">http://www.aslibra.com/</a>‘; &#x2F;&#x2F; Referer<br>$port &#x3D; 80;<br>$fp &#x3D; fsockopen($server, $port, $errno, $errstr, 30);<br>if (!$fp)<br>{<br>echo “$errstr ($errno)<br />\\n”;<br>}<br>else<br>{<br>$out &#x3D; “GET $target HTTP&#x2F;1.1\\r\\n”;<br>$out .&#x3D; “Host: $host\\r\\n”;<br>$out .&#x3D; “Cookie: SESSIONID&#x3D;test\\r\\n”;<br>$out .&#x3D; “Referer: $referer\\r\\n”;<br>$out .&#x3D; “Connection: Close\\r\\n\\r\\n”;<br>fwrite($fp, $out);<br>while (!feof($fp))<br>{<br>echo fgets($fp, 128);<br>}<br>fclose($fp);<br>}</p>\n<p><strong>VB.NET&#x2F;C#.NET</strong>  </p>\n<p>Dim oXMLHttp As MSXML2.XMLHTTP30 &#x3D; New MSXML2.XMLHTTP30()<br>或者<br>MSXML2.XMLHTTP30 oXMLHttp &#x3D; new MSXML2.XMLHTTP30();<br>oXMLHttp.open(….<br>oXMLHttp.setRequestHeader(…<br>oXMLHttp.send(..</p>\n","categories":[],"tags":[]}