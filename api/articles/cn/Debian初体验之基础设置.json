{"title":"Debian初体验之基础设置","slug":"cn/Debian初体验之基础设置","date":"2023-10-17T11:18:56.000Z","updated":"2023-10-30T05:54:34.578Z","comments":true,"path":"api/articles/cn/Debian初体验之基础设置.json","excerpt":" [Figure] 学习J4125软路由里面的Debian 11，包含Debian连接NAS的远程目录尝试debian启动桌面，安装VNC远程控制，运行aircrack-ng跑包等等...","covers":["https://www.evernote.com/shard/s122/sh/31348b55-b9f4-4170-84d7-0c32ce32fc4e/bAUDNOvzyZ0EvmU9oLlA3aHF47s8MSmutxc4BRfd059Sqs5WiW0oDsdUVg/deep/0/image.png"],"content":"<img class=\"lozad\" data-src=\"https://www.evernote.com/shard/s122/sh/31348b55-b9f4-4170-84d7-0c32ce32fc4e/bAUDNOvzyZ0EvmU9oLlA3aHF47s8MSmutxc4BRfd059Sqs5WiW0oDsdUVg/deep/0/image.png\">\n学习J4125软路由里面的Debian 11，包含Debian连接NAS的远程目录\n尝试debian启动桌面，安装VNC远程控制，运行aircrack-ng跑包等等...\n <span id=\"more\"></span>\nDebian远程执行，连接NAS的远程目录（装载字典）\n\n\n<h2 id=\"如何开启debian的ssh远程管理\"><a href=\"#如何开启debian的ssh远程管理\" class=\"headerlink\" title=\"如何开启debian的ssh远程管理?\"></a>如何开启debian的ssh远程管理?</h2><p><a href=\"https://www.xxlxy.com/153.html\">https://www.xxlxy.com/153.html</a></p>\n<h2 id=\"如何查看debian的磁盘信息\"><a href=\"#如何查看debian的磁盘信息\" class=\"headerlink\" title=\"如何查看debian的磁盘信息\"></a>如何查看debian的磁盘信息</h2><p>lsblk</p>\n<h2 id=\"debian-如何启动桌面-debian-桌面\"><a href=\"#debian-如何启动桌面-debian-桌面\" class=\"headerlink\" title=\"debian 如何启动桌面(debian 桌面)\"></a>debian 如何启动桌面(debian 桌面)</h2><p>使用这个工具：tasksel，用来配置&#x2F;安装桌面系统<br>选择那个一个桌面？<br>Gnome一步到位，不想要遇到xface的奔溃机率（踩雷，排雷）</p>\n<p>Retrieving file 10 of 1173 (7h 12min 16s remaining)<br>简直搞笑了</p>\n<h3 id=\"如何Debian切换源，来加速安装？\"><a href=\"#如何Debian切换源，来加速安装？\" class=\"headerlink\" title=\"如何Debian切换源，来加速安装？\"></a>如何Debian切换源，来加速安装？</h3><p>可以通过编辑 &#x2F;etc&#x2F;apt&#x2F;sources.list 文件来更改Debian源<br>思路：<a href=\"https://blog.fallenbreath.me/zh-CN/2023/pve8-change-sourceslist/\">https://blog.fallenbreath.me/zh-CN/2023/pve8-change-sourceslist/</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># sources.list</span><br><span class=\"line\">sed -i &#x27;s|^deb http://ftp.debian.org|deb https://mirrors.ustc.edu.cn|g&#x27; /etc/apt/sources.list</span><br><span class=\"line\">sed -i &#x27;s|^deb http://security.debian.org|deb https://mirrors.ustc.edu.cn/debian-security|g&#x27; /etc/apt/sources.list</span><br></pre></td></tr></table></figure>\n<p>还是没有生效的感觉不知道是不是PVE的缘故？切换方案：<br>wget <a href=\"https://ghproxy.com/https://raw.githubusercontent.com/oooldking/script/master/superupdate.sh\">https://ghproxy.com/https://raw.githubusercontent.com/oooldking/script/master/superupdate.sh</a><br>bash superupdate.sh cn<br>bash superupdate.sh 163<br>bash superupdate.sh aliyun<br>bash superupdate.sh aws</p>\n<p>如果配置的文件不满意，一键还原<br>bash superupdate.sh restore</p>\n<h4 id=\"docker-里面换源\"><a href=\"#docker-里面换源\" class=\"headerlink\" title=\"docker 里面换源\"></a>docker 里面换源</h4><p>显然是为了docker里面的系统（比如PHP，Enginx等）在安装插件或者特定包的时候速度加快</p>\n<p>思路：<a href=\"https://yeasy.gitbook.io/docker_practice/install/mirror\">https://yeasy.gitbook.io/docker_practice/install/mirror</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">目前主流 Linux 发行版均已使用 systemd 进行服务管理，这里介绍如何在使用 systemd 的 Linux 发行版中配置镜像加速器。</span><br><span class=\"line\">请首先执行以下命令，查看是否在 docker.service 文件中配置过镜像地址。</span><br><span class=\"line\">$ systemctl cat docker | grep &#x27;\\-\\-registry\\-mirror&#x27;</span><br><span class=\"line\">如果该命令有输出，那么请执行 $ systemctl cat docker 查看 ExecStart= 出现的位置，修改对应的文件内容去掉 --registry-mirror 参数及其值，并按接下来的步骤进行配置。</span><br><span class=\"line\">如果以上命令没有任何输出，那么就可以在 /etc/docker/daemon.json 中写入如下内容（如果文件不存在请新建该文件）：</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;registry-mirrors&quot;: [</span><br><span class=\"line\">    &quot;https://hub-mirror.c.163.com&quot;,</span><br><span class=\"line\">    &quot;https://mirror.baidubce.com&quot;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">注意，一定要保证该文件符合 json 规范，否则 Docker 将不能启动。</span><br><span class=\"line\">之后重新启动服务。</span><br></pre></td></tr></table></figure>\n<p>修改好了重启docker后<br>docker info<br>仍然无发看到registry-mirrors。给docker换源失败。</p>\n<h3 id=\"查看：debian服务器已完成安装Gnome，如何开启\"><a href=\"#查看：debian服务器已完成安装Gnome，如何开启\" class=\"headerlink\" title=\"查看：debian服务器已完成安装Gnome，如何开启\"></a>查看：debian服务器已完成安装Gnome，如何开启</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使开机启动进入图形界面</span></span><br><span class=\"line\">systemctl set-default graphical.target</span><br></pre></td></tr></table></figure>\n<p>reboot后，依旧无法引导进入图形界面（GUI模式）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">startx</span><br><span class=\"line\"></span><br><span class=\"line\">    (EE) Please also check the log file at &quot;/var/log/Xorg.0.log&quot; for additional information.</span><br><span class=\"line\">    (EE) Server terminated with error (1). Closing log file.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"安装VNC\"><a href=\"#安装VNC\" class=\"headerlink\" title=\"安装VNC\"></a>安装VNC</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@Debian11:/etc/default# sudo apt install tigervnc-standalone-server </span><br><span class=\"line\">Reading package lists... Done</span><br><span class=\"line\">Building dependency tree... Done</span><br><span class=\"line\">Reading state information... Done</span><br><span class=\"line\">The following additional packages will be installed:</span><br><span class=\"line\">  libfile-readbackwards-perl tigervnc-common</span><br><span class=\"line\">The following NEW packages will be installed:</span><br><span class=\"line\">  libfile-readbackwards-perl tigervnc-common tigervnc-standalone-server</span><br><span class=\"line\">0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.</span><br><span class=\"line\">Need to get 1127 kB of archives.</span><br><span class=\"line\">After this operation, 3148 kB of additional disk space will be used.</span><br><span class=\"line\">Do you want to continue? [Y/n] y</span><br><span class=\"line\">Get:1 http://ftp.debian.org/debian bullseye/main amd64 libfile-readbackwards-perl all 1.05-2 [12.2 kB]</span><br><span class=\"line\">Get:2 http://ftp.debian.org/debian bullseye/main amd64 tigervnc-common amd64 1.11.0+dfsg-2+deb11u1 [108 kB]</span><br><span class=\"line\">Get:3 http://ftp.debian.org/debian bullseye/main amd64 tigervnc-standalone-server amd64 1.11.0+dfsg-2+deb11u1 [1006 kB]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>双双放弃，不用GUI，直接安装：包<br><a href=\"https://github.com/conwnet/wpa-dictionary#linux-%E7%AF%87recommended--%E6%8E%A8%E8%8D%90\">https://github.com/conwnet/wpa-dictionary#linux-%E7%AF%87recommended--%E6%8E%A8%E8%8D%90</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install aircrack-ng</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">sudo mkdir /mnt/nas</span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt-get install cifs-utils</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">sudo mount -t cifs //192.168.6.203/KingchuxingSSD512G /mnt/nas -o username=carl,password=******</span><br></pre></td></tr></table></figure>\n\n<p>思路切换：用BT来管理Debian，不需要GUI了<br>    内网面板地址: <a href=\"https://192.168.@@@:36430/8fef4036\">https://192.168.@@@:36430/8fef4036</a><br>    username: ******<br>    password: ******</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mount -t cifs -o rw,vers=3.0 //192.168.6.203/KingchuxingSSD512G /mnt/nas -o username=carl,password==******</span><br></pre></td></tr></table></figure>\n<p>works</p>\n<p>debian 跑aircrack-ng<br><a href=\"https://www.cnblogs.com/zhenghongxin/archive/2016/01/08/5115198.html\">Aircrack-ng无线破解总结</a><br><a href=\"https://blog.csdn.net/qq_54780911/article/details/124533973\">Linux 云服务器aircrack-ng后台跑包并用邮件发送结果</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aircrack-ng ./handshake/...cap -w ./pass/1d.txt</span><br></pre></td></tr></table></figure>\n\n<p>手机号字典生成器：可以根据用户需求定制化生成中国各大运营商和指定区域的手机号字典。<br><a href=\"https://github.com/asaotomo/makephonedict\">https://github.com/asaotomo/makephonedict</a></p>\n<p>疑惑：aircrack-ng跑出来或者没有跑出来，区别在哪里</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. ewsa跑包</span><br><span class=\"line\">2. hashcat</span><br><span class=\"line\">    hashcat破解握手包密码</span><br><span class=\"line\">    //用aircrack-ng把cap转换成hccap类型数据包</span><br><span class=\"line\">    aircrack-ng <span class=\"tag\">&lt;<span class=\"name\">input.cap</span>&gt;</span> -J <span class=\"tag\">&lt;<span class=\"name\">out.hccap</span>&gt;</span></span><br><span class=\"line\">    //用hashcat破解WPA/PSK密码（ -m 2500为破解的模式为WPA/PSK方式）</span><br><span class=\"line\">    hashcat -m 2500 testap.hccap pass.txt</span><br><span class=\"line\">3. aircrack-ng [cap包] -w [字典路径]</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"开启SSH并新增Debian用户\"><a href=\"#开启SSH并新增Debian用户\" class=\"headerlink\" title=\"开启SSH并新增Debian用户\"></a>开启SSH并新增Debian用户</h3><p>BT面板中 &gt; 安全 &gt; SSH管理 &gt; SSH开关<br><a href=\"https://192.168.@@@:@@@/firewall\">https://192.168.@@@:@@@/firewall</a></p>\n<p>debian新增一个管理用户<br>$ sudo adduser {username}<br>$ sudo passwd {username}  #已被adduser默认包含了</p>\n<p>将用户添加成为 sudo 用户<br>$ sudo usermod -aG sudo {username}</p>\n<p>删除用户<br>sudo deluser –remove-home {username}</p>\n<h3 id=\"bt面板-或者-debian-怎么测速？\"><a href=\"#bt面板-或者-debian-怎么测速？\" class=\"headerlink\" title=\"bt面板 或者 debian 怎么测速？\"></a>bt面板 或者 debian 怎么测速？</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -s https://ghproxy.com/https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python3</span><br></pre></td></tr></table></figure>\n<p>我们将使用 curl 工具来在线抓取上面使用的 Python 脚本然后直接用 Python 执行脚本。<br>上面的脚本将会运行脚本输出结果到屏幕上。</p>\n<p><a href=\"https://linux.cn/article-11882-1.html\">3 个方便的命令行网速度测试工具</a></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">carlzeng@Debian11:~$ curl -s https://ghproxy.com/https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python3</span><br><span class=\"line\">Retrieving speedtest.net configuration...</span><br><span class=\"line\">Testing from China Unicom (@@@)...</span><br><span class=\"line\">Retrieving speedtest.net server list...</span><br><span class=\"line\">Selecting best server based on ping...</span><br><span class=\"line\">Hosted by 天津电信 (TianJin) [123.83 km]: 15.133 ms</span><br><span class=\"line\">Testing download speed................................................................................</span><br><span class=\"line\">Download: 253.38 Mbit/s</span><br><span class=\"line\">Testing upload speed......................................................................................................</span><br><span class=\"line\">Upload: 44.48 Mbit/s</span><br><span class=\"line\"></span><br><span class=\"line\">carlzeng@Debian11:~$ curl -s https://ghproxy.com/https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python3</span><br><span class=\"line\">Retrieving speedtest.net configuration...</span><br><span class=\"line\">Testing from China Unicom (123.118.31.119)...</span><br><span class=\"line\">Retrieving speedtest.net server list...</span><br><span class=\"line\">Selecting best server based on ping...</span><br><span class=\"line\">Hosted by 天津电信 (TianJin) [123.83 km]: 14.818 ms</span><br><span class=\"line\">Testing download speed................................................................................</span><br><span class=\"line\">Download: 246.83 Mbit/s</span><br><span class=\"line\">Testing upload speed......................................................................................................</span><br><span class=\"line\">Upload: 55.65 Mbit/s</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"网速优化脚本\"><a href=\"#网速优化脚本\" class=\"headerlink\" title=\"网速优化脚本\"></a>网速优化脚本</h4><p>wget <a href=\"https://gist.githubusercontent.com/taurusxin/a9fc3ad039c44ab66fca0320045719b0/raw/3906efed227ee14fc5b4ac8eb4eea8855021ef19/optimize.sh\">https://gist.githubusercontent.com/taurusxin/a9fc3ad039c44ab66fca0320045719b0/raw/3906efed227ee14fc5b4ac8eb4eea8855021ef19/optimize.sh</a> &amp;&amp; sudo bash optimize.sh</p>\n<pre><code>carlzeng@Debian11:~$ curl -s https://ghproxy.com/https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python3\n    Retrieving speedtest.net configuration...\n    Testing from China Unicom (@@@)...\n    Retrieving speedtest.net server list...\n    Selecting best server based on ping...\n    Hosted by 天津电信 (TianJin) [123.83 km]: 9.809 ms\n    Testing download speed................................................................................\n    Download: 241.16 Mbit/s\n    Testing upload speed......................................................................................................\n    Upload: 52.83 Mbit/s\n</code></pre>\n<p>实践证明，这个脚本对于我的环境，没有效果</p>\n<h4 id=\"查看-Linux-系统信息\"><a href=\"#查看-Linux-系统信息\" class=\"headerlink\" title=\"查看 Linux 系统信息\"></a>查看 Linux 系统信息</h4><pre><code>秋水的 bench.sh 脚本, 可以查看 Linux 系统信息，还可以测试网络带宽及硬盘读写速率。\n&lt;img src = &#39;https://img.laoda.de/i/2022/12/24/iahi9q-2.webp&#39;&gt;\nhttps://www.oldking.net/350.html\n</code></pre>\n<pre><code class=\"shell\">wget -qO- --no-check-certificate https://ghproxy.com/https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash\n</code></pre>\n","more":"Debian远程执行，连接NAS的远程目录（装载字典）\n\n\n<h2 id=\"如何开启debian的ssh远程管理\"><a href=\"#如何开启debian的ssh远程管理\" class=\"headerlink\" title=\"如何开启debian的ssh远程管理?\"></a>如何开启debian的ssh远程管理?</h2><p><a href=\"https://www.xxlxy.com/153.html\">https://www.xxlxy.com/153.html</a></p>\n<h2 id=\"如何查看debian的磁盘信息\"><a href=\"#如何查看debian的磁盘信息\" class=\"headerlink\" title=\"如何查看debian的磁盘信息\"></a>如何查看debian的磁盘信息</h2><p>lsblk</p>\n<h2 id=\"debian-如何启动桌面-debian-桌面\"><a href=\"#debian-如何启动桌面-debian-桌面\" class=\"headerlink\" title=\"debian 如何启动桌面(debian 桌面)\"></a>debian 如何启动桌面(debian 桌面)</h2><p>使用这个工具：tasksel，用来配置&#x2F;安装桌面系统<br>选择那个一个桌面？<br>Gnome一步到位，不想要遇到xface的奔溃机率（踩雷，排雷）</p>\n<p>Retrieving file 10 of 1173 (7h 12min 16s remaining)<br>简直搞笑了</p>\n<h3 id=\"如何Debian切换源，来加速安装？\"><a href=\"#如何Debian切换源，来加速安装？\" class=\"headerlink\" title=\"如何Debian切换源，来加速安装？\"></a>如何Debian切换源，来加速安装？</h3><p>可以通过编辑 &#x2F;etc&#x2F;apt&#x2F;sources.list 文件来更改Debian源<br>思路：<a href=\"https://blog.fallenbreath.me/zh-CN/2023/pve8-change-sourceslist/\">https://blog.fallenbreath.me/zh-CN/2023/pve8-change-sourceslist/</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># sources.list</span><br><span class=\"line\">sed -i &#x27;s|^deb http://ftp.debian.org|deb https://mirrors.ustc.edu.cn|g&#x27; /etc/apt/sources.list</span><br><span class=\"line\">sed -i &#x27;s|^deb http://security.debian.org|deb https://mirrors.ustc.edu.cn/debian-security|g&#x27; /etc/apt/sources.list</span><br></pre></td></tr></table></figure>\n<p>还是没有生效的感觉不知道是不是PVE的缘故？切换方案：<br>wget <a href=\"https://ghproxy.com/https://raw.githubusercontent.com/oooldking/script/master/superupdate.sh\">https://ghproxy.com/https://raw.githubusercontent.com/oooldking/script/master/superupdate.sh</a><br>bash superupdate.sh cn<br>bash superupdate.sh 163<br>bash superupdate.sh aliyun<br>bash superupdate.sh aws</p>\n<p>如果配置的文件不满意，一键还原<br>bash superupdate.sh restore</p>\n<h4 id=\"docker-里面换源\"><a href=\"#docker-里面换源\" class=\"headerlink\" title=\"docker 里面换源\"></a>docker 里面换源</h4><p>显然是为了docker里面的系统（比如PHP，Enginx等）在安装插件或者特定包的时候速度加快</p>\n<p>思路：<a href=\"https://yeasy.gitbook.io/docker_practice/install/mirror\">https://yeasy.gitbook.io/docker_practice/install/mirror</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">目前主流 Linux 发行版均已使用 systemd 进行服务管理，这里介绍如何在使用 systemd 的 Linux 发行版中配置镜像加速器。</span><br><span class=\"line\">请首先执行以下命令，查看是否在 docker.service 文件中配置过镜像地址。</span><br><span class=\"line\">$ systemctl cat docker | grep &#x27;\\-\\-registry\\-mirror&#x27;</span><br><span class=\"line\">如果该命令有输出，那么请执行 $ systemctl cat docker 查看 ExecStart= 出现的位置，修改对应的文件内容去掉 --registry-mirror 参数及其值，并按接下来的步骤进行配置。</span><br><span class=\"line\">如果以上命令没有任何输出，那么就可以在 /etc/docker/daemon.json 中写入如下内容（如果文件不存在请新建该文件）：</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;registry-mirrors&quot;: [</span><br><span class=\"line\">    &quot;https://hub-mirror.c.163.com&quot;,</span><br><span class=\"line\">    &quot;https://mirror.baidubce.com&quot;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">注意，一定要保证该文件符合 json 规范，否则 Docker 将不能启动。</span><br><span class=\"line\">之后重新启动服务。</span><br></pre></td></tr></table></figure>\n<p>修改好了重启docker后<br>docker info<br>仍然无发看到registry-mirrors。给docker换源失败。</p>\n<h3 id=\"查看：debian服务器已完成安装Gnome，如何开启\"><a href=\"#查看：debian服务器已完成安装Gnome，如何开启\" class=\"headerlink\" title=\"查看：debian服务器已完成安装Gnome，如何开启\"></a>查看：debian服务器已完成安装Gnome，如何开启</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">使开机启动进入图形界面</span></span><br><span class=\"line\">systemctl set-default graphical.target</span><br></pre></td></tr></table></figure>\n<p>reboot后，依旧无法引导进入图形界面（GUI模式）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">startx</span><br><span class=\"line\"></span><br><span class=\"line\">    (EE) Please also check the log file at &quot;/var/log/Xorg.0.log&quot; for additional information.</span><br><span class=\"line\">    (EE) Server terminated with error (1). Closing log file.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"安装VNC\"><a href=\"#安装VNC\" class=\"headerlink\" title=\"安装VNC\"></a>安装VNC</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@Debian11:/etc/default# sudo apt install tigervnc-standalone-server </span><br><span class=\"line\">Reading package lists... Done</span><br><span class=\"line\">Building dependency tree... Done</span><br><span class=\"line\">Reading state information... Done</span><br><span class=\"line\">The following additional packages will be installed:</span><br><span class=\"line\">  libfile-readbackwards-perl tigervnc-common</span><br><span class=\"line\">The following NEW packages will be installed:</span><br><span class=\"line\">  libfile-readbackwards-perl tigervnc-common tigervnc-standalone-server</span><br><span class=\"line\">0 upgraded, 3 newly installed, 0 to remove and 0 not upgraded.</span><br><span class=\"line\">Need to get 1127 kB of archives.</span><br><span class=\"line\">After this operation, 3148 kB of additional disk space will be used.</span><br><span class=\"line\">Do you want to continue? [Y/n] y</span><br><span class=\"line\">Get:1 http://ftp.debian.org/debian bullseye/main amd64 libfile-readbackwards-perl all 1.05-2 [12.2 kB]</span><br><span class=\"line\">Get:2 http://ftp.debian.org/debian bullseye/main amd64 tigervnc-common amd64 1.11.0+dfsg-2+deb11u1 [108 kB]</span><br><span class=\"line\">Get:3 http://ftp.debian.org/debian bullseye/main amd64 tigervnc-standalone-server amd64 1.11.0+dfsg-2+deb11u1 [1006 kB]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>双双放弃，不用GUI，直接安装：包<br><a href=\"https://github.com/conwnet/wpa-dictionary#linux-%E7%AF%87recommended--%E6%8E%A8%E8%8D%90\">https://github.com/conwnet/wpa-dictionary#linux-%E7%AF%87recommended--%E6%8E%A8%E8%8D%90</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install aircrack-ng</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">sudo mkdir /mnt/nas</span><br><span class=\"line\"></span><br><span class=\"line\">sudo apt-get install cifs-utils</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">sudo mount -t cifs //192.168.6.203/KingchuxingSSD512G /mnt/nas -o username=carl,password=******</span><br></pre></td></tr></table></figure>\n\n<p>思路切换：用BT来管理Debian，不需要GUI了<br>    内网面板地址: <a href=\"https://192.168.@@@:36430/8fef4036\">https://192.168.@@@:36430/8fef4036</a><br>    username: ******<br>    password: ******</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mount -t cifs -o rw,vers=3.0 //192.168.6.203/KingchuxingSSD512G /mnt/nas -o username=carl,password==******</span><br></pre></td></tr></table></figure>\n<p>works</p>\n<p>debian 跑aircrack-ng<br><a href=\"https://www.cnblogs.com/zhenghongxin/archive/2016/01/08/5115198.html\">Aircrack-ng无线破解总结</a><br><a href=\"https://blog.csdn.net/qq_54780911/article/details/124533973\">Linux 云服务器aircrack-ng后台跑包并用邮件发送结果</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">aircrack-ng ./handshake/...cap -w ./pass/1d.txt</span><br></pre></td></tr></table></figure>\n\n<p>手机号字典生成器：可以根据用户需求定制化生成中国各大运营商和指定区域的手机号字典。<br><a href=\"https://github.com/asaotomo/makephonedict\">https://github.com/asaotomo/makephonedict</a></p>\n<p>疑惑：aircrack-ng跑出来或者没有跑出来，区别在哪里</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. ewsa跑包</span><br><span class=\"line\">2. hashcat</span><br><span class=\"line\">    hashcat破解握手包密码</span><br><span class=\"line\">    //用aircrack-ng把cap转换成hccap类型数据包</span><br><span class=\"line\">    aircrack-ng <span class=\"tag\">&lt;<span class=\"name\">input.cap</span>&gt;</span> -J <span class=\"tag\">&lt;<span class=\"name\">out.hccap</span>&gt;</span></span><br><span class=\"line\">    //用hashcat破解WPA/PSK密码（ -m 2500为破解的模式为WPA/PSK方式）</span><br><span class=\"line\">    hashcat -m 2500 testap.hccap pass.txt</span><br><span class=\"line\">3. aircrack-ng [cap包] -w [字典路径]</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"开启SSH并新增Debian用户\"><a href=\"#开启SSH并新增Debian用户\" class=\"headerlink\" title=\"开启SSH并新增Debian用户\"></a>开启SSH并新增Debian用户</h3><p>BT面板中 &gt; 安全 &gt; SSH管理 &gt; SSH开关<br><a href=\"https://192.168.@@@:@@@/firewall\">https://192.168.@@@:@@@/firewall</a></p>\n<p>debian新增一个管理用户<br>$ sudo adduser {username}<br>$ sudo passwd {username}  #已被adduser默认包含了</p>\n<p>将用户添加成为 sudo 用户<br>$ sudo usermod -aG sudo {username}</p>\n<p>删除用户<br>sudo deluser –remove-home {username}</p>\n<h3 id=\"bt面板-或者-debian-怎么测速？\"><a href=\"#bt面板-或者-debian-怎么测速？\" class=\"headerlink\" title=\"bt面板 或者 debian 怎么测速？\"></a>bt面板 或者 debian 怎么测速？</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -s https://ghproxy.com/https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python3</span><br></pre></td></tr></table></figure>\n<p>我们将使用 curl 工具来在线抓取上面使用的 Python 脚本然后直接用 Python 执行脚本。<br>上面的脚本将会运行脚本输出结果到屏幕上。</p>\n<p><a href=\"https://linux.cn/article-11882-1.html\">3 个方便的命令行网速度测试工具</a></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">carlzeng@Debian11:~$ curl -s https://ghproxy.com/https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python3</span><br><span class=\"line\">Retrieving speedtest.net configuration...</span><br><span class=\"line\">Testing from China Unicom (@@@)...</span><br><span class=\"line\">Retrieving speedtest.net server list...</span><br><span class=\"line\">Selecting best server based on ping...</span><br><span class=\"line\">Hosted by 天津电信 (TianJin) [123.83 km]: 15.133 ms</span><br><span class=\"line\">Testing download speed................................................................................</span><br><span class=\"line\">Download: 253.38 Mbit/s</span><br><span class=\"line\">Testing upload speed......................................................................................................</span><br><span class=\"line\">Upload: 44.48 Mbit/s</span><br><span class=\"line\"></span><br><span class=\"line\">carlzeng@Debian11:~$ curl -s https://ghproxy.com/https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python3</span><br><span class=\"line\">Retrieving speedtest.net configuration...</span><br><span class=\"line\">Testing from China Unicom (123.118.31.119)...</span><br><span class=\"line\">Retrieving speedtest.net server list...</span><br><span class=\"line\">Selecting best server based on ping...</span><br><span class=\"line\">Hosted by 天津电信 (TianJin) [123.83 km]: 14.818 ms</span><br><span class=\"line\">Testing download speed................................................................................</span><br><span class=\"line\">Download: 246.83 Mbit/s</span><br><span class=\"line\">Testing upload speed......................................................................................................</span><br><span class=\"line\">Upload: 55.65 Mbit/s</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"网速优化脚本\"><a href=\"#网速优化脚本\" class=\"headerlink\" title=\"网速优化脚本\"></a>网速优化脚本</h4><p>wget <a href=\"https://gist.githubusercontent.com/taurusxin/a9fc3ad039c44ab66fca0320045719b0/raw/3906efed227ee14fc5b4ac8eb4eea8855021ef19/optimize.sh\">https://gist.githubusercontent.com/taurusxin/a9fc3ad039c44ab66fca0320045719b0/raw/3906efed227ee14fc5b4ac8eb4eea8855021ef19/optimize.sh</a> &amp;&amp; sudo bash optimize.sh</p>\n<pre><code>carlzeng@Debian11:~$ curl -s https://ghproxy.com/https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python3\n    Retrieving speedtest.net configuration...\n    Testing from China Unicom (@@@)...\n    Retrieving speedtest.net server list...\n    Selecting best server based on ping...\n    Hosted by 天津电信 (TianJin) [123.83 km]: 9.809 ms\n    Testing download speed................................................................................\n    Download: 241.16 Mbit/s\n    Testing upload speed......................................................................................................\n    Upload: 52.83 Mbit/s\n</code></pre>\n<p>实践证明，这个脚本对于我的环境，没有效果</p>\n<h4 id=\"查看-Linux-系统信息\"><a href=\"#查看-Linux-系统信息\" class=\"headerlink\" title=\"查看 Linux 系统信息\"></a>查看 Linux 系统信息</h4><pre><code>秋水的 bench.sh 脚本, 可以查看 Linux 系统信息，还可以测试网络带宽及硬盘读写速率。\n&lt;img src = &#39;https://img.laoda.de/i/2022/12/24/iahi9q-2.webp&#39;&gt;\nhttps://www.oldking.net/350.html\n</code></pre>\n<pre><code class=\"shell\">wget -qO- --no-check-certificate https://ghproxy.com/https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash\n</code></pre>","categories":[{"name":"Debian","path":"api/categories/Debian.json"}],"tags":[{"name":"debian","path":"api/tags/debian.json"},{"name":"软路由","path":"api/tags/软路由.json"},{"name":"aircrack-ng","path":"api/tags/aircrack-ng.json"},{"name":"debian检测与优化","path":"api/tags/debian检测与优化.json"}]}