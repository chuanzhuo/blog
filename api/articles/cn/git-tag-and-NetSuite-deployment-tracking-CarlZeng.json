{"title":"git tag and NetSuite deployment tracking-CarlZeng","slug":"cn/git-tag-and-NetSuite-deployment-tracking-CarlZeng","date":"2021-02-23T03:21:00.000Z","updated":"2023-10-08T13:38:52.659Z","comments":true,"path":"api/articles/cn/git-tag-and-NetSuite-deployment-tracking-CarlZeng.json","excerpt":null,"covers":null,"content":"<p>While we have team to maintain same project and (some times) same file, we use git commit to track feature by feature(or update by update) refinements&#x2F;updates.  Each commit will pass to testing team for testing(usually testing in sandbox before deployment&#x2F;release to Production), </p>\n<p>- There are chances of deploy multiple commits, after testing and confirm</p>\n<p>- There can be few days or weeks after the commit been deploy&#x2F;release to Production.</p>\n<p>-- At that time, we might already forget where and when the last update has been made(even sometimes the feature&#x2F;refinement has been forgotten), where is the last production version&#x2F;status</p>\n<p>- So here comes the challenge:</p>\n<p>How to use Git branch to maintain the tesing commit to released PRD status?<br>Is there any comment or tag to show the status of the deployment to PRD<br>or the deployment note?<br>Use Tag?</p>\n<p>The light way, fast way to do this can be git tag, we can create a simple tag AT deployment date&#x2F;process.</p>\n<p>By doing that, we track the last deployment commit&#x2F;point; so we knows where is the status in Production, and the lasttest commit(s) in the branch log.  Each to refresh the memory on what updates has been made in sandbox(i.e.)</p>\n<p>Detail operation, we can reference on the git tag usage, I.e. this article <a href=\"https://www.codenong.com/cs106325649/\">https://www.codenong.com/cs106325649/</a></p>\n<p>How to given more note&#x2F;description for Deployment Notes&#x2F;Steps(some times it related with new custom objects), git tag has the comment paramter, the other way is to keep the deployment note in the commit message.</p>\n<p>The other ways is using Branch to track the production status, but that will consume more times between deployment process, we can choose this option in same cases, depends on the project situation.</p>\n","more":"<p>While we have team to maintain same project and (some times) same file, we use git commit to track feature by feature(or update by update) refinements&#x2F;updates.  Each commit will pass to testing team for testing(usually testing in sandbox before deployment&#x2F;release to Production), </p>\n<p>- There are chances of deploy multiple commits, after testing and confirm</p>\n<p>- There can be few days or weeks after the commit been deploy&#x2F;release to Production.</p>\n<p>-- At that time, we might already forget where and when the last update has been made(even sometimes the feature&#x2F;refinement has been forgotten), where is the last production version&#x2F;status</p>\n<p>- So here comes the challenge:</p>\n<p>How to use Git branch to maintain the tesing commit to released PRD status?<br>Is there any comment or tag to show the status of the deployment to PRD<br>or the deployment note?<br>Use Tag?</p>\n<p>The light way, fast way to do this can be git tag, we can create a simple tag AT deployment date&#x2F;process.</p>\n<p>By doing that, we track the last deployment commit&#x2F;point; so we knows where is the status in Production, and the lasttest commit(s) in the branch log.  Each to refresh the memory on what updates has been made in sandbox(i.e.)</p>\n<p>Detail operation, we can reference on the git tag usage, I.e. this article <a href=\"https://www.codenong.com/cs106325649/\">https://www.codenong.com/cs106325649/</a></p>\n<p>How to given more note&#x2F;description for Deployment Notes&#x2F;Steps(some times it related with new custom objects), git tag has the comment paramter, the other way is to keep the deployment note in the commit message.</p>\n<p>The other ways is using Branch to track the production status, but that will consume more times between deployment process, we can choose this option in same cases, depends on the project situation.</p>\n","categories":[{"name":"NetSuite","path":"api/categories/NetSuite.json"}],"tags":[{"name":"NetSuite","path":"api/tags/NetSuite.json"}]}