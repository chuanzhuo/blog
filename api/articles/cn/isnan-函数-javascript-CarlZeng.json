{"title":"isnan 函数 -javascript-CarlZeng","slug":"cn/isnan-函数-javascript-CarlZeng","date":"2008-10-02T13:13:00.000Z","updated":"2023-10-08T14:22:17.119Z","comments":true,"path":"api/articles/cn/isnan-函数-javascript-CarlZeng.json","excerpt":"JavaScript中isNaN函数方法是返回一个 Boolean 值，指明提供的值是否是保留值 NaN （不是数字）。 使用方法：isNaN(numValue)其中必选项 numvalue 参数为要检查是否为 NAN 的值。 如果值是 NaN， 那么 isNaN 函数返回 true ，否则返回 false 。 使用这个函数的典型情况是检查 parseInt 和parseFloat 方法的返回值。...","covers":null,"content":"<p>JavaScript中isNaN函数方法是返回一个 Boolean 值，指明提供的值是否是保留值 NaN （不是数字）。 使用方法：isNaN(numValue)其中必选项 numvalue 参数为要检查是否为 NAN 的值。 如果值是 NaN， 那么 isNaN 函数返回 true ，否则返回 false 。 使用这个函数的典型情况是检查 parseInt 和parseFloat 方法的返回值。…</p>\n<!-- more -->\n<p>JavaScript中isNaN函数方法是返回一个 Boolean 值，指明提供的值是否是保留值 NaN （不是数字）。 使用方法：  </p>\n<p>isNaN(numValue)  </p>\n<p>其中必选项 numvalue 参数为要检查是否为 NAN 的值。  </p>\n<p>如果值是 NaN， 那么 isNaN 函数返回 true ，否则返回 false 。 使用这个函数的典型情况是检查 parseInt 和<br>parseFloat 方法的返回值。还有一种办法，变量可以与它自身进行比较。 如果比较的结果不等，那么它就是 NaN 。 这是因为 NaN<br>是唯一与自身不等的值。  </p>\n<p>注意：NaN “Not a Number”。出现这个数值比较少见，以至于我们可以不理它。当运算无法返回正确的数值时，就会返回“NaN”值。NaN 值非常特殊，因为它“不是数字”，所以任何数跟它都不相等，甚至 NaN 本身也不等于 NaN 。  </p>\n<p>isNaN是个函数，它计算一个参数，检查它是否为数值。  </p>\n<p><br/>function isdigit(s)<br/>{<br/>var r,re;<br/>re &#x3D; &#x2F;\\d*&#x2F;i; &#x2F;&#x2F;\\d表示数字,*表示匹配多个数字<br/>r &#x3D; s.match(re);<br/>return (r&#x3D;&#x3D;s)?1:0;<br/>}<br/>var s1 &#x3D; “123”;<br/>var s2 &#x3D; “45a”;<br/>var s3 &#x3D; “bcd”;<br/>var s4 &#x3D; “e6”<br/>alert(“s1&#x3D;”+isdigit(s1)+”r2&#x3D;”+isdigit(s2)+”r3&#x3D;”+isdigit(s3)+”r4&#x3D;”+isdigit(s4));<br/>  </p>\n<p>如 93- 则返回 true  代表 is not a number.</p>\n","more":"<p>JavaScript中isNaN函数方法是返回一个 Boolean 值，指明提供的值是否是保留值 NaN （不是数字）。 使用方法：isNaN(numValue)其中必选项 numvalue 参数为要检查是否为 NAN 的值。 如果值是 NaN， 那么 isNaN 函数返回 true ，否则返回 false 。 使用这个函数的典型情况是检查 parseInt 和parseFloat 方法的返回值。…</p>\n<!-- more -->\n<p>JavaScript中isNaN函数方法是返回一个 Boolean 值，指明提供的值是否是保留值 NaN （不是数字）。 使用方法：  </p>\n<p>isNaN(numValue)  </p>\n<p>其中必选项 numvalue 参数为要检查是否为 NAN 的值。  </p>\n<p>如果值是 NaN， 那么 isNaN 函数返回 true ，否则返回 false 。 使用这个函数的典型情况是检查 parseInt 和<br>parseFloat 方法的返回值。还有一种办法，变量可以与它自身进行比较。 如果比较的结果不等，那么它就是 NaN 。 这是因为 NaN<br>是唯一与自身不等的值。  </p>\n<p>注意：NaN “Not a Number”。出现这个数值比较少见，以至于我们可以不理它。当运算无法返回正确的数值时，就会返回“NaN”值。NaN 值非常特殊，因为它“不是数字”，所以任何数跟它都不相等，甚至 NaN 本身也不等于 NaN 。  </p>\n<p>isNaN是个函数，它计算一个参数，检查它是否为数值。  </p>\n<p><br/>function isdigit(s)<br/>{<br/>var r,re;<br/>re &#x3D; &#x2F;\\d*&#x2F;i; &#x2F;&#x2F;\\d表示数字,*表示匹配多个数字<br/>r &#x3D; s.match(re);<br/>return (r&#x3D;&#x3D;s)?1:0;<br/>}<br/>var s1 &#x3D; “123”;<br/>var s2 &#x3D; “45a”;<br/>var s3 &#x3D; “bcd”;<br/>var s4 &#x3D; “e6”<br/>alert(“s1&#x3D;”+isdigit(s1)+”r2&#x3D;”+isdigit(s2)+”r3&#x3D;”+isdigit(s3)+”r4&#x3D;”+isdigit(s4));<br/>  </p>\n<p>如 93- 则返回 true  代表 is not a number.</p>\n","categories":[{"name":"Javascript","path":"api/categories/Javascript.json"}],"tags":[{"name":"Javascript","path":"api/tags/Javascript.json"},{"name":"JS","path":"api/tags/JS.json"}]}