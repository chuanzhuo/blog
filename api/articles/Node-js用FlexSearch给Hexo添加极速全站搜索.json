{"title":"Node.js用FlexSearch给Hexo添加极速全站搜索","slug":"Node-js用FlexSearch给Hexo添加极速全站搜索","date":"2023-12-16T03:21:33.000Z","updated":"2023-12-25T00:42:00.136Z","comments":true,"path":"api/articles/Node-js用FlexSearch给Hexo添加极速全站搜索.json","excerpt":" [Figure] 全站检索，全站内容搜索之自定义flexsearch实现【已上线，V0.0.2测试中】引用拓展：大文本，多文本，多文件系统级文本字符低资源消耗高效急速搜索","covers":["https://www.evernote.com/shard/s122/sh/6ae8e607-5752-4cdb-97e9-9ca27c67ac34/n2UiZ8dhaEX3-Dps8Ws25YQ12vx-31PUft2pMAg5ibbAf3qG4CGC2jR0qQ/deep/0/image.png"],"content":"<img class=\"lozad\" data-src=\"https://www.evernote.com/shard/s122/sh/6ae8e607-5752-4cdb-97e9-9ca27c67ac34/n2UiZ8dhaEX3-Dps8Ws25YQ12vx-31PUft2pMAg5ibbAf3qG4CGC2jR0qQ/deep/0/image.png\">\n\n<p>全站检索，全站内容搜索之自定义flexsearch实现【已上线，V0.0.2测试中】</p>\n<p>引用拓展：大文本，多文本，多文件系统级文本字符低资源消耗高效急速搜索</p>\n<span id=\"more\"></span>\n\n<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>许多网站或博主都苦于站内搜索的功能缺陷，使用特定搜索引擎的搜索就得要忍耐特定搜索引擎收录文章的速度（搜索内容受局限于特定的旧版本），自带的搜索消耗太多资源，速度慢，html的静态站点无法使用数据库的搜索…..</p>\n<p>介绍flexsearch（这个可以轻易从<a href=\"https://c.carlzeng.top:3/web\">加速浏览器</a>中搜索获取最新版信息）不是本文的重点，Node.js的入门在我上一篇文章是重点：<a href=\"https://www.carlzeng.top/search?q=Node.js\">Node.js开发环境及应用实例</a></p>\n<p>本文主要分享Node.js + FlexSearch 实际应用在本站（hexo）中全文搜索实现，用于我在<a href=\"https://backuper.cnblogs.com/\">Carl Notes 博客园</a>中同步发布文章时“相关内容”章节的实现（iframe方法，由于博客园禁止了在文章中添加javascript代码，导致ajax跨域去cdn站点里面获取相关内容失败，这是一个巨坑，坑了我好2-3天）</p>\n<p>使用FlexSearch对于内容的搜索是很有帮助是它的强项，Hexo对于相关内容的实现也不错：用插件中的算法去比对我目前300多篇文章彼此之间的联系，关键字，权重等等。详细见 <a href=\"https://www.carlzeng.top/202309222344.html?highlight=hello+hexo\">Hello hexo</a>中关于<a href=\"https://www.carlzeng.top/202309222344.html?highlight=hello+hexo#%E7%9B%B8%E5%85%B3%E6%96%87%E7%AB%A0-related-posts-%E5%A6%82%E4%BD%95%E5%A2%9E%E5%8A%A0%E5%88%B010%E6%9D%A1%EF%BC%9F\">相关文章 related_posts 如何增加到10条？</a>的章节介绍</p>\n<p>但hexo（我目前的版本）在全站搜索的实现是潦草了，不知道最新版有没有改进‘全站检索‘</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo: 6.3.0                                                                                                </span><br><span class=\"line\">hexo-cli: 4.3.1        </span><br><span class=\"line\"><span class=\"comment\"># 我的hexo待更新啊。。。懒。。。新版吸引力不足。。。</span></span><br><span class=\"line\">node: 20.10.0 </span><br></pre></td></tr></table></figure>\n\n<p>目前版本的hexo是通过ajax请求把search.xml，比如这样的 <a href=\"https://hk.carlzeng.top/search.xml\">search.xml</a>下载到内存中，然后通过js来在本地浏览器搜索和匹配（优点：UI界面很好看）可是，可是我的文件截止目前为止已经3M了！</p>\n<p>可是这对于WEB太大了，我用最快的CDN线路，最快也要花费350ms+才能下载到本地，一般的cdn都要1s+这对于用户是很要命的。这是在方案级别上的缺陷。</p>\n<h1 id=\"怎么用\"><a href=\"#怎么用\" class=\"headerlink\" title=\"怎么用\"></a>怎么用</h1><p>使用了目前（2023年12月中旬）是最新版本的FlexSearch</p>\n<p>最简单的使用：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//申明三种情况的应用，从简单到复杂Index，Document和Worker；先理解最简单的Index</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;<span class=\"title class_\">Index</span>, <span class=\"title class_\">Document</span>, <span class=\"title class_\">Worker</span>&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;flexsearch&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//指定Index索引的参数，可以很复杂，先从默认最简单的开始</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> index = <span class=\"keyword\">new</span> <span class=\"title class_\">Index</span>(&#123;</span><br><span class=\"line\">\t<span class=\"attr\">tokenize</span>: <span class=\"string\">&quot;reverse&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">depth</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">\t<span class=\"attr\">minlength</span>: <span class=\"number\">3</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//添加源内容，比如多个文件，数据库。。。</span></span><br><span class=\"line\">index.<span class=\"title function_\">add</span>(post.<span class=\"property\">title</span>, post.<span class=\"property\">title</span> + post.<span class=\"property\">source</span> + post.<span class=\"property\">content</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//搜索，参数限定了11个结果</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> searchRes = index.<span class=\"title function_\">search</span>(req.<span class=\"property\">query</span>.<span class=\"property\">q</span>, <span class=\"number\">11</span>);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=node.js\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"600\"></iframe>\n\n<h1 id=\"实现方法-过程\"><a href=\"#实现方法-过程\" class=\"headerlink\" title=\"实现方法&#x2F;过程\"></a>实现方法&#x2F;过程</h1><p>基础学习建议实践走一下流程：<a href=\"https://expressjs.com/en/starter/installing.html\">https://expressjs.com/en/starter/installing.html</a><br>（在试一试列子<a href=\"https://expressjs.com/en/starter/examples.html%EF%BC%89\">https://expressjs.com/en/starter/examples.html）</a></p>\n<h2 id=\"Express-jade相关\"><a href=\"#Express-jade相关\" class=\"headerlink\" title=\"Express,  jade相关\"></a>Express,  jade相关</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#主程序文件app.<span class=\"property\">js</span>，文件内容节选：</span><br><span class=\"line\"><span class=\"keyword\">var</span> appSearchRouter = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./routes/appsearch&#x27;</span>); </span><br><span class=\"line\">#这里引用的新建的文件appserach.<span class=\"property\">js</span></span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"string\">&#x27;/appsearch&#x27;</span>, appSearchRouter); #这个注册appsearch可以按需修改名称</span><br><span class=\"line\"></span><br><span class=\"line\">#其他的文件内容都按默认的列子<span class=\"attr\">https</span>:<span class=\"comment\">//expressjs.com/en/starter/examples.html</span></span><br><span class=\"line\">#生成的默认的文件列表即可。文档很清晰，友好。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#appsearch.<span class=\"property\">js</span>文件内容<span class=\"title class_\">Express</span>,  jade相关：</span><br><span class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> router = express.<span class=\"title class_\">Router</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">res.<span class=\"title function_\">render</span>(<span class=\"string\">&#x27;searchTemplate&#x27;</span>, &#123; <span class=\"attr\">searchResults</span>: arrSearchRes &#125;);</span><br><span class=\"line\">#对应下面的searchTemplate.<span class=\"property\">jade</span>文件内容：</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#然后在views目录下面添加searchTemplate.jade文件，文件内容：</span></span><br><span class=\"line\">doctype html</span><br><span class=\"line\">html</span><br><span class=\"line\">    head</span><br><span class=\"line\">        <span class=\"attr\">title</span>= title</span><br><span class=\"line\">        link(<span class=\"attr\">rel</span>=<span class=\"string\">&#x27;stylesheet&#x27;</span>, href=<span class=\"string\">&#x27;/stylesheets/style.css&#x27;</span>)</span><br><span class=\"line\">    body</span><br><span class=\"line\">        .popup.search-popup</span><br><span class=\"line\">            .search-result-container</span><br><span class=\"line\">                .search-stats 找到 <span class=\"comment\">#&#123;searchResults.length&#125; 个搜索结果</span></span><br><span class=\"line\">                hr</span><br><span class=\"line\">                ul.search-result-list</span><br><span class=\"line\">                    each result in searchResults</span><br><span class=\"line\">                        li</span><br><span class=\"line\">                            a(<span class=\"attr\">href</span>=result.doc.url, class=<span class=\"string\">&quot;search-result-title&quot;</span>, data-pjax-state=<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">                                <span class=\"attr\">mark.search-keyword</span>= result.doc.title</span><br><span class=\"line\">                            a(<span class=\"attr\">data-pjax-state</span>=<span class=\"string\">&quot;&quot;</span> href=result.doc.url)</span><br><span class=\"line\">                                <span class=\"attr\">p.search-result</span>= result.doc.subcontent</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"FlexSearch相关\"><a href=\"#FlexSearch相关\" class=\"headerlink\" title=\"FlexSearch相关\"></a>FlexSearch相关</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#appsearch.<span class=\"property\">js</span>文件内容中<span class=\"title class_\">FlexSearch</span>相关：</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;<span class=\"title class_\">Index</span>, <span class=\"title class_\">Document</span>, <span class=\"title class_\">Worker</span>&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;flexsearch&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//const document</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> index = <span class=\"keyword\">new</span> <span class=\"title class_\">Document</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">tokenize</span>: <span class=\"string\">&quot;reverse&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">minlength</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">    <span class=\"attr\">document</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">id</span>: <span class=\"string\">&quot;id&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">index</span>: [</span><br><span class=\"line\">            <span class=\"comment\">// &#123; 没必要用title在搜索一遍，即便效率极高</span></span><br><span class=\"line\">            <span class=\"comment\">//     field: &quot;title&quot;,</span></span><br><span class=\"line\">            <span class=\"comment\">//     tokenize: &quot;forward&quot;</span></span><br><span class=\"line\">            <span class=\"comment\">// &#125;,</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">field</span>: <span class=\"string\">&quot;content&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">context</span>: &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// depth: 2,</span></span><br><span class=\"line\">                    <span class=\"comment\">// resolution: 3</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">tokenize</span>: <span class=\"string\">&quot;reverse&quot;</span></span><br><span class=\"line\">            &#125;],</span><br><span class=\"line\">        <span class=\"attr\">store</span>: [<span class=\"string\">&quot;title&quot;</span>, <span class=\"string\">&quot;updated&quot;</span>, <span class=\"string\">&quot;date&quot;</span>, <span class=\"string\">&quot;source&quot;</span>, <span class=\"string\">&quot;content&quot;</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// load posts from a file 加载hexo的数据库文件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> pages = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>).<span class=\"title function_\">readFileSync</span>(path.<span class=\"title function_\">join</span>(__dirname, <span class=\"string\">&#x27;../../blog/db.json&#x27;</span>)).<span class=\"title function_\">toString</span>()).<span class=\"property\">models</span>.<span class=\"property\">Post</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// add posts to the index</span></span><br><span class=\"line\">pages.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">post</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> idx = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"comment\">// index.add(post.title, post.title + post.source + post.content)</span></span><br><span class=\"line\">    index.<span class=\"title function_\">add</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">id</span>: post.<span class=\"property\">title</span>,</span><br><span class=\"line\">        <span class=\"attr\">title</span>: post.<span class=\"property\">title</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;title&quot;</span>: post.<span class=\"property\">title</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;updated&quot;</span>: post.<span class=\"property\">updated</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;date&quot;</span>: post.<span class=\"property\">date</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;source&quot;</span> : post.<span class=\"property\">source</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;related_posts&quot;</span>: post.<span class=\"property\">related_posts</span>,</span><br><span class=\"line\">        <span class=\"attr\">content</span>: post.<span class=\"property\">_content</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    idx ++;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arrSearchRes = index.<span class=\"title function_\">search</span>(req.<span class=\"property\">query</span>.<span class=\"property\">q</span>, &#123;</span><br><span class=\"line\">        <span class=\"attr\">limit</span>: <span class=\"number\">11</span>,</span><br><span class=\"line\">        <span class=\"attr\">enrich</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注意避坑事项1\"><a href=\"#注意避坑事项1\" class=\"headerlink\" title=\"注意避坑事项1\"></a>注意避坑事项1</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// create the index</span></span><br><span class=\"line\"><span class=\"comment\">// var FlexSearch = require(&quot;flexsearch&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">// var index = FlexSearch.create();</span></span><br></pre></td></tr></table></figure>\n\n<p>这是flexsearch的旧版本语法，Google了一圈，国内的（中文内容）很多例子都是这个旧版本的，旧版本是无法运行的，各种报错，连ChatGpt3.5都不会解释，问题出现在哪里了。（这告诉我们版本是多么重要的）</p>\n<h3 id=\"注意避坑事项2\"><a href=\"#注意避坑事项2\" class=\"headerlink\" title=\"注意避坑事项2\"></a>注意避坑事项2</h3><p>jade模版也是很好用的，缩紧语法。很简易地将HTML生成。制作过程中，也能很容易地使用转换工具，将现成的HTML转化为jade（或者Pug)的模版，比如：<a href=\"https://tool.fiaox.com/template-html-pug/\">https://tool.fiaox.com/template-html-pug/</a></p>\n<p>模版转化，模版转换<a href=\"https://tool.fiaox.com/template-html-pug/\">Html to Pug</a></p>\n<h2 id=\"添加CORS跨站支持\"><a href=\"#添加CORS跨站支持\" class=\"headerlink\" title=\"添加CORS跨站支持\"></a>添加CORS跨站支持</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res.<span class=\"title function_\">setHeader</span>(<span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>,<span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">res.<span class=\"title function_\">setHeader</span>(</span><br><span class=\"line\">    <span class=\"string\">&quot;Access-Control-Allow-Methods&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;PUT, GET, POST, DELETE, HEAD, PATCH&quot;</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Docker中Production发布\"><a href=\"#Docker中Production发布\" class=\"headerlink\" title=\"Docker中Production发布\"></a>Docker中Production发布</h1><p>Docker中发布是我首选项，高效简单易管理。</p>\n<p>发布文件列表：</p>\n<p>​\t复制所有文件夹除了node_modules</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">进入nodejs容器，启动bash（用于执行node程序们）</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">docker <span class=\"built_in\">exec</span> -it nodejs bash</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">直接运行node程序：</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">node /home/app/blogsearch/bin/www</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">或者进入目录在运行</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\"><span class=\"built_in\">cd</span> home/app/blogsearch/</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">node ./bin/www</span> </span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">【首次安装node app】不需要重新 npm init, 但是需要添加express库</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">npm install express</span></span><br><span class=\"line\"><span class=\"meta prompt_\"> </span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">node ./bin/www</span>  </span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">成功：</span></span><br><span class=\"line\">http://192.168.6.116:3001/appsearch?q=android</span><br><span class=\"line\"></span><br><span class=\"line\">如何常驻在后台运行？</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">NPM反代出来</span></span><br><span class=\"line\">https://query.carlzeng.top:3/appsearch?q=android</span><br><span class=\"line\">https://query.carlzeng.top:3/appsearch?q=iptv</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">添加matomo至模版</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 在模版中添加JS即可</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">[版本更新] docker中如何关闭某个node进程，重启，重新发布新版本</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">ps -falx | <span class=\"built_in\">head</span> -1; ps -falx | grep <span class=\"string\">&#x27;npm\\|node&#x27;</span></span></span><br><span class=\"line\">F   UID   PID  PPID PRI  NI    VSZ   RSS WCHAN  STAT TTY        TIME COMMAND</span><br><span class=\"line\">4     0   173   134  20   0   3324  1536 pipe_r S+   pts/2      0:00  \\_ grep npm\\|node</span><br><span class=\"line\">0     0    69     8  20   0 1145980 203676 do_epo Sl+ pts/1     7:32  \\_ node /home/app/blogsearch/bin/www</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">查到ppid为8，杀死进程；然后重启</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\"><span class=\"built_in\">kill</span> -9 8</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">node /home/app/blogsearch/bin/www</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Sample-for-node-js-refrence\"><a href=\"#Sample-for-node-js-refrence\" class=\"headerlink\" title=\"Sample for node.js refrence\"></a>Sample for node.js refrence</h2><p>见上方：相关内容</p>\n<p>URL：<a href=\"https://query.carlzeng.top:3/appsearch?q=node.js\">https://query.carlzeng.top:3/appsearch?q=node.js</a></p>\n<p>再比如: 最终替换掉hexo的全站检索功能(在配置文件中关闭 local_search: false)，展示如下：</p>\n<form action=\"https://query.carlzeng.top:3/appsearch?q=\" method=\"get\" target=\"_blank\">\n<div class=\"popup search-popup\">\n  <div class=\"search-header\">\n  <span class=\"search-icon\">\n    <i class=\"fa fa-search\"></i>\n  </span>\n  <div class=\"search-input-container\">\n    <input name=\"q\" autocomplete=\"off\" autocapitalize=\"off\" maxlength=\"28\" placeholder=\"搜索...\" spellcheck=\"false\" type=\"search\" class=\"search-input\">\n  </div>\n  <span class=\"popup-btn-close\" role=\"button\">\n    <i class=\"fa fa-times-circle\"></i>\n  </span>\n    </div>\n</div>\n</form>\n## CDN 发布\n\n<p>如上的地址不够优雅，用CDN回源地址加端口的方式可以让地址变优雅一点</p>\n<p>BlogCDN中新建一个网站，然后把CNAME指向到‘新网站’自动获取的CNAME（类似：@@@@.cdn.blogcdn.net），源站设置中，配置好自定的端口；这样地址就能变成下面这样</p>\n<p>比如：<a href=\"https://jp.carlzeng.top/appsearch?q=adsl\">https://jp.carlzeng.top/appsearch?q=adsl</a></p>\n<h1 id=\"版本更新Release-Notes\"><a href=\"#版本更新Release-Notes\" class=\"headerlink\" title=\"版本更新Release Notes\"></a>版本更新Release Notes</h1><h2 id=\"V0-0-3\"><a href=\"#V0-0-3\" class=\"headerlink\" title=\"V0.0.3\"></a>V0.0.3</h2><ul>\n<li>更新了模版，style.css updated</li>\n<li>增加暗黑模式，added darkmode</li>\n<li>把隐藏或加密的文章挪出搜索结果</li>\n</ul>\n<h2 id=\"V0-0-2\"><a href=\"#V0-0-2\" class=\"headerlink\" title=\"V0.0.2\"></a>V0.0.2</h2><ul>\n<li>更新了模版，添加[首页]及连接</li>\n<li>把内容缩略的部分，做更精准的首次match，展示首个包含关键字的特定内容范围</li>\n</ul>\n<h2 id=\"下一步\"><a href=\"#下一步\" class=\"headerlink\" title=\"下一步\"></a>下一步</h2><p>还需要写一个trigger，在每次hexo g 或者 hexo d的时候，将.db文件sync到服务器中，供flexsearch作为最新的搜索数据源；目前先手动方式 :-)</p>\n<h1 id=\"感想\"><a href=\"#感想\" class=\"headerlink\" title=\"感想\"></a>感想</h1><p>Node.js 真的爱了，好简洁的框架，可以定制做很多实际需求，对我来说，很容易上手。据听说服务的效率很高占用资源很低，还高并发。我将持续期待并关注这个app的实际表现…</p>\n<h2 id=\"相关内容跨站接口\"><a href=\"#相关内容跨站接口\" class=\"headerlink\" title=\"相关内容跨站接口\"></a>相关内容跨站接口</h2><p>服务器后端nodejs FlexSearch实现</p>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p><a href=\"https://tnickel.de/2020/12/21/2020-12-Adding-full-text-search-via-flexSearch-to-a-blog/\">Adding full text Search via FlexSearch to a Blog</a></p>\n","more":"<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>许多网站或博主都苦于站内搜索的功能缺陷，使用特定搜索引擎的搜索就得要忍耐特定搜索引擎收录文章的速度（搜索内容受局限于特定的旧版本），自带的搜索消耗太多资源，速度慢，html的静态站点无法使用数据库的搜索…..</p>\n<p>介绍flexsearch（这个可以轻易从<a href=\"https://c.carlzeng.top:3/web\">加速浏览器</a>中搜索获取最新版信息）不是本文的重点，Node.js的入门在我上一篇文章是重点：<a href=\"https://www.carlzeng.top/search?q=Node.js\">Node.js开发环境及应用实例</a></p>\n<p>本文主要分享Node.js + FlexSearch 实际应用在本站（hexo）中全文搜索实现，用于我在<a href=\"https://backuper.cnblogs.com/\">Carl Notes 博客园</a>中同步发布文章时“相关内容”章节的实现（iframe方法，由于博客园禁止了在文章中添加javascript代码，导致ajax跨域去cdn站点里面获取相关内容失败，这是一个巨坑，坑了我好2-3天）</p>\n<p>使用FlexSearch对于内容的搜索是很有帮助是它的强项，Hexo对于相关内容的实现也不错：用插件中的算法去比对我目前300多篇文章彼此之间的联系，关键字，权重等等。详细见 <a href=\"https://www.carlzeng.top/202309222344.html?highlight=hello+hexo\">Hello hexo</a>中关于<a href=\"https://www.carlzeng.top/202309222344.html?highlight=hello+hexo#%E7%9B%B8%E5%85%B3%E6%96%87%E7%AB%A0-related-posts-%E5%A6%82%E4%BD%95%E5%A2%9E%E5%8A%A0%E5%88%B010%E6%9D%A1%EF%BC%9F\">相关文章 related_posts 如何增加到10条？</a>的章节介绍</p>\n<p>但hexo（我目前的版本）在全站搜索的实现是潦草了，不知道最新版有没有改进‘全站检索‘</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo: 6.3.0                                                                                                </span><br><span class=\"line\">hexo-cli: 4.3.1        </span><br><span class=\"line\"><span class=\"comment\"># 我的hexo待更新啊。。。懒。。。新版吸引力不足。。。</span></span><br><span class=\"line\">node: 20.10.0 </span><br></pre></td></tr></table></figure>\n\n<p>目前版本的hexo是通过ajax请求把search.xml，比如这样的 <a href=\"https://hk.carlzeng.top/search.xml\">search.xml</a>下载到内存中，然后通过js来在本地浏览器搜索和匹配（优点：UI界面很好看）可是，可是我的文件截止目前为止已经3M了！</p>\n<p>可是这对于WEB太大了，我用最快的CDN线路，最快也要花费350ms+才能下载到本地，一般的cdn都要1s+这对于用户是很要命的。这是在方案级别上的缺陷。</p>\n<h1 id=\"怎么用\"><a href=\"#怎么用\" class=\"headerlink\" title=\"怎么用\"></a>怎么用</h1><p>使用了目前（2023年12月中旬）是最新版本的FlexSearch</p>\n<p>最简单的使用：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//申明三种情况的应用，从简单到复杂Index，Document和Worker；先理解最简单的Index</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;<span class=\"title class_\">Index</span>, <span class=\"title class_\">Document</span>, <span class=\"title class_\">Worker</span>&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;flexsearch&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//指定Index索引的参数，可以很复杂，先从默认最简单的开始</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> index = <span class=\"keyword\">new</span> <span class=\"title class_\">Index</span>(&#123;</span><br><span class=\"line\">\t<span class=\"attr\">tokenize</span>: <span class=\"string\">&quot;reverse&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">depth</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">\t<span class=\"attr\">minlength</span>: <span class=\"number\">3</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//添加源内容，比如多个文件，数据库。。。</span></span><br><span class=\"line\">index.<span class=\"title function_\">add</span>(post.<span class=\"property\">title</span>, post.<span class=\"property\">title</span> + post.<span class=\"property\">source</span> + post.<span class=\"property\">content</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//搜索，参数限定了11个结果</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> searchRes = index.<span class=\"title function_\">search</span>(req.<span class=\"property\">query</span>.<span class=\"property\">q</span>, <span class=\"number\">11</span>);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=node.js\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"600\"></iframe>\n\n<h1 id=\"实现方法-过程\"><a href=\"#实现方法-过程\" class=\"headerlink\" title=\"实现方法&#x2F;过程\"></a>实现方法&#x2F;过程</h1><p>基础学习建议实践走一下流程：<a href=\"https://expressjs.com/en/starter/installing.html\">https://expressjs.com/en/starter/installing.html</a><br>（在试一试列子<a href=\"https://expressjs.com/en/starter/examples.html%EF%BC%89\">https://expressjs.com/en/starter/examples.html）</a></p>\n<h2 id=\"Express-jade相关\"><a href=\"#Express-jade相关\" class=\"headerlink\" title=\"Express,  jade相关\"></a>Express,  jade相关</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#主程序文件app.<span class=\"property\">js</span>，文件内容节选：</span><br><span class=\"line\"><span class=\"keyword\">var</span> appSearchRouter = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./routes/appsearch&#x27;</span>); </span><br><span class=\"line\">#这里引用的新建的文件appserach.<span class=\"property\">js</span></span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"string\">&#x27;/appsearch&#x27;</span>, appSearchRouter); #这个注册appsearch可以按需修改名称</span><br><span class=\"line\"></span><br><span class=\"line\">#其他的文件内容都按默认的列子<span class=\"attr\">https</span>:<span class=\"comment\">//expressjs.com/en/starter/examples.html</span></span><br><span class=\"line\">#生成的默认的文件列表即可。文档很清晰，友好。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#appsearch.<span class=\"property\">js</span>文件内容<span class=\"title class_\">Express</span>,  jade相关：</span><br><span class=\"line\"><span class=\"keyword\">var</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> router = express.<span class=\"title class_\">Router</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">res.<span class=\"title function_\">render</span>(<span class=\"string\">&#x27;searchTemplate&#x27;</span>, &#123; <span class=\"attr\">searchResults</span>: arrSearchRes &#125;);</span><br><span class=\"line\">#对应下面的searchTemplate.<span class=\"property\">jade</span>文件内容：</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#然后在views目录下面添加searchTemplate.jade文件，文件内容：</span></span><br><span class=\"line\">doctype html</span><br><span class=\"line\">html</span><br><span class=\"line\">    head</span><br><span class=\"line\">        <span class=\"attr\">title</span>= title</span><br><span class=\"line\">        link(<span class=\"attr\">rel</span>=<span class=\"string\">&#x27;stylesheet&#x27;</span>, href=<span class=\"string\">&#x27;/stylesheets/style.css&#x27;</span>)</span><br><span class=\"line\">    body</span><br><span class=\"line\">        .popup.search-popup</span><br><span class=\"line\">            .search-result-container</span><br><span class=\"line\">                .search-stats 找到 <span class=\"comment\">#&#123;searchResults.length&#125; 个搜索结果</span></span><br><span class=\"line\">                hr</span><br><span class=\"line\">                ul.search-result-list</span><br><span class=\"line\">                    each result in searchResults</span><br><span class=\"line\">                        li</span><br><span class=\"line\">                            a(<span class=\"attr\">href</span>=result.doc.url, class=<span class=\"string\">&quot;search-result-title&quot;</span>, data-pjax-state=<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">                                <span class=\"attr\">mark.search-keyword</span>= result.doc.title</span><br><span class=\"line\">                            a(<span class=\"attr\">data-pjax-state</span>=<span class=\"string\">&quot;&quot;</span> href=result.doc.url)</span><br><span class=\"line\">                                <span class=\"attr\">p.search-result</span>= result.doc.subcontent</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"FlexSearch相关\"><a href=\"#FlexSearch相关\" class=\"headerlink\" title=\"FlexSearch相关\"></a>FlexSearch相关</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#appsearch.<span class=\"property\">js</span>文件内容中<span class=\"title class_\">FlexSearch</span>相关：</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;<span class=\"title class_\">Index</span>, <span class=\"title class_\">Document</span>, <span class=\"title class_\">Worker</span>&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;flexsearch&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//const document</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> index = <span class=\"keyword\">new</span> <span class=\"title class_\">Document</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">tokenize</span>: <span class=\"string\">&quot;reverse&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">minlength</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">    <span class=\"attr\">document</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">id</span>: <span class=\"string\">&quot;id&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">index</span>: [</span><br><span class=\"line\">            <span class=\"comment\">// &#123; 没必要用title在搜索一遍，即便效率极高</span></span><br><span class=\"line\">            <span class=\"comment\">//     field: &quot;title&quot;,</span></span><br><span class=\"line\">            <span class=\"comment\">//     tokenize: &quot;forward&quot;</span></span><br><span class=\"line\">            <span class=\"comment\">// &#125;,</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">field</span>: <span class=\"string\">&quot;content&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">context</span>: &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// depth: 2,</span></span><br><span class=\"line\">                    <span class=\"comment\">// resolution: 3</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">tokenize</span>: <span class=\"string\">&quot;reverse&quot;</span></span><br><span class=\"line\">            &#125;],</span><br><span class=\"line\">        <span class=\"attr\">store</span>: [<span class=\"string\">&quot;title&quot;</span>, <span class=\"string\">&quot;updated&quot;</span>, <span class=\"string\">&quot;date&quot;</span>, <span class=\"string\">&quot;source&quot;</span>, <span class=\"string\">&quot;content&quot;</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// load posts from a file 加载hexo的数据库文件</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> pages = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>).<span class=\"title function_\">readFileSync</span>(path.<span class=\"title function_\">join</span>(__dirname, <span class=\"string\">&#x27;../../blog/db.json&#x27;</span>)).<span class=\"title function_\">toString</span>()).<span class=\"property\">models</span>.<span class=\"property\">Post</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// add posts to the index</span></span><br><span class=\"line\">pages.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">post</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> idx = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"comment\">// index.add(post.title, post.title + post.source + post.content)</span></span><br><span class=\"line\">    index.<span class=\"title function_\">add</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">id</span>: post.<span class=\"property\">title</span>,</span><br><span class=\"line\">        <span class=\"attr\">title</span>: post.<span class=\"property\">title</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;title&quot;</span>: post.<span class=\"property\">title</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;updated&quot;</span>: post.<span class=\"property\">updated</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;date&quot;</span>: post.<span class=\"property\">date</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;source&quot;</span> : post.<span class=\"property\">source</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;related_posts&quot;</span>: post.<span class=\"property\">related_posts</span>,</span><br><span class=\"line\">        <span class=\"attr\">content</span>: post.<span class=\"property\">_content</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    idx ++;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arrSearchRes = index.<span class=\"title function_\">search</span>(req.<span class=\"property\">query</span>.<span class=\"property\">q</span>, &#123;</span><br><span class=\"line\">        <span class=\"attr\">limit</span>: <span class=\"number\">11</span>,</span><br><span class=\"line\">        <span class=\"attr\">enrich</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注意避坑事项1\"><a href=\"#注意避坑事项1\" class=\"headerlink\" title=\"注意避坑事项1\"></a>注意避坑事项1</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// create the index</span></span><br><span class=\"line\"><span class=\"comment\">// var FlexSearch = require(&quot;flexsearch&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">// var index = FlexSearch.create();</span></span><br></pre></td></tr></table></figure>\n\n<p>这是flexsearch的旧版本语法，Google了一圈，国内的（中文内容）很多例子都是这个旧版本的，旧版本是无法运行的，各种报错，连ChatGpt3.5都不会解释，问题出现在哪里了。（这告诉我们版本是多么重要的）</p>\n<h3 id=\"注意避坑事项2\"><a href=\"#注意避坑事项2\" class=\"headerlink\" title=\"注意避坑事项2\"></a>注意避坑事项2</h3><p>jade模版也是很好用的，缩紧语法。很简易地将HTML生成。制作过程中，也能很容易地使用转换工具，将现成的HTML转化为jade（或者Pug)的模版，比如：<a href=\"https://tool.fiaox.com/template-html-pug/\">https://tool.fiaox.com/template-html-pug/</a></p>\n<p>模版转化，模版转换<a href=\"https://tool.fiaox.com/template-html-pug/\">Html to Pug</a></p>\n<h2 id=\"添加CORS跨站支持\"><a href=\"#添加CORS跨站支持\" class=\"headerlink\" title=\"添加CORS跨站支持\"></a>添加CORS跨站支持</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res.<span class=\"title function_\">setHeader</span>(<span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>,<span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">res.<span class=\"title function_\">setHeader</span>(</span><br><span class=\"line\">    <span class=\"string\">&quot;Access-Control-Allow-Methods&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;PUT, GET, POST, DELETE, HEAD, PATCH&quot;</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Docker中Production发布\"><a href=\"#Docker中Production发布\" class=\"headerlink\" title=\"Docker中Production发布\"></a>Docker中Production发布</h1><p>Docker中发布是我首选项，高效简单易管理。</p>\n<p>发布文件列表：</p>\n<p>​\t复制所有文件夹除了node_modules</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">进入nodejs容器，启动bash（用于执行node程序们）</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">docker <span class=\"built_in\">exec</span> -it nodejs bash</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">直接运行node程序：</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">node /home/app/blogsearch/bin/www</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">或者进入目录在运行</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\"><span class=\"built_in\">cd</span> home/app/blogsearch/</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">node ./bin/www</span> </span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">【首次安装node app】不需要重新 npm init, 但是需要添加express库</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">npm install express</span></span><br><span class=\"line\"><span class=\"meta prompt_\"> </span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">node ./bin/www</span>  </span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">成功：</span></span><br><span class=\"line\">http://192.168.6.116:3001/appsearch?q=android</span><br><span class=\"line\"></span><br><span class=\"line\">如何常驻在后台运行？</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">NPM反代出来</span></span><br><span class=\"line\">https://query.carlzeng.top:3/appsearch?q=android</span><br><span class=\"line\">https://query.carlzeng.top:3/appsearch?q=iptv</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">添加matomo至模版</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># 在模版中添加JS即可</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">[版本更新] docker中如何关闭某个node进程，重启，重新发布新版本</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">ps -falx | <span class=\"built_in\">head</span> -1; ps -falx | grep <span class=\"string\">&#x27;npm\\|node&#x27;</span></span></span><br><span class=\"line\">F   UID   PID  PPID PRI  NI    VSZ   RSS WCHAN  STAT TTY        TIME COMMAND</span><br><span class=\"line\">4     0   173   134  20   0   3324  1536 pipe_r S+   pts/2      0:00  \\_ grep npm\\|node</span><br><span class=\"line\">0     0    69     8  20   0 1145980 203676 do_epo Sl+ pts/1     7:32  \\_ node /home/app/blogsearch/bin/www</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">查到ppid为8，杀死进程；然后重启</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\"><span class=\"built_in\">kill</span> -9 8</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">node /home/app/blogsearch/bin/www</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Sample-for-node-js-refrence\"><a href=\"#Sample-for-node-js-refrence\" class=\"headerlink\" title=\"Sample for node.js refrence\"></a>Sample for node.js refrence</h2><p>见上方：相关内容</p>\n<p>URL：<a href=\"https://query.carlzeng.top:3/appsearch?q=node.js\">https://query.carlzeng.top:3/appsearch?q=node.js</a></p>\n<p>再比如: 最终替换掉hexo的全站检索功能(在配置文件中关闭 local_search: false)，展示如下：</p>\n<form action=\"https://query.carlzeng.top:3/appsearch?q=\" method=\"get\" target=\"_blank\">\n<div class=\"popup search-popup\">\n  <div class=\"search-header\">\n  <span class=\"search-icon\">\n    <i class=\"fa fa-search\"></i>\n  </span>\n  <div class=\"search-input-container\">\n    <input name=\"q\" autocomplete=\"off\" autocapitalize=\"off\" maxlength=\"28\" placeholder=\"搜索...\" spellcheck=\"false\" type=\"search\" class=\"search-input\">\n  </div>\n  <span class=\"popup-btn-close\" role=\"button\">\n    <i class=\"fa fa-times-circle\"></i>\n  </span>\n    </div>\n</div>\n</form>\n## CDN 发布\n\n<p>如上的地址不够优雅，用CDN回源地址加端口的方式可以让地址变优雅一点</p>\n<p>BlogCDN中新建一个网站，然后把CNAME指向到‘新网站’自动获取的CNAME（类似：@@@@.cdn.blogcdn.net），源站设置中，配置好自定的端口；这样地址就能变成下面这样</p>\n<p>比如：<a href=\"https://jp.carlzeng.top/appsearch?q=adsl\">https://jp.carlzeng.top/appsearch?q=adsl</a></p>\n<h1 id=\"版本更新Release-Notes\"><a href=\"#版本更新Release-Notes\" class=\"headerlink\" title=\"版本更新Release Notes\"></a>版本更新Release Notes</h1><h2 id=\"V0-0-3\"><a href=\"#V0-0-3\" class=\"headerlink\" title=\"V0.0.3\"></a>V0.0.3</h2><ul>\n<li>更新了模版，style.css updated</li>\n<li>增加暗黑模式，added darkmode</li>\n<li>把隐藏或加密的文章挪出搜索结果</li>\n</ul>\n<h2 id=\"V0-0-2\"><a href=\"#V0-0-2\" class=\"headerlink\" title=\"V0.0.2\"></a>V0.0.2</h2><ul>\n<li>更新了模版，添加[首页]及连接</li>\n<li>把内容缩略的部分，做更精准的首次match，展示首个包含关键字的特定内容范围</li>\n</ul>\n<h2 id=\"下一步\"><a href=\"#下一步\" class=\"headerlink\" title=\"下一步\"></a>下一步</h2><p>还需要写一个trigger，在每次hexo g 或者 hexo d的时候，将.db文件sync到服务器中，供flexsearch作为最新的搜索数据源；目前先手动方式 :-)</p>\n<h1 id=\"感想\"><a href=\"#感想\" class=\"headerlink\" title=\"感想\"></a>感想</h1><p>Node.js 真的爱了，好简洁的框架，可以定制做很多实际需求，对我来说，很容易上手。据听说服务的效率很高占用资源很低，还高并发。我将持续期待并关注这个app的实际表现…</p>\n<h2 id=\"相关内容跨站接口\"><a href=\"#相关内容跨站接口\" class=\"headerlink\" title=\"相关内容跨站接口\"></a>相关内容跨站接口</h2><p>服务器后端nodejs FlexSearch实现</p>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p><a href=\"https://tnickel.de/2020/12/21/2020-12-Adding-full-text-search-via-flexSearch-to-a-blog/\">Adding full text Search via FlexSearch to a Blog</a></p>","categories":[{"name":"Node.js","path":"api/categories/Node.js.json"}],"tags":[{"name":"Javascript","path":"api/tags/Javascript.json"},{"name":"Node.js","path":"api/tags/Node.js.json"},{"name":"node","path":"api/tags/node.json"},{"name":"Debian","path":"api/tags/Debian.json"},{"name":"Linux","path":"api/tags/Linux.json"},{"name":"FlexSearch","path":"api/tags/FlexSearch.json"},{"name":"搜索","path":"api/tags/搜索.json"}]}