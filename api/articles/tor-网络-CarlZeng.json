{"title":"tor 网络 科学上网","slug":"tor-网络-CarlZeng","date":"2023-03-05T11:03:00.000Z","updated":"2023-11-27T08:50:03.392Z","comments":true,"path":"api/articles/tor-网络-CarlZeng.json","excerpt":"如何从Tor Network里面提取使用Socks5代理呢？How to use the socks5 proxy in Tor Network?","covers":null,"content":"<p>如何从Tor Network里面提取使用Socks5代理呢？How to use the socks5 proxy in Tor Network?</p>\n<!-- more -->\n<h1 id=\"方法-临时：使用在线的WEB端网页代理\"><a href=\"#方法-临时：使用在线的WEB端网页代理\" class=\"headerlink\" title=\"方法 临时：使用在线的WEB端网页代理\"></a>方法 临时：使用在线的WEB端网页代理</h1><p>网络代理：<a href=\"https://proxyium.com/zh-CN/\">https://proxyium.com/zh-CN/</a><br>临时的方案，可以实现暂时浏览需要网页或网站资源</p>\n<p>网页形式，给一个临时代理的页面预览效果。<br>比如：输入网址，显示出代理过后的网址对应内容</p>\n<p>据文档介绍Nginx可以实现代理服务器，<br>curl的界面形式 讲解<a href=\"https://www.cnblogs.com/yanjieli/p/15229907.html\">https://www.cnblogs.com/yanjieli/p/15229907.html</a></p>\n<h1 id=\"方法-1：Tor-Browser\"><a href=\"#方法-1：Tor-Browser\" class=\"headerlink\" title=\"方法 #1：Tor Browser\"></a>方法 #1：Tor Browser</h1><p>最简单直接的办法就是在电脑或手机中使用Tor Browser浏览器，这样可以直接使用到符合设计初衷的匿名浏览（同时也意味着*墙）。</p>\n<p>手机APP版指导手册：MOBILE TOR <a href=\"https://tb-manual.torproject.org/mobile-tor/#circumvention\">https://tb-manual.torproject.org/mobile-tor/#circumvention</a></p>\n<p>各种系统的电脑和手机版：<a href=\"https://www.torproject.org/zh-CN/download/\">下载 Tor 浏览器</a> </p>\n<p>以下步骤可以查看到Tor Browser中拓展出来的Socks5代理地址，从而用来配置在除了浏览器以外的应用程序中，来实现VPN的效果。</p>\n<ol>\n<li><p>打开Tor Browser，并等待其成功连接上Tor网络（这样就已实现匿名浏览的效果）</p>\n</li>\n<li><p>打开Tor Browser的设置首选项》连接，或者直接输入地址（并且回车）：about:preferences#connection</p>\n</li>\n<li><p>你需要在连接中选择 snowflake网桥（snowflake bridge）2023年3月，目前这种方式在天朝还是可以正在运作的（能撑多久，未知）</p>\n</li>\n<li><p>你需要找到一个合适的网桥，并连接成功。（需要耐心）</p>\n</li>\n<li><p>在该页面的最底部，找到‘高级选项’》查看Tor日志，页面会弹出一个新的小窗口，里面的日志信息如下（正常成功连接的时候）</p>\n</li>\n<li><ol>\n<li>2023-03-02 15:15:55.247 [NOTICE] New control connection opened from 127.0.0.1.<br>2023-03-02 15:15:55.248 [NOTICE] New control connection opened from 127.0.0.1.<br>2023-03-02 15:15:55.249 [NOTICE] DisableNetwork is set. Tor will not make or accept non-control network connections. Shutting down all existing connections.<br>2023-03-02 15:15:55.252 [NOTICE] Opening Socks listener on 127.0.0.1:9150<br>2023-03-02 15:15:55.252 [NOTICE] Opened Socks listener connection (ready) on 127.0.0.1:9150<br>2023-03-02 15:15:55.252 [WARN] Cannot find maximum file descriptor, assuming: 256<br>2023-03-02 15:15:56.265 [NOTICE] Bootstrapped 1% (conn_pt): Connecting to pluggable transport<br>2023-03-02 15:15:56.265 [NOTICE] Bootstrapped 2% (conn_done_pt): Connected to pluggable transport<br>2023-03-02 15:15:56.267 [NOTICE] Bootstrapped 10% (conn_done): Connected to a relay</li>\n</ol>\n</li>\n<li><p>注意观察这个日志中的 Opening Socks listener on 127.0.0.1:9150；这个就是我们要找的Socks5代理地址。</p>\n</li>\n</ol>\n<h1 id=\"方法-2：运行-tor\"><a href=\"#方法-2：运行-tor\" class=\"headerlink\" title=\"方法 #2：运行 tor\"></a>方法 #2：运行 tor</h1><p>这个方法需要更专业的计算机知识，以下已Mac OSX来举例，简单描述如下（当然首先得先有梯子*墙才能实现）：</p>\n<p>1.下载mac.zip</p>\n<p>　　我把它改名为：OnionVPNWithSpeedControl_mac.zip，解压缩后里面有我们需要用到的工具</p>\n<p>　　<a href=\"https://github.com/lunu-bounir/onion-vpn\">https://github.com/lunu-bounir/onion-vpn</a></p>\n<p>　　OnionVPNWithSpeedControl_mac.zip is came from above git of name onion-vpn</p>\n<p>　　这步有点奇葩，因为从Tor官方下载的最新版expert bunlde 中的 tor 是无法使用的，一运行就退出了，原因未知。已测试：tor-expert-bundle-12.0.3-macos-aarch64.tar.gz，非常尴尬：tor-expert-bundle-12.0.3-macos-aarch64 里面的tor是不能用的。。。</p>\n<p>2. 安装go语言环境</p>\n<p>　　具体步骤不详细描述了，<a href=\"https://go.dev/dl/\">https://go.dev/dl/</a> 写得非常详细，十分友好。</p>\n<p>3. 下载并编译<a href=\"https://github.com/keroserene/snowflake.git\">https://github.com/keroserene/snowflake.git</a></p>\n<p>　　git clone打开新的Terminal，切换到client目录下，执行</p>\n<p>go get<br>go build</p>\n<p>注意：默认状况下在天朝go get会卡死（我就是遇到这种情况了）报错误：dial tcp 142.251.42.241:443: i&#x2F;o timeout<br>这时需要先执行go env -w GOPROXY&#x3D;<a href=\"https://goproxy.cn/\">https://goproxy.cn</a><br>解决方案来源：<a href=\"https://blog.csdn.net/weixin_45178126/article/details/122097221\">golang 在下载依赖包的时候出现错误：dial tcp 142.251.42.241:443: i&#x2F;o timeout</a></p>\n<p>　　最后会在client目录下生成一个client的Unix可执行文件。</p>\n<p>【可选步骤】4. 自定配置torrc文件，加入已知特定的snowflake bridge</p>\n<p>　　在client目录下有一个默认的torrc文件，这个就是tor运行起来后，我们希望其遵循的配置文件，里面有默认的snowflake bridge</p>\n<p>5. 运行tor</p>\n<p>　　具体命令参考 […client % &#x2F;Users&#x2F;carl&#x2F;Downloads&#x2F;OnionVPNWithSpeedControl_mac&#x2F;assets&#x2F;tor -f torrc</p>\n<p>　　类似的日志参考如下：</p>\n<p>Mar 03 09:36:49.721 [notice] Tor 0.4.4.6 (git-2a8b789ea6f308d0) running on Darwin with Libevent 2.1.11-stable, OpenSSL 1.1.1i, Zlib 1.2.11, Liblzma N&#x2F;A, and Libzstd N&#x2F;A.<br>Mar 03 09:36:49.721 [notice] Tor can’t help you if you use it wrong! Learn how to be safe at <a href=\"https://www.torproject.org/download/download#warning\">https://www.torproject.org/download/download#warning</a><br>Mar 03 09:36:49.722 [notice] Read configuration file “&#x2F;Users&#x2F;carlzeng&#x2F;WebstormProjects&#x2F;snowflake&#x2F;client&#x2F;torrc”.<br>Mar 03 09:36:49.723 [warn] Path for DataDirectory (datadir) is relative and will resolve to &#x2F;Users&#x2F;carl&#x2F;WebstormProjects&#x2F;snowflake&#x2F;client&#x2F;datadir. Is this what you wanted?<br>Mar 03 09:36:49.724 [notice] Opening Socks listener on 127.0.0.1:0<br>Mar 03 09:36:49.724 [notice] Socks listener listening on port 62501.<br>Mar 03 09:36:49.724 [notice] Opened Socks listener on 127.0.0.1:62501<br>Mar 03 09:36:49.000 [warn] Cannot find maximum file descriptor, assuming: 256<br>Mar 03 09:36:49.000 [notice] Bootstrapped 0% (starting): Starting<br>Mar 03 09:36:49.000 [notice] Starting with guard context “bridges”<br>Mar 03 09:36:49.000 [notice] Delaying directory fetches: No running bridges<br>Mar 03 09:36:50.000 [notice] Bootstrapped 1% (conn_pt): Connecting to pluggable transport<br>Mar 03 09:36:50.000 [notice] Bootstrapped 2% (conn_done_pt): Connected to pluggable transport<br>Mar 03 09:36:50.000 [notice] Bootstrapped 10% (conn_done): Connected to a relay<br>Mar 03 09:36:56.000 [notice] Managed proxy “.&#x2F;client”: offer created<br>。。。。<br>Mar 03 09:41:57.000 [notice] Bootstrapped 100% (done): Done  </p>\n<p>　　慢慢等待1-5分钟，一直等到 Mar 03 09:41:57.000 [notice] Bootstrapped 100% (done): Done</p>\n<p>6. 配置应用程序，连接到Socks 127.0.0.1:62501 即可（根据具体的日志信息）</p>\n<p>【可选步骤】7. 检测连接状态：<a href=\"https://check.torproject.org/\">https://check.torproject.org/</a></p>\n<h1 id=\"方法-3：Clash-For-Window\"><a href=\"#方法-3：Clash-For-Window\" class=\"headerlink\" title=\"方法 #3：Clash For Window\"></a>方法 #3：Clash For Window</h1><p>具体请参见：<a href=\"/202310051715.html\">Clash for Windows 设置方法入门(适用于Windows+Mac+安卓)</a></p>\n","more":"<p>如何从Tor Network里面提取使用Socks5代理呢？How to use the socks5 proxy in Tor Network?</p>\n<!-- more -->\n<h1 id=\"方法-临时：使用在线的WEB端网页代理\"><a href=\"#方法-临时：使用在线的WEB端网页代理\" class=\"headerlink\" title=\"方法 临时：使用在线的WEB端网页代理\"></a>方法 临时：使用在线的WEB端网页代理</h1><p>网络代理：<a href=\"https://proxyium.com/zh-CN/\">https://proxyium.com/zh-CN/</a><br>临时的方案，可以实现暂时浏览需要网页或网站资源</p>\n<p>网页形式，给一个临时代理的页面预览效果。<br>比如：输入网址，显示出代理过后的网址对应内容</p>\n<p>据文档介绍Nginx可以实现代理服务器，<br>curl的界面形式 讲解<a href=\"https://www.cnblogs.com/yanjieli/p/15229907.html\">https://www.cnblogs.com/yanjieli/p/15229907.html</a></p>\n<h1 id=\"方法-1：Tor-Browser\"><a href=\"#方法-1：Tor-Browser\" class=\"headerlink\" title=\"方法 #1：Tor Browser\"></a>方法 #1：Tor Browser</h1><p>最简单直接的办法就是在电脑或手机中使用Tor Browser浏览器，这样可以直接使用到符合设计初衷的匿名浏览（同时也意味着*墙）。</p>\n<p>手机APP版指导手册：MOBILE TOR <a href=\"https://tb-manual.torproject.org/mobile-tor/#circumvention\">https://tb-manual.torproject.org/mobile-tor/#circumvention</a></p>\n<p>各种系统的电脑和手机版：<a href=\"https://www.torproject.org/zh-CN/download/\">下载 Tor 浏览器</a> </p>\n<p>以下步骤可以查看到Tor Browser中拓展出来的Socks5代理地址，从而用来配置在除了浏览器以外的应用程序中，来实现VPN的效果。</p>\n<ol>\n<li><p>打开Tor Browser，并等待其成功连接上Tor网络（这样就已实现匿名浏览的效果）</p>\n</li>\n<li><p>打开Tor Browser的设置首选项》连接，或者直接输入地址（并且回车）：about:preferences#connection</p>\n</li>\n<li><p>你需要在连接中选择 snowflake网桥（snowflake bridge）2023年3月，目前这种方式在天朝还是可以正在运作的（能撑多久，未知）</p>\n</li>\n<li><p>你需要找到一个合适的网桥，并连接成功。（需要耐心）</p>\n</li>\n<li><p>在该页面的最底部，找到‘高级选项’》查看Tor日志，页面会弹出一个新的小窗口，里面的日志信息如下（正常成功连接的时候）</p>\n</li>\n<li><ol>\n<li>2023-03-02 15:15:55.247 [NOTICE] New control connection opened from 127.0.0.1.<br>2023-03-02 15:15:55.248 [NOTICE] New control connection opened from 127.0.0.1.<br>2023-03-02 15:15:55.249 [NOTICE] DisableNetwork is set. Tor will not make or accept non-control network connections. Shutting down all existing connections.<br>2023-03-02 15:15:55.252 [NOTICE] Opening Socks listener on 127.0.0.1:9150<br>2023-03-02 15:15:55.252 [NOTICE] Opened Socks listener connection (ready) on 127.0.0.1:9150<br>2023-03-02 15:15:55.252 [WARN] Cannot find maximum file descriptor, assuming: 256<br>2023-03-02 15:15:56.265 [NOTICE] Bootstrapped 1% (conn_pt): Connecting to pluggable transport<br>2023-03-02 15:15:56.265 [NOTICE] Bootstrapped 2% (conn_done_pt): Connected to pluggable transport<br>2023-03-02 15:15:56.267 [NOTICE] Bootstrapped 10% (conn_done): Connected to a relay</li>\n</ol>\n</li>\n<li><p>注意观察这个日志中的 Opening Socks listener on 127.0.0.1:9150；这个就是我们要找的Socks5代理地址。</p>\n</li>\n</ol>\n<h1 id=\"方法-2：运行-tor\"><a href=\"#方法-2：运行-tor\" class=\"headerlink\" title=\"方法 #2：运行 tor\"></a>方法 #2：运行 tor</h1><p>这个方法需要更专业的计算机知识，以下已Mac OSX来举例，简单描述如下（当然首先得先有梯子*墙才能实现）：</p>\n<p>1.下载mac.zip</p>\n<p>　　我把它改名为：OnionVPNWithSpeedControl_mac.zip，解压缩后里面有我们需要用到的工具</p>\n<p>　　<a href=\"https://github.com/lunu-bounir/onion-vpn\">https://github.com/lunu-bounir/onion-vpn</a></p>\n<p>　　OnionVPNWithSpeedControl_mac.zip is came from above git of name onion-vpn</p>\n<p>　　这步有点奇葩，因为从Tor官方下载的最新版expert bunlde 中的 tor 是无法使用的，一运行就退出了，原因未知。已测试：tor-expert-bundle-12.0.3-macos-aarch64.tar.gz，非常尴尬：tor-expert-bundle-12.0.3-macos-aarch64 里面的tor是不能用的。。。</p>\n<p>2. 安装go语言环境</p>\n<p>　　具体步骤不详细描述了，<a href=\"https://go.dev/dl/\">https://go.dev/dl/</a> 写得非常详细，十分友好。</p>\n<p>3. 下载并编译<a href=\"https://github.com/keroserene/snowflake.git\">https://github.com/keroserene/snowflake.git</a></p>\n<p>　　git clone打开新的Terminal，切换到client目录下，执行</p>\n<p>go get<br>go build</p>\n<p>注意：默认状况下在天朝go get会卡死（我就是遇到这种情况了）报错误：dial tcp 142.251.42.241:443: i&#x2F;o timeout<br>这时需要先执行go env -w GOPROXY&#x3D;<a href=\"https://goproxy.cn/\">https://goproxy.cn</a><br>解决方案来源：<a href=\"https://blog.csdn.net/weixin_45178126/article/details/122097221\">golang 在下载依赖包的时候出现错误：dial tcp 142.251.42.241:443: i&#x2F;o timeout</a></p>\n<p>　　最后会在client目录下生成一个client的Unix可执行文件。</p>\n<p>【可选步骤】4. 自定配置torrc文件，加入已知特定的snowflake bridge</p>\n<p>　　在client目录下有一个默认的torrc文件，这个就是tor运行起来后，我们希望其遵循的配置文件，里面有默认的snowflake bridge</p>\n<p>5. 运行tor</p>\n<p>　　具体命令参考 […client % &#x2F;Users&#x2F;carl&#x2F;Downloads&#x2F;OnionVPNWithSpeedControl_mac&#x2F;assets&#x2F;tor -f torrc</p>\n<p>　　类似的日志参考如下：</p>\n<p>Mar 03 09:36:49.721 [notice] Tor 0.4.4.6 (git-2a8b789ea6f308d0) running on Darwin with Libevent 2.1.11-stable, OpenSSL 1.1.1i, Zlib 1.2.11, Liblzma N&#x2F;A, and Libzstd N&#x2F;A.<br>Mar 03 09:36:49.721 [notice] Tor can’t help you if you use it wrong! Learn how to be safe at <a href=\"https://www.torproject.org/download/download#warning\">https://www.torproject.org/download/download#warning</a><br>Mar 03 09:36:49.722 [notice] Read configuration file “&#x2F;Users&#x2F;carlzeng&#x2F;WebstormProjects&#x2F;snowflake&#x2F;client&#x2F;torrc”.<br>Mar 03 09:36:49.723 [warn] Path for DataDirectory (datadir) is relative and will resolve to &#x2F;Users&#x2F;carl&#x2F;WebstormProjects&#x2F;snowflake&#x2F;client&#x2F;datadir. Is this what you wanted?<br>Mar 03 09:36:49.724 [notice] Opening Socks listener on 127.0.0.1:0<br>Mar 03 09:36:49.724 [notice] Socks listener listening on port 62501.<br>Mar 03 09:36:49.724 [notice] Opened Socks listener on 127.0.0.1:62501<br>Mar 03 09:36:49.000 [warn] Cannot find maximum file descriptor, assuming: 256<br>Mar 03 09:36:49.000 [notice] Bootstrapped 0% (starting): Starting<br>Mar 03 09:36:49.000 [notice] Starting with guard context “bridges”<br>Mar 03 09:36:49.000 [notice] Delaying directory fetches: No running bridges<br>Mar 03 09:36:50.000 [notice] Bootstrapped 1% (conn_pt): Connecting to pluggable transport<br>Mar 03 09:36:50.000 [notice] Bootstrapped 2% (conn_done_pt): Connected to pluggable transport<br>Mar 03 09:36:50.000 [notice] Bootstrapped 10% (conn_done): Connected to a relay<br>Mar 03 09:36:56.000 [notice] Managed proxy “.&#x2F;client”: offer created<br>。。。。<br>Mar 03 09:41:57.000 [notice] Bootstrapped 100% (done): Done  </p>\n<p>　　慢慢等待1-5分钟，一直等到 Mar 03 09:41:57.000 [notice] Bootstrapped 100% (done): Done</p>\n<p>6. 配置应用程序，连接到Socks 127.0.0.1:62501 即可（根据具体的日志信息）</p>\n<p>【可选步骤】7. 检测连接状态：<a href=\"https://check.torproject.org/\">https://check.torproject.org/</a></p>\n<h1 id=\"方法-3：Clash-For-Window\"><a href=\"#方法-3：Clash-For-Window\" class=\"headerlink\" title=\"方法 #3：Clash For Window\"></a>方法 #3：Clash For Window</h1><p>具体请参见：<a href=\"/202310051715.html\">Clash for Windows 设置方法入门(适用于Windows+Mac+安卓)</a></p>\n","categories":[{"name":"墙","path":"api/categories/墙.json"}],"tags":[{"name":"转载","path":"api/tags/转载.json"},{"name":"墙","path":"api/tags/墙.json"},{"name":"Mac","path":"api/tags/Mac.json"},{"name":"Windows","path":"api/tags/Windows.json"},{"name":"科学上网","path":"api/tags/科学上网.json"},{"name":"tor","path":"api/tags/tor.json"}]}