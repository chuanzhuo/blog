{"title":"听音乐(音乐播放器)","slug":"音乐播放器-听音乐","date":"2023-02-20T03:39:00.000Z","updated":"2023-12-30T06:14:28.665Z","comments":true,"path":"api/articles/音乐播放器-听音乐.json","excerpt":"背景下载，听音乐，音乐APP等等个人自用分享2023年12月更新： docker一条命令搭建在线音乐播放器mmplayer打开使用mmPlayer 在线音乐播放器","covers":null,"content":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>下载，听音乐，音乐APP等等个人自用分享</p>\n<div class=\"note success\"><p>2023年12月更新： docker一条命令搭建在线音乐播放器mmplayer</p>\n<p>打开使用<a href=\"https://c.carlzeng.top:4443/mp3\">mmPlayer 在线音乐播放器</a></p>\n</div>\n\n<span id=\"more\"></span>\n\n<h1 id=\"在线播放器预览\"><a href=\"#在线播放器预览\" class=\"headerlink\" title=\"在线播放器预览\"></a>在线播放器预览</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://c.carlzeng.top:3/mp3\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n\n\n<h2 id=\"下载后转化为mp3\"><a href=\"#下载后转化为mp3\" class=\"headerlink\" title=\"下载后转化为mp3\"></a>下载后转化为mp3</h2><p>更强大的下载音频参加：<a href=\"https://www.carlzeng.top/202211220913.html\">如何使用youtube-dl下载Youtube上面的音视频，油管视频</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ffmpeg -i &quot;file1.mp4&quot; &quot;file2.mp3&quot;</span><br></pre></td></tr></table></figure>\n\n<p>【待实践】有一个有趣的项目：<br><a href=\"https://github.com/injahow/meting-api\">https://github.com/injahow/meting-api</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">API-Demo:</span><br><span class=\"line\"></span><br><span class=\"line\">https://api.injahow.cn/meting/?type=url&amp;id=416892104</span><br><span class=\"line\">https://api.injahow.cn/meting/?type=song&amp;id=591321</span><br><span class=\"line\">https://api.injahow.cn/meting/?type=playlist&amp;id=2619366284</span><br><span class=\"line\">APlayer-Demo:</span><br><span class=\"line\"></span><br><span class=\"line\">https://injahow.github.io/meting-api/</span><br><span class=\"line\">https://injahow.github.io/meting-api/?id=2904749230</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>直接输入网易音乐的ID，就可以获取MP3文件，可直接播放；<br><a href=\"https://api.injahow.cn/meting/?type=url&id=30841838\">https://api.injahow.cn/meting/?type=url&amp;id=30841838</a><br>    免费歌曲<br><a href=\"https://api.injahow.cn/meting/?type=url&id=157101\">https://api.injahow.cn/meting/?type=url&amp;id=157101</a><br>    收费歌曲30秒免费播放时长</p>\n<hr>\n<p>2023年8月更新</p>\n<p>安卓手机用户，有个APP目前还很好用的：<a href=\"https://bodian.kuwo.cn/\">波点音乐</a></p>\n<p>bodian.kuwo.com 厉害了酷我，听说是用视频的形式绕开部分音乐版权blabla..<br>状态：已测试试用</p>\n<hr>\n<h1 id=\"给-Listen-1-Chrome-版添加下载功能-版本2-27-0\"><a href=\"#给-Listen-1-Chrome-版添加下载功能-版本2-27-0\" class=\"headerlink\" title=\"给 Listen 1 Chrome 版添加下载功能 版本2.27.0\"></a>给 Listen 1 Chrome 版添加下载功能 版本2.27.0</h1><p>Listen 1 是一个非常牛逼的开源音乐播放器，就像作者说的，现在想听一首歌，因为版权的原因，要在不同播放器进行来回切换，这会很让人抓狂，Listen 1 可以很完美的帮你解决这个问题。<br>GitHub 主页 <a href=\"github.com/listen1\">github.com&#x2F;listen1</a><br>下载地址 <a href=\"listen1.github.io/listen1/\">listen1.github.io&#x2F;listen1&#x2F;</a><br>软件提供了多个平台的安装版本，这里以Chrome讲解。</p>\n<h2 id=\"具体步骤\"><a href=\"#具体步骤\" class=\"headerlink\" title=\"具体步骤\"></a>具体步骤</h2><p>具体要修改的地方有两处 第一处在 listen1.html #1906行</p>\n<p>修改</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">ng</span>\\<span class=\"attr\">-if</span>\\=<span class=\"string\">&quot;currentPlaying.source === &#x27;xiami&#x27;&quot;</span> <span class=\"attr\">style</span>\\=<span class=\"string\">&quot;color: orange; font-size: medium&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>⚠️ &lt;/span</span><br><span class=\"line\">    &gt;&#123;&#123; currentPlaying.title &#125;&#125;</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">为</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">ng</span>\\<span class=\"attr\">-if</span>\\=<span class=\"string\">&quot;currentPlaying.source === &#x27;xiami&#x27;&quot;</span> <span class=\"attr\">style</span>\\=<span class=\"string\">&quot;color: orange; font-size: medium&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>⚠️ &lt;/span</span><br><span class=\"line\">    &gt;&#123;&#123; currentPlaying.title &#125;&#125; <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;download\\_music&quot;</span> <span class=\"attr\">download</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;title ng-binding&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;\\_blank&quot;</span>&gt;</span>下载<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>这里我增加了 target 新窗口打开，并且把原作者的 download 设置为空，因为安全的原因所以跨域这个问题无解。这样的设置的不足就是无法自动保存歌曲名称，需要手动修改保存的歌曲名称。</p>\n<p>第二处在 js&#x2F;loweb.js #396行 修改</p>\n<p>Promise.all(getUrlPromises)<br>    .then(playerFailCallback)<br>    .catch((response) &#x3D;&gt; {<br>    playerSuccessCallback(response);<br>    });</p>\n<p>为</p>\n<p>Promise.all(getUrlPromises)<br>    .then(playerFailCallback)<br>    .catch((response) &#x3D;&gt; {<br>    button = document.getElementById(‘download_music’);<br>    button.href = sound.url;<br>    playerSuccessCallback(response);<br>    });</p>\n<p>这两处修改好就完成了。</p>\n<p>安装方法：Chrome 因为安全原因禁止非Chrome商店的链接安装，你需要把listen1_chrome_extension-2.27.0.zip文件下载到本地，然后解压缩完成上面2步骤的操作。打开 chrome:&#x2F;&#x2F;extensions&#x2F; 页面，直接把 .crx 文件拖拽到浏览器内进行安装。</p>\n<h3 id=\"具体的Chrome-生成-crx步骤\"><a href=\"#具体的Chrome-生成-crx步骤\" class=\"headerlink\" title=\"具体的Chrome 生成.crx步骤\"></a>具体的Chrome 生成.crx步骤</h3><p>1. Chrome浏览器打开chrome:&#x2F;&#x2F;extensions&#x2F;</p>\n<p>2. 右上角，开启Developer mode</p>\n<p>3. 点三个按钮中间那个：Pack extension</p>\n<p>4. 选取你解压后的文件夹（默认文件夹名：listen1_chrome_extension-2.27.0）也就是在这个文件夹修改上面的两个文件</p>\n<p>5. 点 Pack extension， 即生成2个文件：listen1_chrome_extension-2.27.0.crx 和 listen1_chrome_extension-2.27.0.pem</p>\n<p>6. 我们拖拽那个.crx文件到浏览器内(chrome:&#x2F;&#x2F;extensions&#x2F;)进行安装。</p>\n<h2 id=\"如何打包生成Firefox插件版\"><a href=\"#如何打包生成Firefox插件版\" class=\"headerlink\" title=\"如何打包生成Firefox插件版\"></a>如何打包生成Firefox插件版</h2><p>（1） 首先到github下载相关代码<a href=\"https://github.com/listen1/listen1/_chrome/_extension\">https://github.com/listen1/listen1\\_chrome\\_extension</a><br>（2）下载后，解压到文件夹，打开文件夹，删除manifest.json文件，将manifest_firefox.json重命名为manifest.json<br>（3）进入命令行界面（快捷键 win+r， Mac：terminal），进入解压后的目录：cd listen1_chrome_extension-2.10.0 , 执行 zip -r ..&#x2F;listen1.xpi * ，完成后可在此目录上级找到listen1.xpi</p>\n<p>zip -r ..&#x2F;listen1.xpi *</p>\n<p>（4）(需要使用<a href=\"https://www.mozilla.org/en-US/firefox/developer/\">FireFox的开发版Firefox Browser Developer Edition</a>, 测试时间2023年2月）Firefox页面地址栏输入：about:config , 不管提示啥，点确定就行，咋搜索首选项名称输入：xpinstall.signatures.required ，将此选项切换为 false</p>\n<p>（5）进入附加组件-扩展-管理您的扩展-设置-从文件安装附加组件，选择刚刚打包好的 .xpi 文件（默认名：listen1.xpi），添加。</p>\n<p>安装完成可以使用了，目前下载的功能仍然在测试当中，期待进一步完善。</p>\n<p>不管如何，安装完这个Chrome或者Firefox插件以后，我们都可以使用浏览器的调试工具 &gt;  Network标签下的Media来查看正在播放的媒体文件(MP3，FLAC等)</p>\n<p>给 Listen 1 Chrome 版添加下载功能 版本2.27.0<br>参考文档：</p>\n<p>作者：ttys000<br>链接：<a href=\"https://juejin.cn/post/6878428772249370631\">https://juejin.cn/post/6878428772249370631</a><br>来源：稀土掘金<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>\n<p>————————————————<br>版权声明：本文为CSDN博主「onebai」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href=\"https://blog.csdn.net/weixin/_40562999/article/details/108943445\">https://blog.csdn.net/weixin\\_40562999/article/details/108943445</a></p>\n<hr>\n<h1 id=\"docker一条命令搭建在线音乐播放器mmplayer\"><a href=\"#docker一条命令搭建在线音乐播放器mmplayer\" class=\"headerlink\" title=\"docker一条命令搭建在线音乐播放器mmplayer\"></a>docker一条命令搭建在线音乐播放器mmplayer</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name mmPlayer --restart always -dit -p 8300:80 yaonew/mmplayer</span><br></pre></td></tr></table></figure>\n\n<p>提供试用：<a href=\"https://c.carlzeng.top:4443/mp3\">https://c.carlzeng.top:4443/mp3</a></p>\n<ol>\n<li>打开<a href=\"https://c.carlzeng.top:4443/mp3\">mmPlayer 在线音乐播放器网址</a></li>\n<li>点击：“搜索”按钮</li>\n<li>输入要搜索的音乐名称或歌手名字</li>\n<li>鼠标放到搜索结果列表中，会出现播放按钮，点击播放；或者下载</li>\n</ol>\n<p>来源：<a href=\"https://hub.docker.com/r/yaonew/mmplayer\">https://hub.docker.com/r/yaonew/mmplayer</a></p>\n<h2 id=\"配置【可选】\"><a href=\"#配置【可选】\" class=\"headerlink\" title=\"配置【可选】\"></a>配置【可选】</h2><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name mmPlayer --restart always -dit -p 8300:80 -v ./index.html:/app/dist/index.html -v ./prompt.html:/app/dist/prompt.html yaonew/mmplayer</span><br></pre></td></tr></table></figure>\n\n<p>切换到docker-compose</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&quot;3&quot;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">    <span class=\"attr\">mmplayer:</span></span><br><span class=\"line\">        <span class=\"attr\">container_name:</span> <span class=\"string\">mmPlayer</span></span><br><span class=\"line\">        <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">        <span class=\"attr\">stdin_open:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">tty:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"number\">8300</span><span class=\"string\">:80</span></span><br><span class=\"line\">        <span class=\"attr\">volumes:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">./index.html:/app/dist/index.html</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">./prompt.html:/app/dist/prompt.html</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">./favicon.ico:/app/dist/favicon.ico</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">yaonew/mmplayer</span></span><br></pre></td></tr></table></figure>\n\n<p>刚开始，docker-compose启动后，本地的8300端口无法访问。</p>\n<p>docker stop mmPlayer</p>\n<p>docker rm mmPlayer</p>\n<p>然后重新试几次，就好了 ：-）</p>\n<p>开放防火墙端口，映射出主页</p>\n<h1 id=\"TODO下一步\"><a href=\"#TODO下一步\" class=\"headerlink\" title=\"TODO下一步\"></a>TODO下一步</h1><p>整合进node.js的appsearch</p>\n<p>不要重新搞一个docker容器了，整合在一起，还有开启的sh来，自动执行，简直太香了。</p>\n<h2 id=\"感谢列表\"><a href=\"#感谢列表\" class=\"headerlink\" title=\"感谢列表\"></a>感谢列表</h2><p><a href=\"https://panda995.xyz/network/3878.html\">NAS可用音乐播放器！在线播放、歌词显示、歌单同步都有，这款容器太强大了</a>\t</p>\n<h2 id=\"遗憾点\"><a href=\"#遗憾点\" class=\"headerlink\" title=\"遗憾点\"></a>遗憾点</h2><p>这是定位PC端的听音乐。无法分享音乐，比如想要分享特定喜欢的歌曲给朋友；无法生成一个长久的链接。</p>\n<p>小伙伴有没有知道基于<a href=\"https://github.com/Binaryify/NeteaseCloudMusicApi\">NeteaseCloudMusicApi</a>的类似大佬这个，可以分享出一个链接（带图片和播放功能）的docker部署网页版音乐播放器？留言告诉我好不好？</p>\n","more":"<h1 id=\"在线播放器预览\"><a href=\"#在线播放器预览\" class=\"headerlink\" title=\"在线播放器预览\"></a>在线播放器预览</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://c.carlzeng.top:3/mp3\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n\n\n<h2 id=\"下载后转化为mp3\"><a href=\"#下载后转化为mp3\" class=\"headerlink\" title=\"下载后转化为mp3\"></a>下载后转化为mp3</h2><p>更强大的下载音频参加：<a href=\"https://www.carlzeng.top/202211220913.html\">如何使用youtube-dl下载Youtube上面的音视频，油管视频</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ffmpeg -i &quot;file1.mp4&quot; &quot;file2.mp3&quot;</span><br></pre></td></tr></table></figure>\n\n<p>【待实践】有一个有趣的项目：<br><a href=\"https://github.com/injahow/meting-api\">https://github.com/injahow/meting-api</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">API-Demo:</span><br><span class=\"line\"></span><br><span class=\"line\">https://api.injahow.cn/meting/?type=url&amp;id=416892104</span><br><span class=\"line\">https://api.injahow.cn/meting/?type=song&amp;id=591321</span><br><span class=\"line\">https://api.injahow.cn/meting/?type=playlist&amp;id=2619366284</span><br><span class=\"line\">APlayer-Demo:</span><br><span class=\"line\"></span><br><span class=\"line\">https://injahow.github.io/meting-api/</span><br><span class=\"line\">https://injahow.github.io/meting-api/?id=2904749230</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>直接输入网易音乐的ID，就可以获取MP3文件，可直接播放；<br><a href=\"https://api.injahow.cn/meting/?type=url&id=30841838\">https://api.injahow.cn/meting/?type=url&amp;id=30841838</a><br>    免费歌曲<br><a href=\"https://api.injahow.cn/meting/?type=url&id=157101\">https://api.injahow.cn/meting/?type=url&amp;id=157101</a><br>    收费歌曲30秒免费播放时长</p>\n<hr>\n<p>2023年8月更新</p>\n<p>安卓手机用户，有个APP目前还很好用的：<a href=\"https://bodian.kuwo.cn/\">波点音乐</a></p>\n<p>bodian.kuwo.com 厉害了酷我，听说是用视频的形式绕开部分音乐版权blabla..<br>状态：已测试试用</p>\n<hr>\n<h1 id=\"给-Listen-1-Chrome-版添加下载功能-版本2-27-0\"><a href=\"#给-Listen-1-Chrome-版添加下载功能-版本2-27-0\" class=\"headerlink\" title=\"给 Listen 1 Chrome 版添加下载功能 版本2.27.0\"></a>给 Listen 1 Chrome 版添加下载功能 版本2.27.0</h1><p>Listen 1 是一个非常牛逼的开源音乐播放器，就像作者说的，现在想听一首歌，因为版权的原因，要在不同播放器进行来回切换，这会很让人抓狂，Listen 1 可以很完美的帮你解决这个问题。<br>GitHub 主页 <a href=\"github.com/listen1\">github.com&#x2F;listen1</a><br>下载地址 <a href=\"listen1.github.io/listen1/\">listen1.github.io&#x2F;listen1&#x2F;</a><br>软件提供了多个平台的安装版本，这里以Chrome讲解。</p>\n<h2 id=\"具体步骤\"><a href=\"#具体步骤\" class=\"headerlink\" title=\"具体步骤\"></a>具体步骤</h2><p>具体要修改的地方有两处 第一处在 listen1.html #1906行</p>\n<p>修改</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">ng</span>\\<span class=\"attr\">-if</span>\\=<span class=\"string\">&quot;currentPlaying.source === &#x27;xiami&#x27;&quot;</span> <span class=\"attr\">style</span>\\=<span class=\"string\">&quot;color: orange; font-size: medium&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>⚠️ &lt;/span</span><br><span class=\"line\">    &gt;&#123;&#123; currentPlaying.title &#125;&#125;</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">为</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">ng</span>\\<span class=\"attr\">-if</span>\\=<span class=\"string\">&quot;currentPlaying.source === &#x27;xiami&#x27;&quot;</span> <span class=\"attr\">style</span>\\=<span class=\"string\">&quot;color: orange; font-size: medium&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>⚠️ &lt;/span</span><br><span class=\"line\">    &gt;&#123;&#123; currentPlaying.title &#125;&#125; <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;download\\_music&quot;</span> <span class=\"attr\">download</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;title ng-binding&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;\\_blank&quot;</span>&gt;</span>下载<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>这里我增加了 target 新窗口打开，并且把原作者的 download 设置为空，因为安全的原因所以跨域这个问题无解。这样的设置的不足就是无法自动保存歌曲名称，需要手动修改保存的歌曲名称。</p>\n<p>第二处在 js&#x2F;loweb.js #396行 修改</p>\n<p>Promise.all(getUrlPromises)<br>    .then(playerFailCallback)<br>    .catch((response) &#x3D;&gt; {<br>    playerSuccessCallback(response);<br>    });</p>\n<p>为</p>\n<p>Promise.all(getUrlPromises)<br>    .then(playerFailCallback)<br>    .catch((response) &#x3D;&gt; {<br>    button = document.getElementById(‘download_music’);<br>    button.href = sound.url;<br>    playerSuccessCallback(response);<br>    });</p>\n<p>这两处修改好就完成了。</p>\n<p>安装方法：Chrome 因为安全原因禁止非Chrome商店的链接安装，你需要把listen1_chrome_extension-2.27.0.zip文件下载到本地，然后解压缩完成上面2步骤的操作。打开 chrome:&#x2F;&#x2F;extensions&#x2F; 页面，直接把 .crx 文件拖拽到浏览器内进行安装。</p>\n<h3 id=\"具体的Chrome-生成-crx步骤\"><a href=\"#具体的Chrome-生成-crx步骤\" class=\"headerlink\" title=\"具体的Chrome 生成.crx步骤\"></a>具体的Chrome 生成.crx步骤</h3><p>1. Chrome浏览器打开chrome:&#x2F;&#x2F;extensions&#x2F;</p>\n<p>2. 右上角，开启Developer mode</p>\n<p>3. 点三个按钮中间那个：Pack extension</p>\n<p>4. 选取你解压后的文件夹（默认文件夹名：listen1_chrome_extension-2.27.0）也就是在这个文件夹修改上面的两个文件</p>\n<p>5. 点 Pack extension， 即生成2个文件：listen1_chrome_extension-2.27.0.crx 和 listen1_chrome_extension-2.27.0.pem</p>\n<p>6. 我们拖拽那个.crx文件到浏览器内(chrome:&#x2F;&#x2F;extensions&#x2F;)进行安装。</p>\n<h2 id=\"如何打包生成Firefox插件版\"><a href=\"#如何打包生成Firefox插件版\" class=\"headerlink\" title=\"如何打包生成Firefox插件版\"></a>如何打包生成Firefox插件版</h2><p>（1） 首先到github下载相关代码<a href=\"https://github.com/listen1/listen1/_chrome/_extension\">https://github.com/listen1/listen1\\_chrome\\_extension</a><br>（2）下载后，解压到文件夹，打开文件夹，删除manifest.json文件，将manifest_firefox.json重命名为manifest.json<br>（3）进入命令行界面（快捷键 win+r， Mac：terminal），进入解压后的目录：cd listen1_chrome_extension-2.10.0 , 执行 zip -r ..&#x2F;listen1.xpi * ，完成后可在此目录上级找到listen1.xpi</p>\n<p>zip -r ..&#x2F;listen1.xpi *</p>\n<p>（4）(需要使用<a href=\"https://www.mozilla.org/en-US/firefox/developer/\">FireFox的开发版Firefox Browser Developer Edition</a>, 测试时间2023年2月）Firefox页面地址栏输入：about:config , 不管提示啥，点确定就行，咋搜索首选项名称输入：xpinstall.signatures.required ，将此选项切换为 false</p>\n<p>（5）进入附加组件-扩展-管理您的扩展-设置-从文件安装附加组件，选择刚刚打包好的 .xpi 文件（默认名：listen1.xpi），添加。</p>\n<p>安装完成可以使用了，目前下载的功能仍然在测试当中，期待进一步完善。</p>\n<p>不管如何，安装完这个Chrome或者Firefox插件以后，我们都可以使用浏览器的调试工具 &gt;  Network标签下的Media来查看正在播放的媒体文件(MP3，FLAC等)</p>\n<p>给 Listen 1 Chrome 版添加下载功能 版本2.27.0<br>参考文档：</p>\n<p>作者：ttys000<br>链接：<a href=\"https://juejin.cn/post/6878428772249370631\">https://juejin.cn/post/6878428772249370631</a><br>来源：稀土掘金<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>\n<p>————————————————<br>版权声明：本文为CSDN博主「onebai」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href=\"https://blog.csdn.net/weixin/_40562999/article/details/108943445\">https://blog.csdn.net/weixin\\_40562999/article/details/108943445</a></p>\n<hr>\n<h1 id=\"docker一条命令搭建在线音乐播放器mmplayer\"><a href=\"#docker一条命令搭建在线音乐播放器mmplayer\" class=\"headerlink\" title=\"docker一条命令搭建在线音乐播放器mmplayer\"></a>docker一条命令搭建在线音乐播放器mmplayer</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name mmPlayer --restart always -dit -p 8300:80 yaonew/mmplayer</span><br></pre></td></tr></table></figure>\n\n<p>提供试用：<a href=\"https://c.carlzeng.top:4443/mp3\">https://c.carlzeng.top:4443/mp3</a></p>\n<ol>\n<li>打开<a href=\"https://c.carlzeng.top:4443/mp3\">mmPlayer 在线音乐播放器网址</a></li>\n<li>点击：“搜索”按钮</li>\n<li>输入要搜索的音乐名称或歌手名字</li>\n<li>鼠标放到搜索结果列表中，会出现播放按钮，点击播放；或者下载</li>\n</ol>\n<p>来源：<a href=\"https://hub.docker.com/r/yaonew/mmplayer\">https://hub.docker.com/r/yaonew/mmplayer</a></p>\n<h2 id=\"配置【可选】\"><a href=\"#配置【可选】\" class=\"headerlink\" title=\"配置【可选】\"></a>配置【可选】</h2><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name mmPlayer --restart always -dit -p 8300:80 -v ./index.html:/app/dist/index.html -v ./prompt.html:/app/dist/prompt.html yaonew/mmplayer</span><br></pre></td></tr></table></figure>\n\n<p>切换到docker-compose</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&quot;3&quot;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">    <span class=\"attr\">mmplayer:</span></span><br><span class=\"line\">        <span class=\"attr\">container_name:</span> <span class=\"string\">mmPlayer</span></span><br><span class=\"line\">        <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">        <span class=\"attr\">stdin_open:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">tty:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"number\">8300</span><span class=\"string\">:80</span></span><br><span class=\"line\">        <span class=\"attr\">volumes:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">./index.html:/app/dist/index.html</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">./prompt.html:/app/dist/prompt.html</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">./favicon.ico:/app/dist/favicon.ico</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">yaonew/mmplayer</span></span><br></pre></td></tr></table></figure>\n\n<p>刚开始，docker-compose启动后，本地的8300端口无法访问。</p>\n<p>docker stop mmPlayer</p>\n<p>docker rm mmPlayer</p>\n<p>然后重新试几次，就好了 ：-）</p>\n<p>开放防火墙端口，映射出主页</p>\n<h1 id=\"TODO下一步\"><a href=\"#TODO下一步\" class=\"headerlink\" title=\"TODO下一步\"></a>TODO下一步</h1><p>整合进node.js的appsearch</p>\n<p>不要重新搞一个docker容器了，整合在一起，还有开启的sh来，自动执行，简直太香了。</p>\n<h2 id=\"感谢列表\"><a href=\"#感谢列表\" class=\"headerlink\" title=\"感谢列表\"></a>感谢列表</h2><p><a href=\"https://panda995.xyz/network/3878.html\">NAS可用音乐播放器！在线播放、歌词显示、歌单同步都有，这款容器太强大了</a>\t</p>\n<h2 id=\"遗憾点\"><a href=\"#遗憾点\" class=\"headerlink\" title=\"遗憾点\"></a>遗憾点</h2><p>这是定位PC端的听音乐。无法分享音乐，比如想要分享特定喜欢的歌曲给朋友；无法生成一个长久的链接。</p>\n<p>小伙伴有没有知道基于<a href=\"https://github.com/Binaryify/NeteaseCloudMusicApi\">NeteaseCloudMusicApi</a>的类似大佬这个，可以分享出一个链接（带图片和播放功能）的docker部署网页版音乐播放器？留言告诉我好不好？</p>","categories":[{"name":"音乐","path":"api/categories/音乐.json"}],"tags":[{"name":"安卓手机","path":"api/tags/安卓手机.json"},{"name":"音乐","path":"api/tags/音乐.json"},{"name":"音乐下载","path":"api/tags/音乐下载.json"},{"name":"音乐播放器","path":"api/tags/音乐播放器.json"}]}