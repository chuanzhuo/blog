{"title":"如何修改LEDE和X86_64位OpenWrt的默认80管理端口-CarlZeng","slug":"如何修改LEDE-OpenWrt的默认80管理端口-CarlZeng","date":"2023-08-24T13:11:00.000Z","updated":"2023-12-13T12:04:11.434Z","comments":true,"path":"api/articles/如何修改LEDE-OpenWrt的默认80管理端口-CarlZeng.json","excerpt":"The LEDE Project ssh修改80管理端口排查及优化Openwrt内存占用，故障排查与资源维护","covers":["https://www.evernote.com/shard/s122/sh/a104a5d9-edac-4c2f-8539-390534af86ba/OlRv4r57iAyhSvr2cNbJCVORou8YVWp9iTQq6vZy3zQkeyCrezsfcqvvJA/deep/0/image.png","https://www.evernote.com/shard/s122/sh/51ce06fc-468a-443b-b402-898836f228cf/HxKZgH2mi1Fxiap5NixoZB1KLGeKaGoupvzg5CrUuaLdUh3JURpaWPmzYg/deep/0/image.png"],"content":"<ol>\n<li>The LEDE Project ssh修改80管理端口</li>\n<li>排查及优化Openwrt内存占用，故障排查与资源维护</li>\n</ol>\n<span id=\"more\"></span>\n\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>我们网络环境的特殊性，尤其是跨越运营商时；80端口是很敏感而被封锁着的。那么如何把OpenWrt（路由器系统）的默认端口从默认的80端口改到其他的端口呢？SSH局域网内配置修改步骤如下。</p>\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><p>如果您对相关的 <a href=\"https://www.carlzeng.top/search?q=linux\">linux</a> 感兴趣，以下内容可能帮到您：</p>\n<ul>\n<li><p><a href=\"https://www.carlzeng.top/202311032202.html?highlight=nginx+proxy+manager%E4%BF%AE%E5%A4%8D%E7%AC%94%E8%AE%B0\">Nginx Proxy Manager修复笔记</a></p>\n<p>排查Nginx Proxy Manager，反向代理，让网站变成HTTPS 有什么用排查Nginx Proxy Manager，反向代理，让网站变成HTTPS …</p>\n</li>\n<li><p><a href=\"https://www.carlzeng.top/202310261222.html?highlight=nginx+proxy+manager%E4%BF%AE%E5%A4%8D%E7%AC%94%E8%AE%B0\">Hexo定制之家宽部署artalk评论</a></p>\n<p>需要升级到https Nginx Proxy Manager也可以代劳 家宽如何使用Nginx Proxy Manager反向代理 - YouTube <a href=\"https://vt.woo/\">https://vt.woo</a>…</p>\n</li>\n<li><p><a href=\"https://www.carlzeng.top/202310171918.html?highlight=nginx+proxy+manager%E4%BF%AE%E5%A4%8D%E7%AC%94%E8%AE%B0\">Debian初体验之基础设置</a></p>\n<p>切换方案：wget….</p>\n</li>\n<li><p><a href=\"https://www.carlzeng.top/202310110855.html\">utm虚拟机在mac m1下kali linux实战</a></p>\n<p>虚拟机软件 UTM，安装及使用KALI linux MAC M1 开源虚拟机UTM app<a href=\"https://getutm.app/\">https://getutm.app</a> KALI linuxWorks Kali linux 2023.1…</p>\n</li>\n<li><p><a href=\"https://www.carlzeng.top/202311141039.html\">iptables应用</a></p>\n<p>有什么用管理linux防火墙开启Openwrt上的clash服务中转 实现方法 iptables 应用在OpenWrt上面，开放OpenWrt中OpenClash的HTTP &amp; SOCK…</p>\n</li>\n<li><p><a href=\"https://www.carlzeng.top/202308262104.html\">云盘转nas，云盘转化为本地磁盘，跨平台跨设备同步-carlzeng</a></p>\n<p>止DOS）同时也出现各种解决方法，比如：linux<a href=\"https://aur.archlinux.org/packages/aria2-unlimitedhttps://github.com/P3TERX\">https://aur.archlinux.org/packages/aria2-unlimitedhttps://github.com/P3TERX</a>…</p>\n</li>\n</ul>\n<p>下一步TODO：我讲尝试API获取站内搜索的结果页面（仅内容+链接）返回HTML</p>\n<h1 id=\"查看tcp端口占用情况\"><a href=\"#查看tcp端口占用情况\" class=\"headerlink\" title=\"查看tcp端口占用情况\"></a>查看tcp端口占用情况</h1><p>Linux通用的命令：<strong>netstat -tln</strong></p>\n<p>这样查询以后就知道机器目前到底开放了那些tcp端口</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@K2P:/# netstat -tln</span><br><span class=\"line\">Active Internet connections (only servers)</span><br><span class=\"line\">Proto Recv-Q Send-Q Local Address           Foreign Address         State</span><br><span class=\"line\">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN</span><br><span class=\"line\">tcp        0      0 0.0.0.0:53              0.0.0.0:*               LISTEN</span><br><span class=\"line\">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN</span><br><span class=\"line\">tcp        0      0 ::ffff:192.168.2.1:7681 :::*                    LISTEN</span><br><span class=\"line\">tcp        0      0 :::5000                 :::*                    LISTEN</span><br><span class=\"line\">tcp        0      0 :::80                   :::*                    LISTEN</span><br><span class=\"line\">tcp        0      0 :::53                   :::*                    LISTEN</span><br><span class=\"line\">tcp        0      0 :::22                   :::*                    LISTEN</span><br><span class=\"line\">tcp        0      0 :::23                   :::*                    LISTEN</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"关于LEDE-OpenWrt\"><a href=\"#关于LEDE-OpenWrt\" class=\"headerlink\" title=\"关于LEDE OpenWrt\"></a>关于LEDE OpenWrt</h1><p>The LEDE Project (“Linux Embedded Development Environment”) is a <strong>Linux</strong> operating system based on OpenWrt. <a href=\"https://lede.readthedocs.io/en/latest/#\">https://lede.readthedocs.io/en/latest/#</a></p>\n<p>相当于一台硬件配置简陋的Linux服务器，用于测试小ipk软件包还是很好用的。</p>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><ol>\n<li><p>使用SSH连接到OpenWrt</p>\n</li>\n<li><p>Terminal 运行 ssh <a href=\"mailto:&#x72;&#111;&#x6f;&#116;&#64;&#49;&#57;&#50;&#x2e;&#49;&#x36;&#56;&#46;&#54;&#46;&#x31;\">&#x72;&#111;&#x6f;&#116;&#64;&#49;&#57;&#50;&#x2e;&#49;&#x36;&#56;&#46;&#54;&#46;&#x31;</a> 如果提示错误：</p>\n<pre><code>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nIT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY! Someone could be eavesdropping on you right now (man\\-in\\-the-middle attack)! It is also possible that a host key has just been changed.\nThe fingerprint for the RSA key sent by the remote host is SHA256:62NIyqmMPzrJKil2jKX74MqnU/6xASo0SWfArXejsPQ.\nPlease contact your system administrator.\nAdd correct host key in /Users/\\*\\*\\*/.ssh/known\\_hosts to get rid of this message.\nOffending RSA key in /Users/\\*\\*\\*/.ssh/known\\_hosts:12 Host key for 192.168.6.1 has changed and you have requested strict checking.\nHost key verification failed.\n就需要我们把/Users/\\*\\*\\*/.ssh 目录下的“known\\_hosts”删除，重试一下即可。 2. 输入root用户的密码，登录到状态，类似信息：\nBusyBox v1.25.1 () built-in shell (ash)\n     \\_\\_\\_\\_\\_\\_\\_\\_\\_ /        /\\\\      \\_    \\_\\_\\_ \\_\\_\\_  \\_\\_\\_ /  LE    /  \\\\    | |  | \\_\\_|   \\\\| \\_\\_|\n  /    DE  /    \\\\   | |\\_\\_| \\_|| |) | \\_|\n /\\_\\_\\_\\_\\_\\_\\_\\_/  LE  \\\\  |\\_\\_\\_\\_|\\_\\_\\_|\\_\\_\\_/|\\_\\_\\_|                      lede-project.org\n \\\\        \\\\   DE / \\\\    LE  \\\\ /  ----------------------------------------------------------- \\\\  DE    \\\\ /    Reboot (17.01\\-SNAPSHOT, r4046-beaa2ecc10)\n    \\\\\\_\\_\\_\\_\\_\\_\\_\\_\\\\/    -----------------------------------------------------------\n</code></pre>\n</li>\n<li><p>登录后，修改配置文件</p>\n<ol>\n<li>cd &#x2F;etc&#x2F;config </li>\n<li>cat uhttpd【可选步骤, 查看现有文件内容】 </li>\n<li>vi uhttpd </li>\n<li>（i 命令）修改成下面这样从80，改为8080（举个例子）<br> config uhttpd ‘main’ list listen_http ‘0.0.0.0:8080’ list listen_http ‘[::]:8080’ list listen_https ‘0.0.0.0:443’ list listen_https ‘[::]:443’ …..</li>\n<li>修改完成后保存（:wq） </li>\n<li>重启uhttpd（或重启路由器）</li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/init.d/uhttpd restart</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"关于X86-64位构架的OpenWrt\"><a href=\"#关于X86-64位构架的OpenWrt\" class=\"headerlink\" title=\"关于X86_64位构架的OpenWrt\"></a>关于X86_64位构架的OpenWrt</h1><h2 id=\"排查及优化Openwrt内存占用\"><a href=\"#排查及优化Openwrt内存占用\" class=\"headerlink\" title=\"排查及优化Openwrt内存占用\"></a>排查及优化Openwrt内存占用</h2><p>尴尬地发现Openwrt在虚拟机中的内存占用率为：85%<br>黄条提醒很醒目</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">top -m</span><br><span class=\"line\"></span><br><span class=\"line\">Mem: 430112K used, 65328K free, 33268K shrd, 6972K buff, 187200K cached</span><br><span class=\"line\">CPU:   0% usr   1% sys   0% nic  97% idle   0% io   0% irq   0% sirq</span><br><span class=\"line\">Load average: 0.17 0.18 0.09 1/236 19160</span><br><span class=\"line\">  PID  PPID USER     STAT   VSZ %VSZ %CPU COMMAND</span><br><span class=\"line\"> 6376     1 root     T     3192   1%   0% &#123;wrtbwmon&#125; /bin/sh /usr/sbin/wrtbwmon -46 -f /tmp/usage.db -p /tmp/usage.htm -u /et</span><br><span class=\"line\">11165     1 root     SN   43924   9%   0% /usr/sbin/netdata -D -c /etc/netdata/netdata.conf</span><br><span class=\"line\"> 4899  4880 root     S     1180   0%   0% /usr/sbin/umdns</span><br><span class=\"line\">   54     2 root     IW       0   0%   0% [kworker/2:1-eve]</span><br><span class=\"line\"> 5074     1 root     S     708m 146%   0% speedtest-web --listen_port 8989</span><br><span class=\"line\"> 5492     1 root     S     702m 145%   0% /usr/sbin/quickstart serve</span><br><span class=\"line\">30401     1 root     S    28028   6%   0% /usr/sbin/smbd -F</span><br><span class=\"line\">30469 30401 root     S    26336   5%   0% &#123;smbd-cleanupd&#125; /usr/sbin/smbd -F</span><br><span class=\"line\">30468 30401 root     S    26312   5%   0% &#123;smbd-notifyd&#125; /usr/sbin/smbd -F</span><br><span class=\"line\">30402     1 root     S    17500   4%   0% /usr/sbin/nmbd -F</span><br><span class=\"line\">11299 11165 root     SN   16780   3%   0% /usr/sbin/netdata --special-spawn-server</span><br><span class=\"line\">29142  4459 root     S     8912   2%   0% nginx: worker process</span><br></pre></td></tr></table></figure>\n<pre><code>优化：在Openwrt的SSH中，请使用htop命令来监测系统性能及资源使用情况，它更加清晰，如下：\n</code></pre>\n<p><img data-src=\"https://www.evernote.com/shard/s122/sh/a104a5d9-edac-4c2f-8539-390534af86ba/OlRv4r57iAyhSvr2cNbJCVORou8YVWp9iTQq6vZy3zQkeyCrezsfcqvvJA/deep/0/image.png\" alt=\"htop命令\"></p>\n<p>杀死进程：speedtest-web<br>kill -9 @@@<br>内存使用率 从85% 降到 77.76%；</p>\n<ul>\n<li>发现：&#x2F;usr&#x2F;sbin&#x2F;wrtbwmon 是流量监控的进程<br>在OP的UI界面，切换到 状态 》 实时监控； 关闭了实时监控的按钮；Pause<br>内存使用率 从77% 降到 50%；</li>\n</ul>\n<p>使用Netdata设置实时性能监控<br>这个进程杀死后也会自动在启动，而已有好多个进程ID，没有彻底解决这个性能占有问题</p>\n<blockquote>\n<p>尝试着用htop, 选中然后F9在Kill SigKill回车Kill，瞬间内容就降下来，CPU飙上去；然后很快又会恢复内存最高占用率（CPU随之回落）</p>\n<p>OP的这个LUCI背后用这么强大的图形化和数据库统计流量这些，实在好浪费资源（平时几乎不会去查看）</p>\n</blockquote>\n<h2 id=\"修改OpenWrt的默认80管理端口\"><a href=\"#修改OpenWrt的默认80管理端口\" class=\"headerlink\" title=\"修改OpenWrt的默认80管理端口\"></a>修改OpenWrt的默认80管理端口</h2><p>自编译的J4125的OpenWrt的UI，不是使用上面那个K2P版本的LEDE OpenWrt的httpd来管理web页面UI。</p>\n<p>这时候OpenWrt是NGINX来管理UI的，配置文件在&#x2F;etc&#x2F;config&#x2F;nginx<br>这个文件包含NGINX配置文档内容。应用保存后自动重启生效。</p>\n<p>如图：修改80端口为8080即可<br><img data-src=\"https://www.evernote.com/shard/s122/sh/51ce06fc-468a-443b-b402-898836f228cf/HxKZgH2mi1Fxiap5NixoZB1KLGeKaGoupvzg5CrUuaLdUh3JURpaWPmzYg/deep/0/image.png\" alt=\"修改80端口为8080\"></p>\n","more":"<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>我们网络环境的特殊性，尤其是跨越运营商时；80端口是很敏感而被封锁着的。那么如何把OpenWrt（路由器系统）的默认端口从默认的80端口改到其他的端口呢？SSH局域网内配置修改步骤如下。</p>\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><p>如果您对相关的 <a href=\"https://www.carlzeng.top/search?q=linux\">linux</a> 感兴趣，以下内容可能帮到您：</p>\n<ul>\n<li><p><a href=\"https://www.carlzeng.top/202311032202.html?highlight=nginx+proxy+manager%E4%BF%AE%E5%A4%8D%E7%AC%94%E8%AE%B0\">Nginx Proxy Manager修复笔记</a></p>\n<p>排查Nginx Proxy Manager，反向代理，让网站变成HTTPS 有什么用排查Nginx Proxy Manager，反向代理，让网站变成HTTPS …</p>\n</li>\n<li><p><a href=\"https://www.carlzeng.top/202310261222.html?highlight=nginx+proxy+manager%E4%BF%AE%E5%A4%8D%E7%AC%94%E8%AE%B0\">Hexo定制之家宽部署artalk评论</a></p>\n<p>需要升级到https Nginx Proxy Manager也可以代劳 家宽如何使用Nginx Proxy Manager反向代理 - YouTube <a href=\"https://vt.woo/\">https://vt.woo</a>…</p>\n</li>\n<li><p><a href=\"https://www.carlzeng.top/202310171918.html?highlight=nginx+proxy+manager%E4%BF%AE%E5%A4%8D%E7%AC%94%E8%AE%B0\">Debian初体验之基础设置</a></p>\n<p>切换方案：wget….</p>\n</li>\n<li><p><a href=\"https://www.carlzeng.top/202310110855.html\">utm虚拟机在mac m1下kali linux实战</a></p>\n<p>虚拟机软件 UTM，安装及使用KALI linux MAC M1 开源虚拟机UTM app<a href=\"https://getutm.app/\">https://getutm.app</a> KALI linuxWorks Kali linux 2023.1…</p>\n</li>\n<li><p><a href=\"https://www.carlzeng.top/202311141039.html\">iptables应用</a></p>\n<p>有什么用管理linux防火墙开启Openwrt上的clash服务中转 实现方法 iptables 应用在OpenWrt上面，开放OpenWrt中OpenClash的HTTP &amp; SOCK…</p>\n</li>\n<li><p><a href=\"https://www.carlzeng.top/202308262104.html\">云盘转nas，云盘转化为本地磁盘，跨平台跨设备同步-carlzeng</a></p>\n<p>止DOS）同时也出现各种解决方法，比如：linux<a href=\"https://aur.archlinux.org/packages/aria2-unlimitedhttps://github.com/P3TERX\">https://aur.archlinux.org/packages/aria2-unlimitedhttps://github.com/P3TERX</a>…</p>\n</li>\n</ul>\n<p>下一步TODO：我讲尝试API获取站内搜索的结果页面（仅内容+链接）返回HTML</p>\n<h1 id=\"查看tcp端口占用情况\"><a href=\"#查看tcp端口占用情况\" class=\"headerlink\" title=\"查看tcp端口占用情况\"></a>查看tcp端口占用情况</h1><p>Linux通用的命令：<strong>netstat -tln</strong></p>\n<p>这样查询以后就知道机器目前到底开放了那些tcp端口</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@K2P:/# netstat -tln</span><br><span class=\"line\">Active Internet connections (only servers)</span><br><span class=\"line\">Proto Recv-Q Send-Q Local Address           Foreign Address         State</span><br><span class=\"line\">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN</span><br><span class=\"line\">tcp        0      0 0.0.0.0:53              0.0.0.0:*               LISTEN</span><br><span class=\"line\">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN</span><br><span class=\"line\">tcp        0      0 ::ffff:192.168.2.1:7681 :::*                    LISTEN</span><br><span class=\"line\">tcp        0      0 :::5000                 :::*                    LISTEN</span><br><span class=\"line\">tcp        0      0 :::80                   :::*                    LISTEN</span><br><span class=\"line\">tcp        0      0 :::53                   :::*                    LISTEN</span><br><span class=\"line\">tcp        0      0 :::22                   :::*                    LISTEN</span><br><span class=\"line\">tcp        0      0 :::23                   :::*                    LISTEN</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"关于LEDE-OpenWrt\"><a href=\"#关于LEDE-OpenWrt\" class=\"headerlink\" title=\"关于LEDE OpenWrt\"></a>关于LEDE OpenWrt</h1><p>The LEDE Project (“Linux Embedded Development Environment”) is a <strong>Linux</strong> operating system based on OpenWrt. <a href=\"https://lede.readthedocs.io/en/latest/#\">https://lede.readthedocs.io/en/latest/#</a></p>\n<p>相当于一台硬件配置简陋的Linux服务器，用于测试小ipk软件包还是很好用的。</p>\n<h2 id=\"步骤\"><a href=\"#步骤\" class=\"headerlink\" title=\"步骤\"></a>步骤</h2><ol>\n<li><p>使用SSH连接到OpenWrt</p>\n</li>\n<li><p>Terminal 运行 ssh <a href=\"mailto:&#x72;&#111;&#x6f;&#116;&#64;&#49;&#57;&#50;&#x2e;&#49;&#x36;&#56;&#46;&#54;&#46;&#x31;\">&#x72;&#111;&#x6f;&#116;&#64;&#49;&#57;&#50;&#x2e;&#49;&#x36;&#56;&#46;&#54;&#46;&#x31;</a> 如果提示错误：</p>\n<pre><code>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nIT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY! Someone could be eavesdropping on you right now (man\\-in\\-the-middle attack)! It is also possible that a host key has just been changed.\nThe fingerprint for the RSA key sent by the remote host is SHA256:62NIyqmMPzrJKil2jKX74MqnU/6xASo0SWfArXejsPQ.\nPlease contact your system administrator.\nAdd correct host key in /Users/\\*\\*\\*/.ssh/known\\_hosts to get rid of this message.\nOffending RSA key in /Users/\\*\\*\\*/.ssh/known\\_hosts:12 Host key for 192.168.6.1 has changed and you have requested strict checking.\nHost key verification failed.\n就需要我们把/Users/\\*\\*\\*/.ssh 目录下的“known\\_hosts”删除，重试一下即可。 2. 输入root用户的密码，登录到状态，类似信息：\nBusyBox v1.25.1 () built-in shell (ash)\n     \\_\\_\\_\\_\\_\\_\\_\\_\\_ /        /\\\\      \\_    \\_\\_\\_ \\_\\_\\_  \\_\\_\\_ /  LE    /  \\\\    | |  | \\_\\_|   \\\\| \\_\\_|\n  /    DE  /    \\\\   | |\\_\\_| \\_|| |) | \\_|\n /\\_\\_\\_\\_\\_\\_\\_\\_/  LE  \\\\  |\\_\\_\\_\\_|\\_\\_\\_|\\_\\_\\_/|\\_\\_\\_|                      lede-project.org\n \\\\        \\\\   DE / \\\\    LE  \\\\ /  ----------------------------------------------------------- \\\\  DE    \\\\ /    Reboot (17.01\\-SNAPSHOT, r4046-beaa2ecc10)\n    \\\\\\_\\_\\_\\_\\_\\_\\_\\_\\\\/    -----------------------------------------------------------\n</code></pre>\n</li>\n<li><p>登录后，修改配置文件</p>\n<ol>\n<li>cd &#x2F;etc&#x2F;config </li>\n<li>cat uhttpd【可选步骤, 查看现有文件内容】 </li>\n<li>vi uhttpd </li>\n<li>（i 命令）修改成下面这样从80，改为8080（举个例子）<br> config uhttpd ‘main’ list listen_http ‘0.0.0.0:8080’ list listen_http ‘[::]:8080’ list listen_https ‘0.0.0.0:443’ list listen_https ‘[::]:443’ …..</li>\n<li>修改完成后保存（:wq） </li>\n<li>重启uhttpd（或重启路由器）</li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/init.d/uhttpd restart</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"关于X86-64位构架的OpenWrt\"><a href=\"#关于X86-64位构架的OpenWrt\" class=\"headerlink\" title=\"关于X86_64位构架的OpenWrt\"></a>关于X86_64位构架的OpenWrt</h1><h2 id=\"排查及优化Openwrt内存占用\"><a href=\"#排查及优化Openwrt内存占用\" class=\"headerlink\" title=\"排查及优化Openwrt内存占用\"></a>排查及优化Openwrt内存占用</h2><p>尴尬地发现Openwrt在虚拟机中的内存占用率为：85%<br>黄条提醒很醒目</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">top -m</span><br><span class=\"line\"></span><br><span class=\"line\">Mem: 430112K used, 65328K free, 33268K shrd, 6972K buff, 187200K cached</span><br><span class=\"line\">CPU:   0% usr   1% sys   0% nic  97% idle   0% io   0% irq   0% sirq</span><br><span class=\"line\">Load average: 0.17 0.18 0.09 1/236 19160</span><br><span class=\"line\">  PID  PPID USER     STAT   VSZ %VSZ %CPU COMMAND</span><br><span class=\"line\"> 6376     1 root     T     3192   1%   0% &#123;wrtbwmon&#125; /bin/sh /usr/sbin/wrtbwmon -46 -f /tmp/usage.db -p /tmp/usage.htm -u /et</span><br><span class=\"line\">11165     1 root     SN   43924   9%   0% /usr/sbin/netdata -D -c /etc/netdata/netdata.conf</span><br><span class=\"line\"> 4899  4880 root     S     1180   0%   0% /usr/sbin/umdns</span><br><span class=\"line\">   54     2 root     IW       0   0%   0% [kworker/2:1-eve]</span><br><span class=\"line\"> 5074     1 root     S     708m 146%   0% speedtest-web --listen_port 8989</span><br><span class=\"line\"> 5492     1 root     S     702m 145%   0% /usr/sbin/quickstart serve</span><br><span class=\"line\">30401     1 root     S    28028   6%   0% /usr/sbin/smbd -F</span><br><span class=\"line\">30469 30401 root     S    26336   5%   0% &#123;smbd-cleanupd&#125; /usr/sbin/smbd -F</span><br><span class=\"line\">30468 30401 root     S    26312   5%   0% &#123;smbd-notifyd&#125; /usr/sbin/smbd -F</span><br><span class=\"line\">30402     1 root     S    17500   4%   0% /usr/sbin/nmbd -F</span><br><span class=\"line\">11299 11165 root     SN   16780   3%   0% /usr/sbin/netdata --special-spawn-server</span><br><span class=\"line\">29142  4459 root     S     8912   2%   0% nginx: worker process</span><br></pre></td></tr></table></figure>\n<pre><code>优化：在Openwrt的SSH中，请使用htop命令来监测系统性能及资源使用情况，它更加清晰，如下：\n</code></pre>\n<p><img data-src=\"https://www.evernote.com/shard/s122/sh/a104a5d9-edac-4c2f-8539-390534af86ba/OlRv4r57iAyhSvr2cNbJCVORou8YVWp9iTQq6vZy3zQkeyCrezsfcqvvJA/deep/0/image.png\" alt=\"htop命令\"></p>\n<p>杀死进程：speedtest-web<br>kill -9 @@@<br>内存使用率 从85% 降到 77.76%；</p>\n<ul>\n<li>发现：&#x2F;usr&#x2F;sbin&#x2F;wrtbwmon 是流量监控的进程<br>在OP的UI界面，切换到 状态 》 实时监控； 关闭了实时监控的按钮；Pause<br>内存使用率 从77% 降到 50%；</li>\n</ul>\n<p>使用Netdata设置实时性能监控<br>这个进程杀死后也会自动在启动，而已有好多个进程ID，没有彻底解决这个性能占有问题</p>\n<blockquote>\n<p>尝试着用htop, 选中然后F9在Kill SigKill回车Kill，瞬间内容就降下来，CPU飙上去；然后很快又会恢复内存最高占用率（CPU随之回落）</p>\n<p>OP的这个LUCI背后用这么强大的图形化和数据库统计流量这些，实在好浪费资源（平时几乎不会去查看）</p>\n</blockquote>\n<h2 id=\"修改OpenWrt的默认80管理端口\"><a href=\"#修改OpenWrt的默认80管理端口\" class=\"headerlink\" title=\"修改OpenWrt的默认80管理端口\"></a>修改OpenWrt的默认80管理端口</h2><p>自编译的J4125的OpenWrt的UI，不是使用上面那个K2P版本的LEDE OpenWrt的httpd来管理web页面UI。</p>\n<p>这时候OpenWrt是NGINX来管理UI的，配置文件在&#x2F;etc&#x2F;config&#x2F;nginx<br>这个文件包含NGINX配置文档内容。应用保存后自动重启生效。</p>\n<p>如图：修改80端口为8080即可<br><img data-src=\"https://www.evernote.com/shard/s122/sh/51ce06fc-468a-443b-b402-898836f228cf/HxKZgH2mi1Fxiap5NixoZB1KLGeKaGoupvzg5CrUuaLdUh3JURpaWPmzYg/deep/0/image.png\" alt=\"修改80端口为8080\"></p>","categories":[{"name":"OpenWrt","path":"api/categories/OpenWrt.json"}],"tags":[{"name":"OpenWrt","path":"api/tags/OpenWrt.json"},{"name":"家宽","path":"api/tags/家宽.json"},{"name":"linux","path":"api/tags/linux.json"},{"name":"Nginx","path":"api/tags/Nginx.json"},{"name":"路由器","path":"api/tags/路由器.json"},{"name":"LEDE","path":"api/tags/LEDE.json"}]}