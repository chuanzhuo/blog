{"title":"如何使用lux,youtube-dl下载各视频网站(含Youtube)上面的音视频，油管视频","slug":"如何使用youtube-dl下载Youtube上面的音视频，油管视频(23年11月已更新)","date":"2022-11-22T01:13:00.000Z","updated":"2024-10-25T13:16:40.589Z","comments":true,"path":"api/articles/如何使用youtube-dl下载Youtube上面的音视频，油管视频(23年11月已更新).json","excerpt":" [Figure] 简单快速地视频音频下载神器，支持各大视频站点2023年11月 切换方案至lux","covers":null,"content":"<img class=\"lozad\" data-src=https://www.evernote.com/shard/s122/sh/c97c28ac-6531-4ed9-8caf-7cc7f57bfb17/mTTlTjjxf5wrneheJyYQuIMgA0UoTUVkx-VewC1VOq7tTNWv7rIHv37RIA/deep/0/image.png>\n简单快速地视频音频下载神器，支持各大视频站点\n\n\n<h1 id=\"2023年11月-切换方案至lux\"><a href=\"#2023年11月-切换方案至lux\" class=\"headerlink\" title=\"2023年11月 切换方案至lux\"></a>2023年11月 切换方案至lux</h1><span id=\"more\"></span>\n\n<p>用法：</p>\n<ol>\n<li>lux {bilibili或youtube的播放url地址}<ol>\n<li>举例子：lux <a href=\"https://www.bilibili.com/video/BV1GN411n7En\">https://www.bilibili.com/video/BV1GN411n7En</a></li>\n</ol>\n</li>\n<li>ffmpeg -i {输入文件} {输出文件}<ol>\n<li>举例子：ffmpeg - i &#x2F;Users&#x2F;carlzeng&#x2F;Downloads&#x2F;《踏雪》亚运版.mp4  踏雪亚运版.mp3</li>\n</ol>\n</li>\n</ol>\n<p>默认墙内时，对于油管的下载支持不是太好；解决办法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTPS_PROXY=&quot;socks5://127.0.0.1:7890&quot; lux &quot;https://www.youtube.com/watch?v=5Dm9XTbnN-M&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> Site:      YouTube youtube.com</span><br><span class=\"line\"> Title:     秋殇别恋</span><br><span class=\"line\"> Type:      video</span><br><span class=\"line\"> Stream:   </span><br><span class=\"line\">     [137]  -------------------</span><br><span class=\"line\">     Quality:         1080p video/mp4; codecs=&quot;avc1.640020&quot;</span><br><span class=\"line\">     Size:            20.82 MiB (21836289 Bytes)</span><br><span class=\"line\">     # download with: lux -f 137 ...</span><br><span class=\"line\"></span><br><span class=\"line\">20.82 MiB / 20.82 MiB [===========================================================================] 46.43 KiB p/s 100.00% 7m40s</span><br><span class=\"line\">Merging video parts into 秋殇别恋.mp4</span><br></pre></td></tr></table></figure>\n<p>需要注意到的是，我们在命令行前面使用HTTPS_PROXY现在基本是都HTTPS了，闭着眼睛这样一条命令就好：<br>HTTPS_PROXY&#x3D;”可用的代理地址” lux “音乐播放的URL地址”</p>\n<hr>\n<blockquote>\n<p>2023.12更新：【待实践测试】</p>\n</blockquote>\n<h1 id=\"yt-dlp\"><a href=\"#yt-dlp\" class=\"headerlink\" title=\"yt-dlp\"></a>yt-dlp</h1><p>Python的一个实现，原来youtube-dl停更后，一个分支已经转为YT-DLP</p>\n<p>yt-dlp is a youtube-dl fork based on the now inactive youtube-dlc. The main focus of this project is adding new features and patches while also keeping up to date with the original project</p>\n<p>You can install yt-dlp using <a href=\"https://github.com/yt-dlp/yt-dlp#release-files\">the binaries</a>, <a href=\"https://pypi.org/project/yt-dlp\">pip</a> or one using a third-party package manager. See <a href=\"https://github.com/yt-dlp/yt-dlp/wiki/Installation\">the wiki</a> for detailed instructions</p>\n<p><a href=\"https://github.com/yt-dlp/yt-dlp?tab=readme-ov-file#readme\">https://github.com/yt-dlp/yt-dlp?tab=readme-ov-file#readme</a></p>\n<hr>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[youtube] cEEWJ9LcBXk: Downloading webpage</span><br><span class=\"line\">WARNING: Unable to download webpage: &lt;urlopen error [Errno 54] Connection reset by peer&gt;</span><br><span class=\"line\">[youtube] cEEWJ9LcBXk: Downloading API JSON</span><br><span class=\"line\">ERROR: Unable to download API page: &lt;urlopen error [Errno 54] Connection reset by peer&gt; (caused by URLError(error(54, &#x27;Connection reset by peer&#x27;),))</span><br><span class=\"line\"></span><br><span class=\"line\">-------------</span><br><span class=\"line\">[youtube] cEEWJ9LcBXk: Downloading webpage</span><br><span class=\"line\">ERROR: Unable to extract uploader id; please report this issue on https://yt-dl.org/bug . Make sure you are using the latest version; type  youtube-dl -U  to update. Be sure to call youtube-dl with the --verbose flag and include its complete output.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">youtube-dl --update</span><br><span class=\"line\">ERROR: can&#x27;t find the current version. Please try again later.</span><br><span class=\"line\"></span><br><span class=\"line\">sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl</span><br><span class=\"line\">sudo chmod a+rx /usr/local/bin/youtube-dl</span><br><span class=\"line\"></span><br><span class=\"line\">youtube-dl --proxy &#x27;socks5://127.0.0.1:7890&#x27; &#x27;https://www.youtube.com/watch?v=cEEWJ9LcBXk&#x27;</span><br><span class=\"line\">    /usr/local/bin/youtube-dl: line 1: syntax error near unexpected token `newline&#x27;</span><br><span class=\"line\">    /usr/local/bin/youtube-dl: line 1: `&lt;h1&gt;Access denied&lt;/h1&gt;&#x27;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>youtube-dl年久失修了，转用其他方案：比如you-get 或者 lux方案<br>you-get 一直下载不成功，放弃。<br>转用lux<br>项目地址<a href=\"https://github.com/iawia002/lux\">https://github.com/iawia002/lux</a></p>\n<hr>\n<p>20231115实测<br>用来下载bilibili视频也非常轻松</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lux &quot;https://www.bilibili.com/video/BV1iy4y1u7n3/?vd_source=dabd362cb0c2607dd58ee4300223b109&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">Site:      哔哩哔哩 bilibili.com</span><br><span class=\"line\"> Title:     【地狱客栈/Hazbin Hotel】【第二版】《疯子》阿拉斯托歌曲</span><br><span class=\"line\"> Type:      video</span><br><span class=\"line\"> Stream:   </span><br><span class=\"line\">     [32-7]  -------------------</span><br><span class=\"line\">     Quality:         清晰 480P avc1.64001F</span><br><span class=\"line\">     Size:            10.52 MiB (11027795 Bytes)</span><br><span class=\"line\">     # download with: lux -f 32-7 ...</span><br><span class=\"line\"></span><br><span class=\"line\">10.52 MiB / 10.52 MiB [====================================================================================] 10.43 MiB p/s 100.00% 1.2s</span><br><span class=\"line\">Merging video parts into 【地狱客栈 Hazbin Hotel】【第二版】《疯子》阿拉斯托歌曲.mp4</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#下载后转化为mp3</span><br><span class=\"line\">ffmpeg -i &quot;【地狱客栈 Hazbin Hotel】【第二版】《疯子》阿拉斯托歌曲.mp4&quot; &quot;地狱客栈-疯子.mp3&quot;</span><br></pre></td></tr></table></figure>\n\n\n<p>安装：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew install lux</span><br><span class=\"line\"></span><br><span class=\"line\">前提是已经全局*墙的情况下这条命令可以正常访问下载到最新版lux</span><br><span class=\"line\">lux --version</span><br><span class=\"line\">lux: version v0.0.0, A fast and simple video downloader.</span><br></pre></td></tr></table></figure>\n\n<p>所有这些youtube-dl可执行文件都被下载到Mac目录：&#x2F;usr&#x2F;local&#x2F;bin<br>而使用brew安装就跑到了？</p>\n<h2 id=\"如何用ffmpeg将mp4转换为mp3\"><a href=\"#如何用ffmpeg将mp4转换为mp3\" class=\"headerlink\" title=\"如何用ffmpeg将mp4转换为mp3\"></a>如何用ffmpeg将mp4转换为mp3</h2><p>ffmpeg -i {输入文件} {输出文件}<br>好简单，明了</p>\n<hr>\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><p>如果您对相关的 <a href=\"https://www.carlzeng.com/search?q=youtube\">youtube</a> 感兴趣，以下内容可能帮到您：</p>\n<iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.com:3/appsearch?q=youtube\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n\n\n<h2 id=\"youtube-dl工具已无效了\"><a href=\"#youtube-dl工具已无效了\" class=\"headerlink\" title=\"youtube_dl工具已无效了\"></a>youtube_dl工具已无效了</h2><p>2023.6.20 测试，报错:</p>\n<p>ERROR: Signature extraction failed</p>\n<p>File “&#x2F;usr&#x2F;local&#x2F;bin&#x2F;youtube-dl&#x2F;youtube_dl&#x2F;extractor&#x2F;youtube.py”, line 1360, in _decrypt_signature</p>\n<p> func &#x3D; self._extract_signature_function(</p>\n<p> File “&#x2F;usr&#x2F;local&#x2F;bin&#x2F;youtube-dl&#x2F;youtube_dl&#x2F;extractor&#x2F;youtube.py”, line 1277, in _extract_signature_function</p>\n<p>。。。</p>\n<p>File “&#x2F;usr&#x2F;local&#x2F;bin&#x2F;youtube-dl&#x2F;youtube_dl&#x2F;jsinterp.py”, line 182, in interpret_expression</p>\n<p> return obj[member](argvals)</p>\n<p><strong>KeyError: ‘QV’</strong></p>\n<p> (caused by KeyError(‘QV’)); please report this issue on <a href=\"https://yt-dl.org/bug\">https://yt-dl.org/bug</a> . Make sure you are using the latest version; type youtube-dl -U to update. Be sure to call youtube-dl with the –verbose flag and include its complete output.</p>\n<p> File “&#x2F;usr&#x2F;local&#x2F;bin&#x2F;youtube-dl&#x2F;youtube_dl&#x2F;jsinterp.py”, line 182, in interpret_expression</p>\n<p> return obj[member](argvals)</p>\n<p>KeyError: ‘QV’</p>\n<p>已使用2种方法，确保升级到最新版：</p>\n<p>youtube-dl is up-to-date (2021.12.17)</p>\n<p>错误依旧，此工具方法已失效。</p>\n<!-- more -->\n<hr>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>下载视频或者音频越来越复杂，原因之一是现在的网站需要自动适配音视频的质量（声音的采样率和视频的分辨率），单独使用url的下载方法（一些浏览器插件的方法）会导致下载了视频而没有声音。</p>\n<p>没有*墙的情况下(又想要下载youtube音视频的话)，请忽略本文。（或使用<a href=\"https://c.carlzeng.com:3/web\">网络加速器</a>访问youtube）</p>\n<h2 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h2><p><a href=\"https://github.com/ytdl-org/youtube-dl\">youtube-dl</a></p>\n<p>ffmpeg（可选）</p>\n<p>代理（比如socks5。没有*墙的情况下，请忽略本文）</p>\n<h2 id=\"Mac下安装\"><a href=\"#Mac下安装\" class=\"headerlink\" title=\"Mac下安装\"></a>Mac下安装</h2><p>1. 打开Terminal 输入：</p>\n<p>sudo curl -L <a href=\"https://yt-dl.org/downloads/latest/youtube-dl\">https://yt-dl.org/downloads/latest/youtube-dl</a> -o &#x2F;usr&#x2F;local&#x2F;bin&#x2F;youtube-dl</p>\n<pre><code>sudo chmod a+rx /usr/local/bin/youtube-dl\n</code></pre>\n<p>2. 下载ffmpeg搭配使用（可选，使用情形之一：使用参数来仅仅下载Youtube中的音频）</p>\n<p>下载后，解压缩至相同目录：&#x2F;usr&#x2F;local&#x2F;bin&#x2F;</p>\n<p>赋予权限：sudo chmod a+rx &#x2F;usr&#x2F;local&#x2F;bin&#x2F;ffmpeg </p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><p>Terminal运行：</p>\n<p>youtube-dl –proxy ‘socks5:&#x2F;&#x2F;127.0.0.1:10804&#x2F;‘ ‘<a href=\"https://www.youtube.com/watch?v=RrUQoAOC9%5C_w\">https://www.youtube.com/watch?v=RrUQoAOC9\\_w</a>‘</p>\n<p>使用socks5代理，连接本机的10804端口，去下载视频（包含音频）。</p>\n<p>youtube-dl –extract-audio –format bestaudio –proxy ‘socks5:&#x2F;&#x2F;127.0.0.1:10804&#x2F;‘ ‘<a href=\"https://www.youtube.com/watch?v=RrUQoAOC9%5C_w\">https://www.youtube.com/watch?v=RrUQoAOC9\\_w</a>‘</p>\n<p>需要ffmpeg支持，使用代理，并仅仅下载音频文件</p>\n<p>合并起来的转化成mp4的例子（请将sock5的代理和端口改成你所使用的情况，比如1080）：</p>\n<p>youtube-dl –proxy ‘socks5:&#x2F;&#x2F;127.0.0.1:10804&#x2F;‘ ‘<a href=\"https://www.youtube.com/watch?v=5MrM4-4xw7M\">https://www.youtube.com/watch?v=5MrM4-4xw7M</a>‘ –format mp4</p>\n<p>引用：</p>\n<p>教你一招如何将油管上的4K视频放到你的硬盘里<a href=\"https://www.bilibili.com/read/cv9635822\">https://www.bilibili.com/read/cv9635822</a></p>\n<p>youtube-dl详细使用说明<a href=\"https://github.com/ytdl-org/youtube-dl/blob/master/README.md#options\">https://github.com/ytdl-org/youtube-dl/blob/master/README.md#options</a></p>\n","more":"<p>用法：</p>\n<ol>\n<li>lux {bilibili或youtube的播放url地址}<ol>\n<li>举例子：lux <a href=\"https://www.bilibili.com/video/BV1GN411n7En\">https://www.bilibili.com/video/BV1GN411n7En</a></li>\n</ol>\n</li>\n<li>ffmpeg -i {输入文件} {输出文件}<ol>\n<li>举例子：ffmpeg - i &#x2F;Users&#x2F;carlzeng&#x2F;Downloads&#x2F;《踏雪》亚运版.mp4  踏雪亚运版.mp3</li>\n</ol>\n</li>\n</ol>\n<p>默认墙内时，对于油管的下载支持不是太好；解决办法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTPS_PROXY=&quot;socks5://127.0.0.1:7890&quot; lux &quot;https://www.youtube.com/watch?v=5Dm9XTbnN-M&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> Site:      YouTube youtube.com</span><br><span class=\"line\"> Title:     秋殇别恋</span><br><span class=\"line\"> Type:      video</span><br><span class=\"line\"> Stream:   </span><br><span class=\"line\">     [137]  -------------------</span><br><span class=\"line\">     Quality:         1080p video/mp4; codecs=&quot;avc1.640020&quot;</span><br><span class=\"line\">     Size:            20.82 MiB (21836289 Bytes)</span><br><span class=\"line\">     # download with: lux -f 137 ...</span><br><span class=\"line\"></span><br><span class=\"line\">20.82 MiB / 20.82 MiB [===========================================================================] 46.43 KiB p/s 100.00% 7m40s</span><br><span class=\"line\">Merging video parts into 秋殇别恋.mp4</span><br></pre></td></tr></table></figure>\n<p>需要注意到的是，我们在命令行前面使用HTTPS_PROXY现在基本是都HTTPS了，闭着眼睛这样一条命令就好：<br>HTTPS_PROXY&#x3D;”可用的代理地址” lux “音乐播放的URL地址”</p>\n<hr>\n<blockquote>\n<p>2023.12更新：【待实践测试】</p>\n</blockquote>\n<h1 id=\"yt-dlp\"><a href=\"#yt-dlp\" class=\"headerlink\" title=\"yt-dlp\"></a>yt-dlp</h1><p>Python的一个实现，原来youtube-dl停更后，一个分支已经转为YT-DLP</p>\n<p>yt-dlp is a youtube-dl fork based on the now inactive youtube-dlc. The main focus of this project is adding new features and patches while also keeping up to date with the original project</p>\n<p>You can install yt-dlp using <a href=\"https://github.com/yt-dlp/yt-dlp#release-files\">the binaries</a>, <a href=\"https://pypi.org/project/yt-dlp\">pip</a> or one using a third-party package manager. See <a href=\"https://github.com/yt-dlp/yt-dlp/wiki/Installation\">the wiki</a> for detailed instructions</p>\n<p><a href=\"https://github.com/yt-dlp/yt-dlp?tab=readme-ov-file#readme\">https://github.com/yt-dlp/yt-dlp?tab=readme-ov-file#readme</a></p>\n<hr>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[youtube] cEEWJ9LcBXk: Downloading webpage</span><br><span class=\"line\">WARNING: Unable to download webpage: &lt;urlopen error [Errno 54] Connection reset by peer&gt;</span><br><span class=\"line\">[youtube] cEEWJ9LcBXk: Downloading API JSON</span><br><span class=\"line\">ERROR: Unable to download API page: &lt;urlopen error [Errno 54] Connection reset by peer&gt; (caused by URLError(error(54, &#x27;Connection reset by peer&#x27;),))</span><br><span class=\"line\"></span><br><span class=\"line\">-------------</span><br><span class=\"line\">[youtube] cEEWJ9LcBXk: Downloading webpage</span><br><span class=\"line\">ERROR: Unable to extract uploader id; please report this issue on https://yt-dl.org/bug . Make sure you are using the latest version; type  youtube-dl -U  to update. Be sure to call youtube-dl with the --verbose flag and include its complete output.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">youtube-dl --update</span><br><span class=\"line\">ERROR: can&#x27;t find the current version. Please try again later.</span><br><span class=\"line\"></span><br><span class=\"line\">sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl</span><br><span class=\"line\">sudo chmod a+rx /usr/local/bin/youtube-dl</span><br><span class=\"line\"></span><br><span class=\"line\">youtube-dl --proxy &#x27;socks5://127.0.0.1:7890&#x27; &#x27;https://www.youtube.com/watch?v=cEEWJ9LcBXk&#x27;</span><br><span class=\"line\">    /usr/local/bin/youtube-dl: line 1: syntax error near unexpected token `newline&#x27;</span><br><span class=\"line\">    /usr/local/bin/youtube-dl: line 1: `&lt;h1&gt;Access denied&lt;/h1&gt;&#x27;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>youtube-dl年久失修了，转用其他方案：比如you-get 或者 lux方案<br>you-get 一直下载不成功，放弃。<br>转用lux<br>项目地址<a href=\"https://github.com/iawia002/lux\">https://github.com/iawia002/lux</a></p>\n<hr>\n<p>20231115实测<br>用来下载bilibili视频也非常轻松</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lux &quot;https://www.bilibili.com/video/BV1iy4y1u7n3/?vd_source=dabd362cb0c2607dd58ee4300223b109&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">Site:      哔哩哔哩 bilibili.com</span><br><span class=\"line\"> Title:     【地狱客栈/Hazbin Hotel】【第二版】《疯子》阿拉斯托歌曲</span><br><span class=\"line\"> Type:      video</span><br><span class=\"line\"> Stream:   </span><br><span class=\"line\">     [32-7]  -------------------</span><br><span class=\"line\">     Quality:         清晰 480P avc1.64001F</span><br><span class=\"line\">     Size:            10.52 MiB (11027795 Bytes)</span><br><span class=\"line\">     # download with: lux -f 32-7 ...</span><br><span class=\"line\"></span><br><span class=\"line\">10.52 MiB / 10.52 MiB [====================================================================================] 10.43 MiB p/s 100.00% 1.2s</span><br><span class=\"line\">Merging video parts into 【地狱客栈 Hazbin Hotel】【第二版】《疯子》阿拉斯托歌曲.mp4</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#下载后转化为mp3</span><br><span class=\"line\">ffmpeg -i &quot;【地狱客栈 Hazbin Hotel】【第二版】《疯子》阿拉斯托歌曲.mp4&quot; &quot;地狱客栈-疯子.mp3&quot;</span><br></pre></td></tr></table></figure>\n\n\n<p>安装：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew install lux</span><br><span class=\"line\"></span><br><span class=\"line\">前提是已经全局*墙的情况下这条命令可以正常访问下载到最新版lux</span><br><span class=\"line\">lux --version</span><br><span class=\"line\">lux: version v0.0.0, A fast and simple video downloader.</span><br></pre></td></tr></table></figure>\n\n<p>所有这些youtube-dl可执行文件都被下载到Mac目录：&#x2F;usr&#x2F;local&#x2F;bin<br>而使用brew安装就跑到了？</p>\n<h2 id=\"如何用ffmpeg将mp4转换为mp3\"><a href=\"#如何用ffmpeg将mp4转换为mp3\" class=\"headerlink\" title=\"如何用ffmpeg将mp4转换为mp3\"></a>如何用ffmpeg将mp4转换为mp3</h2><p>ffmpeg -i {输入文件} {输出文件}<br>好简单，明了</p>\n<hr>\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><p>如果您对相关的 <a href=\"https://www.carlzeng.com/search?q=youtube\">youtube</a> 感兴趣，以下内容可能帮到您：</p>\n<iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.com:3/appsearch?q=youtube\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n\n\n<h2 id=\"youtube-dl工具已无效了\"><a href=\"#youtube-dl工具已无效了\" class=\"headerlink\" title=\"youtube_dl工具已无效了\"></a>youtube_dl工具已无效了</h2><p>2023.6.20 测试，报错:</p>\n<p>ERROR: Signature extraction failed</p>\n<p>File “&#x2F;usr&#x2F;local&#x2F;bin&#x2F;youtube-dl&#x2F;youtube_dl&#x2F;extractor&#x2F;youtube.py”, line 1360, in _decrypt_signature</p>\n<p> func &#x3D; self._extract_signature_function(</p>\n<p> File “&#x2F;usr&#x2F;local&#x2F;bin&#x2F;youtube-dl&#x2F;youtube_dl&#x2F;extractor&#x2F;youtube.py”, line 1277, in _extract_signature_function</p>\n<p>。。。</p>\n<p>File “&#x2F;usr&#x2F;local&#x2F;bin&#x2F;youtube-dl&#x2F;youtube_dl&#x2F;jsinterp.py”, line 182, in interpret_expression</p>\n<p> return obj[member](argvals)</p>\n<p><strong>KeyError: ‘QV’</strong></p>\n<p> (caused by KeyError(‘QV’)); please report this issue on <a href=\"https://yt-dl.org/bug\">https://yt-dl.org/bug</a> . Make sure you are using the latest version; type youtube-dl -U to update. Be sure to call youtube-dl with the –verbose flag and include its complete output.</p>\n<p> File “&#x2F;usr&#x2F;local&#x2F;bin&#x2F;youtube-dl&#x2F;youtube_dl&#x2F;jsinterp.py”, line 182, in interpret_expression</p>\n<p> return obj[member](argvals)</p>\n<p>KeyError: ‘QV’</p>\n<p>已使用2种方法，确保升级到最新版：</p>\n<p>youtube-dl is up-to-date (2021.12.17)</p>\n<p>错误依旧，此工具方法已失效。</p>\n<!-- more -->\n<hr>\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p>下载视频或者音频越来越复杂，原因之一是现在的网站需要自动适配音视频的质量（声音的采样率和视频的分辨率），单独使用url的下载方法（一些浏览器插件的方法）会导致下载了视频而没有声音。</p>\n<p>没有*墙的情况下(又想要下载youtube音视频的话)，请忽略本文。（或使用<a href=\"https://c.carlzeng.com:3/web\">网络加速器</a>访问youtube）</p>\n<h2 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h2><p><a href=\"https://github.com/ytdl-org/youtube-dl\">youtube-dl</a></p>\n<p>ffmpeg（可选）</p>\n<p>代理（比如socks5。没有*墙的情况下，请忽略本文）</p>\n<h2 id=\"Mac下安装\"><a href=\"#Mac下安装\" class=\"headerlink\" title=\"Mac下安装\"></a>Mac下安装</h2><p>1. 打开Terminal 输入：</p>\n<p>sudo curl -L <a href=\"https://yt-dl.org/downloads/latest/youtube-dl\">https://yt-dl.org/downloads/latest/youtube-dl</a> -o &#x2F;usr&#x2F;local&#x2F;bin&#x2F;youtube-dl</p>\n<pre><code>sudo chmod a+rx /usr/local/bin/youtube-dl\n</code></pre>\n<p>2. 下载ffmpeg搭配使用（可选，使用情形之一：使用参数来仅仅下载Youtube中的音频）</p>\n<p>下载后，解压缩至相同目录：&#x2F;usr&#x2F;local&#x2F;bin&#x2F;</p>\n<p>赋予权限：sudo chmod a+rx &#x2F;usr&#x2F;local&#x2F;bin&#x2F;ffmpeg </p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><p>Terminal运行：</p>\n<p>youtube-dl –proxy ‘socks5:&#x2F;&#x2F;127.0.0.1:10804&#x2F;‘ ‘<a href=\"https://www.youtube.com/watch?v=RrUQoAOC9%5C_w\">https://www.youtube.com/watch?v=RrUQoAOC9\\_w</a>‘</p>\n<p>使用socks5代理，连接本机的10804端口，去下载视频（包含音频）。</p>\n<p>youtube-dl –extract-audio –format bestaudio –proxy ‘socks5:&#x2F;&#x2F;127.0.0.1:10804&#x2F;‘ ‘<a href=\"https://www.youtube.com/watch?v=RrUQoAOC9%5C_w\">https://www.youtube.com/watch?v=RrUQoAOC9\\_w</a>‘</p>\n<p>需要ffmpeg支持，使用代理，并仅仅下载音频文件</p>\n<p>合并起来的转化成mp4的例子（请将sock5的代理和端口改成你所使用的情况，比如1080）：</p>\n<p>youtube-dl –proxy ‘socks5:&#x2F;&#x2F;127.0.0.1:10804&#x2F;‘ ‘<a href=\"https://www.youtube.com/watch?v=5MrM4-4xw7M\">https://www.youtube.com/watch?v=5MrM4-4xw7M</a>‘ –format mp4</p>\n<p>引用：</p>\n<p>教你一招如何将油管上的4K视频放到你的硬盘里<a href=\"https://www.bilibili.com/read/cv9635822\">https://www.bilibili.com/read/cv9635822</a></p>\n<p>youtube-dl详细使用说明<a href=\"https://github.com/ytdl-org/youtube-dl/blob/master/README.md#options\">https://github.com/ytdl-org/youtube-dl/blob/master/README.md#options</a></p>","categories":[{"name":"Youtube","path":"api/categories/Youtube.json"}],"tags":[{"name":"youtube-dl","path":"api/tags/youtube-dl.json"},{"name":"ffmpeg","path":"api/tags/ffmpeg.json"},{"name":"lux","path":"api/tags/lux.json"},{"name":"yt-dlp","path":"api/tags/yt-dlp.json"}]}