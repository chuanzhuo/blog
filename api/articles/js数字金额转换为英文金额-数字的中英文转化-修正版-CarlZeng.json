{"title":"js数字金额转换为英文金额(数字的中英文转化) 修正版-CarlZeng","slug":"js数字金额转换为英文金额-数字的中英文转化-修正版-CarlZeng","date":"2008-11-24T05:46:00.000Z","updated":"2023-10-02T02:27:28.934Z","comments":true,"path":"api/articles/js数字金额转换为英文金额-数字的中英文转化-修正版-CarlZeng.json","excerpt":"function englishmoney(num){var i;var hundreds;var tenth;var one;var thousand;var million;var billion;var numbers;var svar result;if((num=='')||(num==null)) return('');var str;str= '000000000000000000 ...","covers":null,"content":"<p>function englishmoney(num){var i;var hundreds;var tenth;var one;var thousand;var million;var billion;var numbers;var svar result;if((num&#x3D;&#x3D;’’)||(num&#x3D;&#x3D;null)) return(‘’);var str;str&#x3D; ‘000000000000000000 …</p>\n<!-- more -->\n<p>**function englishmoney(num){<br>var i;<br>var hundreds;<br>var tenth;<br>var one;<br>var thousand;<br>var million;<br>var billion;<br>var numbers;<br>var s<br>var result;  </p>\n<p>if((num&#x3D;&#x3D;’’)||(num&#x3D;&#x3D;null)) return(‘’);<br>var str;<br>str&#x3D; ‘000000000000000000 ‘+num.toString();<br>numbers&#x3D; ‘one two three four five ‘<br>+ ‘six seven eight nine ten ‘<br>+ ‘eleven twelve thirteen fourteen fifteen ‘<br>+ ‘sixteen seventeen eighteen nineteen ‘<br>+ ‘twenty thirty forty fifty ‘<br>+ ‘sixty seventy eighty ninety ‘;<br>String.prototype.Trim &#x3D; function(){return this.replace(&#x2F;^\\s+|\\s+$&#x2F;g, “ “);}<br>String.prototype.Ltrim &#x3D; function(){return this.replace(&#x2F;^\\s+&#x2F;g, “ “);}<br>String.prototype.Rtrim &#x3D; function(){return this.replace(&#x2F;\\s+$&#x2F;g, “ “);}<br>s&#x3D;str.substring(str.length-15,str.length);<br>billion&#x3D;parseInt(s.substring(0,3)); &#x2F;&#x2F;将12位整数分成4段：十亿、百万、千、百十个<br>million&#x3D;parseInt(s.substring(3,6));<br>thousand&#x3D;parseInt(s.substring(6,9));<br>result&#x3D; ‘ ‘;<br>i&#x3D;0;****<br>while(i &lt;&#x3D;3){<br>hundreds&#x3D;parseInt(s.substring(i*3,i*3+1));&#x2F;&#x2F;百位0-9<br>tenth&#x3D;parseInt(s.substring(i*3+1,i*3+2));<br>if(tenth&#x3D;&#x3D;1){one&#x3D;10+parseInt(s.substring(i*3+2,i*3+3));}<br>else {one&#x3D;0+parseInt(s.substring(i*3+2,i*3+3));}<br>&#x2F;&#x2F; one&#x3D;(CASE @tenth WHEN 1 THEN 10 ELSE 0 END)+CAST(SUBSTRING(@s,@i*3+3,1) AS int)–个位0-19<br>if(tenth &lt;&#x3D;1){tenth&#x3D;0;}**</p>\n<p>&#x2F;&#x2F; tenth&#x3D;(CASE WHEN @tenth &lt;&#x3D;1 THEN 0 ELSE @tenth END)–十位0、2-9<br>if((i&#x3D;&#x3D;1&amp;&amp;parseInt(billion)&gt; 0&amp;&amp;(parseInt(million)&gt; 0||parseInt(thousand)&gt; 0||parseInt(hundreds)&gt; 0))||<br>(i&#x3D;&#x3D;2&amp;&amp;(parseInt(billion)&gt; 0||parseInt(million)&gt; 0)&amp;&amp;(parseInt(thousand)&gt; 0||parseInt(hundreds)&gt; 0))||<br>(i&#x3D;&#x3D;3&amp;&amp;(parseInt(billion)&gt; 0||parseInt(million)&gt; 0||parseInt(thousand)&gt; 0)&amp;&amp;(parseInt(hundreds)&gt; 0)))<br>{result&#x3D;result+ ‘, ‘;}&#x2F;&#x2F;–百位不是0则每段之间加连接符,</p>\n<p>if(i&#x3D;&#x3D;3 &amp;&amp; (billion&gt; 0 || million&gt; 0 || thousand&gt; 0) &amp;&amp; (hundreds&#x3D;&#x3D;0 &amp;&amp; (tenth&gt; 0 || one&gt; 0)))<br>{result&#x3D;result+ ‘ and ‘;}&#x2F;&#x2F;–百位是0则加连接符AND</p>\n<p>if(hundreds&gt; 0)<br>{result&#x3D;result+numbers.substring(hundreds*10-10,hundreds*10).Rtrim()+ ‘ hundred ‘;}</p>\n<p>if( tenth&gt;&#x3D;2 &amp;&amp; tenth &lt;&#x3D;9)<br>{<br>if(hundreds&gt; 0)<br>{result&#x3D;result+ ‘ and ‘;}<br>result&#x3D;result+numbers.substring(tenth*10+170,tenth*10+180).Rtrim();<br>}</p>\n<p>if(one&gt;&#x3D;1 &amp;&amp; one &lt;&#x3D;19)<br>{<br>if(tenth&gt; 0)<br>{result&#x3D;result+ ‘- ‘;}<br>else<br>{<br>if(hundreds&gt; 0){result&#x3D;result+ ‘ and ‘;}<br>}<br>result&#x3D;result+numbers.substring(one*10-10,one*10).Rtrim();<br>}  </p>\n<p>if(i&#x3D;&#x3D;0 &amp;&amp; parseInt(billion)&gt; 0){<br>result&#x3D;result+ ‘ billion ‘;}<br>if(i&#x3D;&#x3D;1 &amp;&amp; parseInt(million)&gt; 0){<br>result&#x3D;result+ ‘ million ‘;}<br>if(i&#x3D;&#x3D;2 &amp;&amp; parseInt(thousand)&gt; 0){<br>result&#x3D;result+ ‘ thousand ‘;}<br>i&#x3D;i+1;<br>}<br>if(s.substring(13,15)!&#x3D; ‘00 ‘){<br>result&#x3D;result+ ‘ Only ‘;<br>if(s.substring(13,14)&#x3D;&#x3D; ‘0 ‘){<br>result&#x3D;result+ ‘zero ‘;}<br>else<br>{result&#x3D;result+numbers.substring(parseInt(s.substring(13,14))*10-10,parseInt(s.substring(13,14))*10).Rtrim();}<br>if(s.substring(14,15)!&#x3D; ‘0 ‘){<br>result&#x3D;result+ ‘ ‘+numbers.substring(parseInt(s.substring(14,15))*10-10,parseInt(s.substring(14,15))*10).Rtrim();}<br>}  </p>\n<p>return(result);<br>}</p>\n<p><strong>以上js实现 阿拉伯数字金额 转换为英文金额</strong></p>\n<p>请注意修改信息：<strong>str&#x3D; ‘000000000000000000 ‘+num.toString();&#x2F;&#x2F;最后一个0后面有一个空格总共18个0+1个空格19个字符。over</strong></p>\n<p><strong>使用方法：englishmoney( subtotal )</strong></p>\n<p>**<strong>englishmoney(</strong> 86833000.00) 结果会是：eighty - six eight hundred and thirty - three thousand Only<br><strong><strong>englishmoney(</strong></strong> 12334.00) 结果会是：twelve thousand , three hundred and thirty - four Only<br>**</p>\n","more":"<p>function englishmoney(num){var i;var hundreds;var tenth;var one;var thousand;var million;var billion;var numbers;var svar result;if((num&#x3D;&#x3D;’’)||(num&#x3D;&#x3D;null)) return(‘’);var str;str&#x3D; ‘000000000000000000 …</p>\n<!-- more -->\n<p>**function englishmoney(num){<br>var i;<br>var hundreds;<br>var tenth;<br>var one;<br>var thousand;<br>var million;<br>var billion;<br>var numbers;<br>var s<br>var result;  </p>\n<p>if((num&#x3D;&#x3D;’’)||(num&#x3D;&#x3D;null)) return(‘’);<br>var str;<br>str&#x3D; ‘000000000000000000 ‘+num.toString();<br>numbers&#x3D; ‘one two three four five ‘<br>+ ‘six seven eight nine ten ‘<br>+ ‘eleven twelve thirteen fourteen fifteen ‘<br>+ ‘sixteen seventeen eighteen nineteen ‘<br>+ ‘twenty thirty forty fifty ‘<br>+ ‘sixty seventy eighty ninety ‘;<br>String.prototype.Trim &#x3D; function(){return this.replace(&#x2F;^\\s+|\\s+$&#x2F;g, “ “);}<br>String.prototype.Ltrim &#x3D; function(){return this.replace(&#x2F;^\\s+&#x2F;g, “ “);}<br>String.prototype.Rtrim &#x3D; function(){return this.replace(&#x2F;\\s+$&#x2F;g, “ “);}<br>s&#x3D;str.substring(str.length-15,str.length);<br>billion&#x3D;parseInt(s.substring(0,3)); &#x2F;&#x2F;将12位整数分成4段：十亿、百万、千、百十个<br>million&#x3D;parseInt(s.substring(3,6));<br>thousand&#x3D;parseInt(s.substring(6,9));<br>result&#x3D; ‘ ‘;<br>i&#x3D;0;****<br>while(i &lt;&#x3D;3){<br>hundreds&#x3D;parseInt(s.substring(i*3,i*3+1));&#x2F;&#x2F;百位0-9<br>tenth&#x3D;parseInt(s.substring(i*3+1,i*3+2));<br>if(tenth&#x3D;&#x3D;1){one&#x3D;10+parseInt(s.substring(i*3+2,i*3+3));}<br>else {one&#x3D;0+parseInt(s.substring(i*3+2,i*3+3));}<br>&#x2F;&#x2F; one&#x3D;(CASE @tenth WHEN 1 THEN 10 ELSE 0 END)+CAST(SUBSTRING(@s,@i*3+3,1) AS int)–个位0-19<br>if(tenth &lt;&#x3D;1){tenth&#x3D;0;}**</p>\n<p>&#x2F;&#x2F; tenth&#x3D;(CASE WHEN @tenth &lt;&#x3D;1 THEN 0 ELSE @tenth END)–十位0、2-9<br>if((i&#x3D;&#x3D;1&amp;&amp;parseInt(billion)&gt; 0&amp;&amp;(parseInt(million)&gt; 0||parseInt(thousand)&gt; 0||parseInt(hundreds)&gt; 0))||<br>(i&#x3D;&#x3D;2&amp;&amp;(parseInt(billion)&gt; 0||parseInt(million)&gt; 0)&amp;&amp;(parseInt(thousand)&gt; 0||parseInt(hundreds)&gt; 0))||<br>(i&#x3D;&#x3D;3&amp;&amp;(parseInt(billion)&gt; 0||parseInt(million)&gt; 0||parseInt(thousand)&gt; 0)&amp;&amp;(parseInt(hundreds)&gt; 0)))<br>{result&#x3D;result+ ‘, ‘;}&#x2F;&#x2F;–百位不是0则每段之间加连接符,</p>\n<p>if(i&#x3D;&#x3D;3 &amp;&amp; (billion&gt; 0 || million&gt; 0 || thousand&gt; 0) &amp;&amp; (hundreds&#x3D;&#x3D;0 &amp;&amp; (tenth&gt; 0 || one&gt; 0)))<br>{result&#x3D;result+ ‘ and ‘;}&#x2F;&#x2F;–百位是0则加连接符AND</p>\n<p>if(hundreds&gt; 0)<br>{result&#x3D;result+numbers.substring(hundreds*10-10,hundreds*10).Rtrim()+ ‘ hundred ‘;}</p>\n<p>if( tenth&gt;&#x3D;2 &amp;&amp; tenth &lt;&#x3D;9)<br>{<br>if(hundreds&gt; 0)<br>{result&#x3D;result+ ‘ and ‘;}<br>result&#x3D;result+numbers.substring(tenth*10+170,tenth*10+180).Rtrim();<br>}</p>\n<p>if(one&gt;&#x3D;1 &amp;&amp; one &lt;&#x3D;19)<br>{<br>if(tenth&gt; 0)<br>{result&#x3D;result+ ‘- ‘;}<br>else<br>{<br>if(hundreds&gt; 0){result&#x3D;result+ ‘ and ‘;}<br>}<br>result&#x3D;result+numbers.substring(one*10-10,one*10).Rtrim();<br>}  </p>\n<p>if(i&#x3D;&#x3D;0 &amp;&amp; parseInt(billion)&gt; 0){<br>result&#x3D;result+ ‘ billion ‘;}<br>if(i&#x3D;&#x3D;1 &amp;&amp; parseInt(million)&gt; 0){<br>result&#x3D;result+ ‘ million ‘;}<br>if(i&#x3D;&#x3D;2 &amp;&amp; parseInt(thousand)&gt; 0){<br>result&#x3D;result+ ‘ thousand ‘;}<br>i&#x3D;i+1;<br>}<br>if(s.substring(13,15)!&#x3D; ‘00 ‘){<br>result&#x3D;result+ ‘ Only ‘;<br>if(s.substring(13,14)&#x3D;&#x3D; ‘0 ‘){<br>result&#x3D;result+ ‘zero ‘;}<br>else<br>{result&#x3D;result+numbers.substring(parseInt(s.substring(13,14))*10-10,parseInt(s.substring(13,14))*10).Rtrim();}<br>if(s.substring(14,15)!&#x3D; ‘0 ‘){<br>result&#x3D;result+ ‘ ‘+numbers.substring(parseInt(s.substring(14,15))*10-10,parseInt(s.substring(14,15))*10).Rtrim();}<br>}  </p>\n<p>return(result);<br>}</p>\n<p><strong>以上js实现 阿拉伯数字金额 转换为英文金额</strong></p>\n<p>请注意修改信息：<strong>str&#x3D; ‘000000000000000000 ‘+num.toString();&#x2F;&#x2F;最后一个0后面有一个空格总共18个0+1个空格19个字符。over</strong></p>\n<p><strong>使用方法：englishmoney( subtotal )</strong></p>\n<p>**<strong>englishmoney(</strong> 86833000.00) 结果会是：eighty - six eight hundred and thirty - three thousand Only<br><strong><strong>englishmoney(</strong></strong> 12334.00) 结果会是：twelve thousand , three hundred and thirty - four Only<br>**</p>\n","categories":[],"tags":[]}