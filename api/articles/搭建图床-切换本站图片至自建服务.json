{"title":"搭建图床 切换本站图片至自建服务","slug":"搭建图床-切换本站图片至自建服务","date":"2024-01-22T13:51:38.000Z","updated":"2024-02-27T01:34:12.508Z","comments":true,"path":"api/articles/搭建图床-切换本站图片至自建服务.json","excerpt":" [Figure] 家宽环境搭建兰空图床实践过程记录分享","covers":["https://img.carlzeng.top:3/i/2024/02/21/65d5961d744d1.png"],"content":"<img class=\"lozad\" data-src=\"https://img.carlzeng.top:3/i/2024/02/21/65d5961d744d1.png\">\n\n<p>家宽环境搭建兰空图床实践过程记录分享</p>\n<span id=\"more\"></span>\n\n<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.top:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n\n\n<h1 id=\"有什么用-怎么用\"><a href=\"#有什么用-怎么用\" class=\"headerlink\" title=\"有什么用&#x2F;怎么用\"></a>有什么用&#x2F;怎么用</h1><p>自建图床，自用的情况下暂时是够用的</p>\n<p>访问：<a href=\"https://img.carlzeng.top:3/\">Carl Notes 图床</a></p>\n<p>登录后台管理图床中的图片内容等操作</p>\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=image\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><h2 id=\"Docker搭建Lsky-Pro图床应用\"><a href=\"#Docker搭建Lsky-Pro图床应用\" class=\"headerlink\" title=\"Docker搭建Lsky Pro图床应用\"></a>Docker搭建Lsky Pro图床应用</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull dko0/lsky-pro</span><br><span class=\"line\"></span><br><span class=\"line\">docker run  --name lsky-pro --restart always -p 8091:80 -d -v /volume2/KingchuxingSSD512G/MacBookPro_Skitch:/var/www/html dko0/lsky-pro</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">转化为docker-compose</span></span><br><span class=\"line\">version: &#x27;3.9&#x27;</span><br><span class=\"line\">services:</span><br><span class=\"line\">    lsky-pro:</span><br><span class=\"line\">        image: dko0/lsky-pro</span><br><span class=\"line\">        volumes:</span><br><span class=\"line\">            - &#x27;/volume2/KingchuxingSSD512G/MacBookPro_Skitch:/var/www/html&#x27;</span><br><span class=\"line\">        ports:</span><br><span class=\"line\">            - &#x27;8091:80&#x27;</span><br><span class=\"line\">        restart: always</span><br><span class=\"line\">        container_name: lsky-pro</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置PicGO\"><a href=\"#配置PicGO\" class=\"headerlink\" title=\"配置PicGO\"></a>配置PicGO</h2><p>下载并安装PicGo，Mac OS X：[PicGo-2.4.0-beta.6-x64.dmg](<a href=\"https://github.com/Molunerfinn/PicGo/releases\">https://github.com/Molunerfinn/PicGo/releases</a><br><a href=\"https://picgo-release.molunerfinn.com/2.4.0-beta.6/PicGo-2.4.0-beta.6-x64.dmg\">https://picgo-release.molunerfinn.com/2.4.0-beta.6/PicGo-2.4.0-beta.6-x64.dmg</a>)</p>\n<p>打开主界面&#x2F;窗口，插件设置，搜索并安装插件名：lankong （我下载的版本是：lankong 1.1.3）</p>\n<p>图床配置 》 lankong</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Lsky Pro Version： V2</span><br><span class=\"line\">Server: https://img.carlzeng.top:3</span><br><span class=\"line\">Auth token: Bearer 1|ZRZcNz1E6hAuyV4LytmCqmGx5yST0g9OyhdptXXX</span><br></pre></td></tr></table></figure>\n\n<p>获取 Lsky Pro 兰空图床的Auth Token的方式，推荐(Terminal 运行命令)：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl --location --request POST &#x27;https://imgserver.com:3/api/v1/tokens&#x27; \\</span><br><span class=\"line\">\t--form &#x27;email=&quot;email@email.com&quot;&#x27; \\</span><br><span class=\"line\">\t--form &#x27;password=&quot;password&quot;&#x27;</span><br></pre></td></tr></table></figure>\n\n<p>请修改一下URL地址为访问自建兰空图床的URL地址，email和密码为登录图传所使用的用户名和密码</p>\n<p>本章节参见：<a href=\"https://github.com/hellodk34/picgo-plugin-lankong\">https://github.com/hellodk34/picgo-plugin-lankong</a></p>\n<p>测试：将文件拖拽到此处，或 点击上传，然后到兰空图床的URL后台，确认图片已上传至系统中</p>\n<h2 id=\"配置Typora\"><a href=\"#配置Typora\" class=\"headerlink\" title=\"配置Typora\"></a>配置Typora</h2><p>设置 偏好设置</p>\n<ol>\n<li><p>切换Typora到中文语言版（因为目前只有中文版有PicGo的选项）</p>\n</li>\n<li><p>偏好设置 》 图像 〉上传服务设定。 选择：PicGo.app</p>\n</li>\n<li><p>然后点击：验证图片上传选项  </p>\n<p>我的设置第一次显示失败了，按提示的信息查看日志：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">------Error Stack Begin------</span><br><span class=\"line\">Error: You must be logged in to use.</span><br><span class=\"line\">    at Object.We <span class=\"section\">[as handle]</span> (/Applications/PicGo.app/Contents/Resources/app.asar/node_modules/picgo/dist/index.cjs.js:1:21399)</span><br><span class=\"line\">    at processTicksAndRejections (node:internal/process/task_queues:96:5)</span><br><span class=\"line\">    at async je.doUpload (/Applications/PicGo.app/Contents/Resources/app.asar/node_modules/picgo/dist/index.cjs.js:1:19834)</span><br><span class=\"line\">    at async je.start (/Applications/PicGo.app/Contents/Resources/app.asar/node_modules/picgo/dist/index.cjs.js:1:18605)</span><br><span class=\"line\">    at async $t.upload (/Applications/PicGo.app/Contents/Resources/app.asar/node_modules/picgo/dist/index.cjs.js:1:74902)</span><br><span class=\"line\">    at async Object.upload (/Applications/PicGo.app/Contents/Resources/app.asar/index.js:2:686906)</span><br><span class=\"line\">    at async hr (/Applications/PicGo.app/Contents/Resources/app.asar/index.js:2:689655)</span><br><span class=\"line\">    at async /Applications/PicGo.app/Contents/Resources/app.asar/index.js:2:690736</span><br><span class=\"line\">-------Error Stack End------- </span><br><span class=\"line\">2024-02-21 13:37:13 <span class=\"section\">[PicGo INFO]</span> <span class=\"section\">[PicGo Server]</span> upload result  </span><br><span class=\"line\">2024-02-21 13:37:13 <span class=\"section\">[PicGo WARN]</span> <span class=\"section\">[PicGo Server]</span> upload failed, see picgo.log for more detail ↑ </span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>复制一张图片到剪贴板，在某个文章的内容中，粘贴图片；鼠标右键选中图片，上传图片</p>\n</li>\n<li><p>这时PicGo会显示待上传的图片，以及上传进度，直到图片被自动上传到图床中</p>\n</li>\n<li><p>全流程结束</p>\n</li>\n</ol>\n<p>本章节可以参见：<a href=\"https://support.typora.io/Upload-Image/#picgoapp-chinese-language-only\">Upload Images</a></p>\n<h2 id=\"关联Alist的目录\"><a href=\"#关联Alist的目录\" class=\"headerlink\" title=\"关联Alist的目录\"></a>关联Alist的目录</h2><p>这是根据个人自身的使用情况做的拓展，分享出图床中的所有图片</p>\n<p>修改docker-compose.yml, 添加映射：</p>\n<ul>\n<li>&#x2F;volume2&#x2F;KingchuxingSSD512G&#x2F;MacBookPro_Skitch:&#x2F;home&#x2F;share10</li>\n</ul>\n<p>docker exec -it alist &#x2F;bin&#x2F;bash</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir share7 &amp;&amp; mkdir share8 &amp;&amp; mkdir share9 &amp;&amp; mkdir share10 &amp;&amp; mkdir shar</span><br><span class=\"line\">e11 &amp;&amp; mkdir share12 </span><br></pre></td></tr></table></figure>\n\n\n\n<p>重启docker-compose</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">这是不会成功的，需要使用docker-compose down 和 up</span></span><br><span class=\"line\">docker-compose restart</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose down</span><br><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n\n\n<p>进入Alist的后台管理，新增 “本机存储”</p>\n<p>映射&#x2F;home&#x2F;share10 至外观目录：&#x2F;图床MacBookPro_Skitch</p>\n<p>效果如：<a href=\"https://file.carlzeng.top:3/%E5%9B%BE%E5%BA%8AMacBookPro_Skitch/storage/app/uploads/2024/02/21\">https://file.carlzeng.top:3/%E5%9B%BE%E5%BA%8AMacBookPro_Skitch/storage/app/uploads/2024/02/21</a></p>\n<h2 id=\"NPM反代后带端口访问\"><a href=\"#NPM反代后带端口访问\" class=\"headerlink\" title=\"NPM反代后带端口访问\"></a>NPM反代后带端口访问</h2><p>1、修改&#x2F;config&#x2F;app.php （大约在57-60行的地方，修改以下2行内容）</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//原先：</span></span><br><span class=\"line\">  <span class=\"string\">&#x27;url&#x27;</span> =&gt; <span class=\"title function_ invoke__\">env</span>(<span class=\"string\">&#x27;APP_URL&#x27;</span>, <span class=\"string\">&#x27;http://localhost&#x27;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//新：</span></span><br><span class=\"line\">  <span class=\"string\">&#x27;url&#x27;</span> =&gt; <span class=\"title function_ invoke__\">env</span>(<span class=\"string\">&#x27;APP_URL&#x27;</span>, <span class=\"string\">&#x27;https://xxxxx.com:4443&#x27;</span>),</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//原先：</span></span><br><span class=\"line\">  <span class=\"string\">&#x27;asset_url&#x27;</span> =&gt; <span class=\"title function_ invoke__\">env</span>(<span class=\"string\">&#x27;ASSET_URL&#x27;</span>, <span class=\"literal\">null</span>),</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//新：</span></span><br><span class=\"line\">  <span class=\"string\">&#x27;asset_url&#x27;</span> =&gt; <span class=\"title function_ invoke__\">env</span>(<span class=\"string\">&#x27;ASSET_URL&#x27;</span>, <span class=\"string\">&#x27;https://xxxxx.com:4443&#x27;</span>),</span><br></pre></td></tr></table></figure>\n\n<p>请根据自身情况修改<a href=\"https://xxxxx.com:4443为自己的域名和端口。\">https://xxxxx.com:4443为自己的域名和端口。</a></p>\n<p>2、修改 &#x2F;app&#x2F;Providers&#x2F;ApServiceProvider.php  第 32 行下面追加一行：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Illuminate\\Support\\Facades\\URL::<span class=\"title function_ invoke__\">forceScheme</span>(<span class=\"string\">&#x27;https&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p><a href=\"https://hellodk.cn/post/964\">写了一个适配兰空图床 Lsky Pro 的 PicGo 图片上传插件</a>  <a href=\"https://github.com/hellodk34/picgo-plugin-lankong\">picgo-plugin-lankong</a></p>\n<p><a href=\"https://github.com/lsky-org/lsky-pro/issues/317\">静态资源加载失败 #317</a></p>\n<p><a href=\"https://github.com/lsky-org/lsky-pro/issues/607\">https+域名+端口的访问问题，NginxProxyManager反代 #607</a></p>\n<p><a href=\"https://xyzbz.cn/archives/1080/\">树莓派通过Docker部署兰空图床</a></p>\n","more":"<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.top:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n\n\n<h1 id=\"有什么用-怎么用\"><a href=\"#有什么用-怎么用\" class=\"headerlink\" title=\"有什么用&#x2F;怎么用\"></a>有什么用&#x2F;怎么用</h1><p>自建图床，自用的情况下暂时是够用的</p>\n<p>访问：<a href=\"https://img.carlzeng.top:3/\">Carl Notes 图床</a></p>\n<p>登录后台管理图床中的图片内容等操作</p>\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=image\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><h2 id=\"Docker搭建Lsky-Pro图床应用\"><a href=\"#Docker搭建Lsky-Pro图床应用\" class=\"headerlink\" title=\"Docker搭建Lsky Pro图床应用\"></a>Docker搭建Lsky Pro图床应用</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull dko0/lsky-pro</span><br><span class=\"line\"></span><br><span class=\"line\">docker run  --name lsky-pro --restart always -p 8091:80 -d -v /volume2/KingchuxingSSD512G/MacBookPro_Skitch:/var/www/html dko0/lsky-pro</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">转化为docker-compose</span></span><br><span class=\"line\">version: &#x27;3.9&#x27;</span><br><span class=\"line\">services:</span><br><span class=\"line\">    lsky-pro:</span><br><span class=\"line\">        image: dko0/lsky-pro</span><br><span class=\"line\">        volumes:</span><br><span class=\"line\">            - &#x27;/volume2/KingchuxingSSD512G/MacBookPro_Skitch:/var/www/html&#x27;</span><br><span class=\"line\">        ports:</span><br><span class=\"line\">            - &#x27;8091:80&#x27;</span><br><span class=\"line\">        restart: always</span><br><span class=\"line\">        container_name: lsky-pro</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"配置PicGO\"><a href=\"#配置PicGO\" class=\"headerlink\" title=\"配置PicGO\"></a>配置PicGO</h2><p>下载并安装PicGo，Mac OS X：[PicGo-2.4.0-beta.6-x64.dmg](<a href=\"https://github.com/Molunerfinn/PicGo/releases\">https://github.com/Molunerfinn/PicGo/releases</a><br><a href=\"https://picgo-release.molunerfinn.com/2.4.0-beta.6/PicGo-2.4.0-beta.6-x64.dmg\">https://picgo-release.molunerfinn.com/2.4.0-beta.6/PicGo-2.4.0-beta.6-x64.dmg</a>)</p>\n<p>打开主界面&#x2F;窗口，插件设置，搜索并安装插件名：lankong （我下载的版本是：lankong 1.1.3）</p>\n<p>图床配置 》 lankong</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Lsky Pro Version： V2</span><br><span class=\"line\">Server: https://img.carlzeng.top:3</span><br><span class=\"line\">Auth token: Bearer 1|ZRZcNz1E6hAuyV4LytmCqmGx5yST0g9OyhdptXXX</span><br></pre></td></tr></table></figure>\n\n<p>获取 Lsky Pro 兰空图床的Auth Token的方式，推荐(Terminal 运行命令)：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl --location --request POST &#x27;https://imgserver.com:3/api/v1/tokens&#x27; \\</span><br><span class=\"line\">\t--form &#x27;email=&quot;email@email.com&quot;&#x27; \\</span><br><span class=\"line\">\t--form &#x27;password=&quot;password&quot;&#x27;</span><br></pre></td></tr></table></figure>\n\n<p>请修改一下URL地址为访问自建兰空图床的URL地址，email和密码为登录图传所使用的用户名和密码</p>\n<p>本章节参见：<a href=\"https://github.com/hellodk34/picgo-plugin-lankong\">https://github.com/hellodk34/picgo-plugin-lankong</a></p>\n<p>测试：将文件拖拽到此处，或 点击上传，然后到兰空图床的URL后台，确认图片已上传至系统中</p>\n<h2 id=\"配置Typora\"><a href=\"#配置Typora\" class=\"headerlink\" title=\"配置Typora\"></a>配置Typora</h2><p>设置 偏好设置</p>\n<ol>\n<li><p>切换Typora到中文语言版（因为目前只有中文版有PicGo的选项）</p>\n</li>\n<li><p>偏好设置 》 图像 〉上传服务设定。 选择：PicGo.app</p>\n</li>\n<li><p>然后点击：验证图片上传选项  </p>\n<p>我的设置第一次显示失败了，按提示的信息查看日志：</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">------Error Stack Begin------</span><br><span class=\"line\">Error: You must be logged in to use.</span><br><span class=\"line\">    at Object.We <span class=\"section\">[as handle]</span> (/Applications/PicGo.app/Contents/Resources/app.asar/node_modules/picgo/dist/index.cjs.js:1:21399)</span><br><span class=\"line\">    at processTicksAndRejections (node:internal/process/task_queues:96:5)</span><br><span class=\"line\">    at async je.doUpload (/Applications/PicGo.app/Contents/Resources/app.asar/node_modules/picgo/dist/index.cjs.js:1:19834)</span><br><span class=\"line\">    at async je.start (/Applications/PicGo.app/Contents/Resources/app.asar/node_modules/picgo/dist/index.cjs.js:1:18605)</span><br><span class=\"line\">    at async $t.upload (/Applications/PicGo.app/Contents/Resources/app.asar/node_modules/picgo/dist/index.cjs.js:1:74902)</span><br><span class=\"line\">    at async Object.upload (/Applications/PicGo.app/Contents/Resources/app.asar/index.js:2:686906)</span><br><span class=\"line\">    at async hr (/Applications/PicGo.app/Contents/Resources/app.asar/index.js:2:689655)</span><br><span class=\"line\">    at async /Applications/PicGo.app/Contents/Resources/app.asar/index.js:2:690736</span><br><span class=\"line\">-------Error Stack End------- </span><br><span class=\"line\">2024-02-21 13:37:13 <span class=\"section\">[PicGo INFO]</span> <span class=\"section\">[PicGo Server]</span> upload result  </span><br><span class=\"line\">2024-02-21 13:37:13 <span class=\"section\">[PicGo WARN]</span> <span class=\"section\">[PicGo Server]</span> upload failed, see picgo.log for more detail ↑ </span><br></pre></td></tr></table></figure>\n\n\n</li>\n<li><p>复制一张图片到剪贴板，在某个文章的内容中，粘贴图片；鼠标右键选中图片，上传图片</p>\n</li>\n<li><p>这时PicGo会显示待上传的图片，以及上传进度，直到图片被自动上传到图床中</p>\n</li>\n<li><p>全流程结束</p>\n</li>\n</ol>\n<p>本章节可以参见：<a href=\"https://support.typora.io/Upload-Image/#picgoapp-chinese-language-only\">Upload Images</a></p>\n<h2 id=\"关联Alist的目录\"><a href=\"#关联Alist的目录\" class=\"headerlink\" title=\"关联Alist的目录\"></a>关联Alist的目录</h2><p>这是根据个人自身的使用情况做的拓展，分享出图床中的所有图片</p>\n<p>修改docker-compose.yml, 添加映射：</p>\n<ul>\n<li>&#x2F;volume2&#x2F;KingchuxingSSD512G&#x2F;MacBookPro_Skitch:&#x2F;home&#x2F;share10</li>\n</ul>\n<p>docker exec -it alist &#x2F;bin&#x2F;bash</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir share7 &amp;&amp; mkdir share8 &amp;&amp; mkdir share9 &amp;&amp; mkdir share10 &amp;&amp; mkdir shar</span><br><span class=\"line\">e11 &amp;&amp; mkdir share12 </span><br></pre></td></tr></table></figure>\n\n\n\n<p>重启docker-compose</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">这是不会成功的，需要使用docker-compose down 和 up</span></span><br><span class=\"line\">docker-compose restart</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose down</span><br><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n\n\n<p>进入Alist的后台管理，新增 “本机存储”</p>\n<p>映射&#x2F;home&#x2F;share10 至外观目录：&#x2F;图床MacBookPro_Skitch</p>\n<p>效果如：<a href=\"https://file.carlzeng.top:3/%E5%9B%BE%E5%BA%8AMacBookPro_Skitch/storage/app/uploads/2024/02/21\">https://file.carlzeng.top:3/%E5%9B%BE%E5%BA%8AMacBookPro_Skitch/storage/app/uploads/2024/02/21</a></p>\n<h2 id=\"NPM反代后带端口访问\"><a href=\"#NPM反代后带端口访问\" class=\"headerlink\" title=\"NPM反代后带端口访问\"></a>NPM反代后带端口访问</h2><p>1、修改&#x2F;config&#x2F;app.php （大约在57-60行的地方，修改以下2行内容）</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//原先：</span></span><br><span class=\"line\">  <span class=\"string\">&#x27;url&#x27;</span> =&gt; <span class=\"title function_ invoke__\">env</span>(<span class=\"string\">&#x27;APP_URL&#x27;</span>, <span class=\"string\">&#x27;http://localhost&#x27;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//新：</span></span><br><span class=\"line\">  <span class=\"string\">&#x27;url&#x27;</span> =&gt; <span class=\"title function_ invoke__\">env</span>(<span class=\"string\">&#x27;APP_URL&#x27;</span>, <span class=\"string\">&#x27;https://xxxxx.com:4443&#x27;</span>),</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//原先：</span></span><br><span class=\"line\">  <span class=\"string\">&#x27;asset_url&#x27;</span> =&gt; <span class=\"title function_ invoke__\">env</span>(<span class=\"string\">&#x27;ASSET_URL&#x27;</span>, <span class=\"literal\">null</span>),</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//新：</span></span><br><span class=\"line\">  <span class=\"string\">&#x27;asset_url&#x27;</span> =&gt; <span class=\"title function_ invoke__\">env</span>(<span class=\"string\">&#x27;ASSET_URL&#x27;</span>, <span class=\"string\">&#x27;https://xxxxx.com:4443&#x27;</span>),</span><br></pre></td></tr></table></figure>\n\n<p>请根据自身情况修改<a href=\"https://xxxxx.com:4443为自己的域名和端口。\">https://xxxxx.com:4443为自己的域名和端口。</a></p>\n<p>2、修改 &#x2F;app&#x2F;Providers&#x2F;ApServiceProvider.php  第 32 行下面追加一行：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Illuminate\\Support\\Facades\\URL::<span class=\"title function_ invoke__\">forceScheme</span>(<span class=\"string\">&#x27;https&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p><a href=\"https://hellodk.cn/post/964\">写了一个适配兰空图床 Lsky Pro 的 PicGo 图片上传插件</a>  <a href=\"https://github.com/hellodk34/picgo-plugin-lankong\">picgo-plugin-lankong</a></p>\n<p><a href=\"https://github.com/lsky-org/lsky-pro/issues/317\">静态资源加载失败 #317</a></p>\n<p><a href=\"https://github.com/lsky-org/lsky-pro/issues/607\">https+域名+端口的访问问题，NginxProxyManager反代 #607</a></p>\n<p><a href=\"https://xyzbz.cn/archives/1080/\">树莓派通过Docker部署兰空图床</a></p>","categories":[{"name":"图床","path":"api/categories/图床.json"}],"tags":[{"name":"Docker","path":"api/tags/Docker.json"},{"name":"NPM","path":"api/tags/NPM.json"},{"name":"图床","path":"api/tags/图床.json"},{"name":"LskyPro","path":"api/tags/LskyPro.json"}]}