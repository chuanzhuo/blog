{"title":"第三方数据库系统与NetSuite对接案例","slug":"第三方数据库系统与NetSuite对接案例","date":"2024-04-22T00:25:29.000Z","updated":"2024-04-24T02:53:58.496Z","comments":true,"path":"api/articles/第三方数据库系统与NetSuite对接案例.json","excerpt":" [Figure] ","covers":null,"content":"<img class=\"lozad\" data-src=\"\">\n\n<span id=\"more\"></span>\n<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.top:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n\n\n<h1 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h1><p>NetSuite ERP 系统 -  <a href=\"http://www.netsuite.com/\">www.netsuite.com</a></p>\n<p>第三方系统 - 各种系统，比如CRM，电子商务系统，独立的Portal，PHP程序应用等等；这里特指第三方系统有自己的底层数据库存储和自己的专项业务逻辑</p>\n<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>如何将第三方的系统数据无缝且自动化地与NetSuite系统做对接，思路有三：</p>\n<ol>\n<li>使用中间件系统，如Appche camle，将其连接NetSuite数据且连接第三方的数据库系统，然后定义数据的流转逻辑</li>\n<li>使用第三方系统的开发，呼叫NetSuite的Web Service API，然后在第三方系统的开发中，定义数据的流转逻辑，这时相关的触发点逻辑可以定义在第三方系统中</li>\n<li>使用NetSuite的Map Reduce 或 Schedule Script 来定时地轮训第三方数据库系统的数据，同时根据查询到的数据库记录情况，来定义数据的流转逻辑等操作。</li>\n</ol>\n<p>本文着重案例讲解第三种方式。</p>\n<p>那么如何在SuiteScript中，呼叫第三方数据库系统呢？比如第三方数据库系统是MariaDB（在比如它是开源调查问卷系统SurveyKing的数据）</p>\n<p>「SQL over HTTP」式方案 </p>\n<p>数据库本身的 API 都可以直接做成 REST 的形式方便前端一把梭，例子就是很方便做小应用的 CouchDB </p>\n<p>GraphQL </p>\n<p>ODATA</p>\n<p>VinceZK&#x2F;json-on-relations</p>\n<ol>\n<li>使用现有的SQL over HTTP工具：有一些现成的工具可以将SQL查询转换为HTTP请求。例如，PostgREST是一个针对PostgreSQL数据库的开源工具，它提供了一个RESTful API，可以直接将SQL查询作为HTTP请求发送到数据库。你可以探索是否有类似的工具适用于MariaDB数据库。</li>\n</ol>\n<p><a href=\"https://github.com/mmaelzer/sqld/tree/master\">https://github.com/mmaelzer/sqld/tree/master</a></p>\n<h1 id=\"怎么用\"><a href=\"#怎么用\" class=\"headerlink\" title=\"怎么用\"></a>怎么用</h1><h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=netsuite\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p>部署开源调查问卷系统SurveyKing</p>\n","more":"<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.top:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n\n\n<h1 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h1><p>NetSuite ERP 系统 -  <a href=\"http://www.netsuite.com/\">www.netsuite.com</a></p>\n<p>第三方系统 - 各种系统，比如CRM，电子商务系统，独立的Portal，PHP程序应用等等；这里特指第三方系统有自己的底层数据库存储和自己的专项业务逻辑</p>\n<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>如何将第三方的系统数据无缝且自动化地与NetSuite系统做对接，思路有三：</p>\n<ol>\n<li>使用中间件系统，如Appche camle，将其连接NetSuite数据且连接第三方的数据库系统，然后定义数据的流转逻辑</li>\n<li>使用第三方系统的开发，呼叫NetSuite的Web Service API，然后在第三方系统的开发中，定义数据的流转逻辑，这时相关的触发点逻辑可以定义在第三方系统中</li>\n<li>使用NetSuite的Map Reduce 或 Schedule Script 来定时地轮训第三方数据库系统的数据，同时根据查询到的数据库记录情况，来定义数据的流转逻辑等操作。</li>\n</ol>\n<p>本文着重案例讲解第三种方式。</p>\n<p>那么如何在SuiteScript中，呼叫第三方数据库系统呢？比如第三方数据库系统是MariaDB（在比如它是开源调查问卷系统SurveyKing的数据）</p>\n<p>「SQL over HTTP」式方案 </p>\n<p>数据库本身的 API 都可以直接做成 REST 的形式方便前端一把梭，例子就是很方便做小应用的 CouchDB </p>\n<p>GraphQL </p>\n<p>ODATA</p>\n<p>VinceZK&#x2F;json-on-relations</p>\n<ol>\n<li>使用现有的SQL over HTTP工具：有一些现成的工具可以将SQL查询转换为HTTP请求。例如，PostgREST是一个针对PostgreSQL数据库的开源工具，它提供了一个RESTful API，可以直接将SQL查询作为HTTP请求发送到数据库。你可以探索是否有类似的工具适用于MariaDB数据库。</li>\n</ol>\n<p><a href=\"https://github.com/mmaelzer/sqld/tree/master\">https://github.com/mmaelzer/sqld/tree/master</a></p>\n<h1 id=\"怎么用\"><a href=\"#怎么用\" class=\"headerlink\" title=\"怎么用\"></a>怎么用</h1><h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=netsuite\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p>部署开源调查问卷系统SurveyKing</p>","categories":[{"name":"NetSuite","path":"api/categories/NetSuite.json"}],"tags":[{"name":"NetSuite","path":"api/tags/NetSuite.json"}]}