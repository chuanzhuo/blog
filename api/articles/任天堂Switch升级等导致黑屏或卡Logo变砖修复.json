{"title":"任天堂Switch升级等导致黑屏或卡Logo变砖修复","slug":"任天堂Switch升级等导致黑屏或卡Logo变砖修复","date":"2024-10-19T14:36:16.000Z","updated":"2025-05-16T11:35:09.708Z","comments":true,"path":"api/articles/任天堂Switch升级等导致黑屏或卡Logo变砖修复.json","excerpt":" [Figure] MAC电脑修复Switch卡Logo黑屏, 误点升级后卡logo, 升级致黑屏重装(系统降级)","covers":["https://img.carlzeng.com:3/i/2024/10/20/67148c835f25d.png","https://img.carlzeng.com:3/i/2024/10/20/671490ce2485e.png","https://img.carlzeng.com:3/i/2024/10/27/671dd42ad1b45.png","https://img.carlzeng.com:3/i/2025/05/16/68271d9eab507.png"],"content":"<img class=\"lozad\" data-src=\"https://img.carlzeng.com:3/i/2024/10/20/67148c835f25d.png\">\n\n<p>MAC电脑修复Switch卡Logo黑屏, 误点升级后卡logo, 升级致黑屏重装(系统降级)</p>\n<span id=\"more\"></span>\n\n<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.com:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n强调：备份很重要！！！当你的正版系统是正常可运行的时候，务必要做一个本主机的NAND备份，因为它是独一无二的备份。操作步骤请搜索文章: 如何备份NAND\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. hekate - tools - Backup eMMC - eMMC BOOT0 &amp; BOOT1</span><br><span class=\"line\">2. hekate - tools - Backup eMMC - eMMC RAW GPP</span><br><span class=\"line\"></span><br><span class=\"line\">3. [可选步骤]在电脑上备份SD卡中backup文件夹全部内容.  </span><br></pre></td></tr></table></figure>\n\n<p>第一件事：备份nand<br>无论你是不是单系统\\双系统，都备份一次，有双系统的，可以把自己的EMUMMC备份到电脑，这个也是NAND备份。这个备份可能会在未来，救你机器一命。<a href=\"https://www.bilibili.com/video/BV1CY4y1s7uS/\">备份视频教程.</a></p>\n<p>第二件事：提取prod.keys备份，用来不可知的时候手动救砖。<br><a href=\"https://www.bilibili.com/read/cv15542214\">prod.keys提取教程</a></p>\n<p>[可选步骤: 验证rawnand.bin文件] <a href=\"https://url50.ctfile.com/f/2272250-552992132-4de792\">nxnandmanager下载地址</a>（访问密码：3610）</p>\n<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>开机正版系统卡logo黑屏, 真实系统报错</p>\n<ul>\n<li>手误点击了升级 重启后黑屏变砖</li>\n<li>switch自动升级17.0.0 开机正版系统卡logo黑屏</li>\n<li>升级过程中断电, 重启后黑屏或卡logo</li>\n<li>手动系统升级导致黑屏或卡logo</li>\n<li>系统错误导致卡Logo</li>\n<li>WIFI芯片故障导致无法连接WIFI或蓝牙或卡Logo<ul>\n<li>这个需要先修复硬件</li>\n</ul>\n</li>\n</ul>\n<p> switch不管在正版系统还是真实系统上通过网络自动升级至17.0.0，再次启动，不管是在正版系统上开机卡logo黑屏，还是真实系统报错，还是switch的维护模式均无法进入系统。</p>\n<p>相关大佬的说法：</p>\n<pre><code>说法1：这次升级17.0卡nintendo后logo的，可能就算大气层更新支持17.0.0，也需要还原本机EMMC备份以后才能进正版系统升级。\n\n说法2：目前有可能之前误升级17.0.0正版系统导致卡logo变砖需要恢复EMMC备份后，从低于17.0.0的系统更新大气层1.6.0以后采取离线方式升级才行。卡logo是因为系统升级重建system分区的出错导致变砖，所以这个需要特别的注意。\n</code></pre>\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.com:3/appsearch?q=switch\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<p>工具MAC</p>\n<ul>\n<li><a href=\"https://suchmememanyskill.github.io/apps/emmchaccgen/#a-replacement-for-choidujour\">EmmcHaccGen</a></li>\n</ul>\n<p>EmmcHaccGen generates a firmware package (BOOT0, BOOT1, Bcpkg2 1-4 and the 120 system save) from a firmware dump and a valid prod.keys. This can be used to unbrick switches or to upgrade&#x2F;downgrade the console from rcm</p>\n<p>EmmcHaccGen is written in c#, running under .net core (3.1). It should work on windows, macos or linux.</p>\n<p><a href=\"https://github.com/suchmememanyskill/EmmcHaccGen/releases/tag/3.1.0\">https://github.com/suchmememanyskill/EmmcHaccGen/releases/tag/3.1.0</a></p>\n<p>EmmcHaccGen.CLI.zip</p>\n<ul>\n<li>FUSE filesystem Python scripts for Nintendo console files <a href=\"https://github.com/ihaveamac/ninfs/releases/tag/v2.0\">ninfs 2.0 Latest</a></li>\n</ul>\n<p>Mount my switch rawNAND like it’s possible with HacDiskMount on Windows</p>\n<ul>\n<li>.NET 7.0</li>\n</ul>\n<p>EmmcHaccGen需要用到.NET 7.0 到<a href=\"https://learn.microsoft.com/en-us/dotnet/core/install/macos\">微软的网站下载MAC版本的</a>.</p>\n<h1 id=\"操作步骤如下\"><a href=\"#操作步骤如下\" class=\"headerlink\" title=\"操作步骤如下\"></a>操作步骤如下</h1><h1 id=\"1-导出系统密钥\"><a href=\"#1-导出系统密钥\" class=\"headerlink\" title=\"1.导出系统密钥\"></a>1.导出系统密钥</h1><p>工具:</p>\n<p>Lockpick_RCM1.9.7.bin<br>TegraExplorer.bin<br>EmmcHaccGen.zip(Windows用户)  EmmcHaccGen.CLI(MAC用户)<br>SystemRestoreV3.te</p>\n<p>Firmware.16.1.0.zip<br>Firmware.17.0.0.zip</p>\n<p>工具都集成在了网盘中分享的文件: Firmware16.1.0+1.5.5大气层联机.zip</p>\n<p>①关闭switch（按住电源键15s可实现switch的强制关机），取出TF卡，复制Lockpick_RCM1.9.7.bin、TegraExplorer.bin两个文件到TF卡上大气层的 bootloader\\payloads 文件夹下；</p>\n<p>②通过hekate启动系统，在hetake界面下选择payloads；</p>\n<p>③用密钥获取工具Lockpick_RCM1.9.7.bin启动；</p>\n<p> ④启动后，选择第一个项：Dump from sysnand，导出系统密钥，这里按音量+和音量-可以移动光标，按电源键确认；</p>\n<p>⑤稍等一会，就会显示导出密钥的界面；</p>\n<p>⑥按任意键返回最初的页面，将光标移动到Power off，按电源键关机；</p>\n<p>⑦取出TF卡，导出的密钥文件在TF卡根目录的switch文件夹下，文件名为：prod.keys</p>\n<p>将这个密钥文件prod.keys拷贝到电脑中与16.1.0相同的目录层, 下一个步骤需要用到</p>\n<p>目录层级关系为:</p>\n<ul>\n<li>Firmware 16.1.0</li>\n<li>prod.keys</li>\n<li>EmmcHaccGen.dll</li>\n<li>EmmcHaccGen…..等EmmcHaccGen.CLI.zip文件解压后的所有文件</li>\n</ul>\n<h1 id=\"2-制作降级系统\"><a href=\"#2-制作降级系统\" class=\"headerlink\" title=\"2.制作降级系统\"></a>2.制作降级系统</h1><p>①新建一个文件夹在电脑硬盘根目录下，解压EmmcHaccGen.zip 到该文件夹，将固件Firmware.16.1.0.zip系统固件以及刚刚生成的 prod.keys 密钥文件同时拷贝到该文件夹下；</p>\n<p>②在此目录启动 CMD 执行命令</p>\n<p>Windows命令如下：</p>\n<p>软破和v1焊接（既注入和补丁机）：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">EmmcHaccGen</span> --keys prod.<span class=\"property\">keys</span> --fw <span class=\"number\">16.1</span><span class=\"number\">.0</span> --no-autorcm</span><br></pre></td></tr></table></figure>\n\n<p>续航和lite以及OLED：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">EmmcHaccGen</span> --keys prod.<span class=\"property\">keys</span> --fw <span class=\"number\">16.1</span><span class=\"number\">.0</span> --mariko</span><br></pre></td></tr></table></figure>\n\n<p>MAC命令如下:</p>\n<p>工具 EmmcHaccGen.CLI.zip</p>\n<p>软破和v1焊接：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dotnet EmmcHaccGen.dll --keys prod.keys --fw 16.1.0 --no-autorcm</span><br></pre></td></tr></table></figure>\n\n\n\n<p>续航和lite以及OLED：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 参数内容 prod.keys 是当前执行目录下, 在上一个步骤提取到的prod.keys</span><br><span class=\"line\"># 参数内容 16.1.0 是当前执行目录下固件文件夹的,文件夹名称</span><br><span class=\"line\"># 参数内容 --mariko 代表适用于 续航和lite以及OLED</span><br><span class=\"line\">dotnet EmmcHaccGen.dll --keys prod.keys --fw 16.1.0 --mariko</span><br><span class=\"line\"></span><br><span class=\"line\">dotnet EmmcHaccGen.dll --keys prod.keys --fw &#x27;Frimware 16.10&#x27; --mariko</span><br></pre></td></tr></table></figure>\n\n<p><img data-src=\"https://img.carlzeng.com:3/i/2024/10/20/671490ce2485e.png\" alt=\"image-20241020131034691\"></p>\n<p>结果要实现: 同目录下会生成一个新文件夹: a-16.1.0_exFAT</p>\n<p>③将SystemRestoreV3.te复制到这个文件夹下</p>\n<p>④将这个文件夹拷贝到SD卡的目录, 下一个步骤需要用到</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#查看Mac系统自动生成的隐藏文件</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> -a | egrep <span class=\"string\">&quot;^\\.[_a-zA-Z0-9]+&quot;</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Mac清理系统自动生成的隐藏文件</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> -a | egrep <span class=\"string\">&quot;^\\.[_a-zA-Z0-9]+&quot;</span> | xargs <span class=\"built_in\">rm</span> -rf</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"3-手动系统降级\"><a href=\"#3-手动系统降级\" class=\"headerlink\" title=\"3.手动系统降级\"></a>3.手动系统降级</h1><p>​    ①通过hekate启动系统，在hetake界面下选择payloads，用密钥获取工具TegraExplorer.bin启动；</p>\n<p>​    ②选择Browse SD；</p>\n<p>​    ③进入SD后，选择我们刚才拷贝进去的文件夹NX-16.1.0_exFAT；</p>\n<p>​    ④选择SystemRestoreV3.te文件；</p>\n<p>​    ⑤确认后，选择Launch Script；</p>\n<p>​    ⑥进入后，选择Apply on Sysmmc;</p>\n<p>​    ⑦进入后，选择Restore Both；</p>\n<p>​    ⑧等待几秒后按电源键确认，开始备份系统以及恢复系统；</p>\n<p>​    ⑨耐心等待直至完成，可能需要10分钟左右；当出现fully down 或者 press any key to exit 时，证明恢复已经完成；一路按B到最顶层，再选择关机。</p>\n<p>​    ⑩再次通过hekate启动系统，在hetake界面下选择Launch，选择真实系统启动，这时系统能启动了，进入系统可查看系统版本是16.1.0|AMS 1.6.0|S，正版系统也能进入。</p>\n<h1 id=\"4-离线升级系统\"><a href=\"#4-离线升级系统\" class=\"headerlink\" title=\"4.离线升级系统\"></a>4.离线升级系统</h1><p>  ①将固件Firmware.17.0.0.zip解压至TF卡根目录下；</p>\n<h2 id=\"离线升级正版系统\"><a href=\"#离线升级正版系统\" class=\"headerlink\" title=\"离线升级正版系统\"></a>离线升级正版系统</h2><p>​    ②通过hekate启动系统，在hetake界面下选择Launch，选择真实系统启动；</p>\n<p>​    ③进入真实系统，选择相册，运行Daybreak；</p>\n<p>再次通过hekate启动系统，在hetake界面下选择Launch，选择真实系统启动，进入系统可查看系统版本是17.0.0|AMS 1.6.0|S；正版系统也能进入。</p>\n<h2 id=\"离线升级虚拟系统\"><a href=\"#离线升级虚拟系统\" class=\"headerlink\" title=\"离线升级虚拟系统\"></a>离线升级虚拟系统</h2><p>进大气层虚拟系统, Daybreak</p>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p><a href=\"https://www.bilibili.com/read/cv27072776/\">记switch自动升级17.0.0，开机正版系统卡logo黑屏，真实系统报错等处理事宜</a></p>\n<hr>\n<p>20241022待核实内容</p>\n<p>OLED修复系统, 卡在了第二个Logo(Switch Logo)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dotnet EmmcHaccGen.dll --keys prod.keys --fw <span class=\"string\">&#x27;Firmware 17.0.0&#x27;</span> --mariko</span><br></pre></td></tr></table></figure>\n\n<p>使用EmmcHaccGen生成了相应配套的固件版本后, 怀疑EmmcHaccGen没有对a-17.0.0_exFAT -  SYSTEM - save - 8000000000000120 这个文件进行签名(使用prod.keys, 和工具: hactoolnet.exe)</p>\n<hr>\n<p>MAC电脑加载Switch分区</p>\n<ol>\n<li>Memloader is the payload you run on your Switch, so it appears as USB drive when you connect to your computer. Then run ninfs on your computer to mount the Switch partitions.</li>\n</ol>\n<p><a href=\"https://switchtools.sshnuke.net/\">memloader</a></p>\n<ol start=\"2\">\n<li>ninfs (formerly fuse-3ds) is a FUSE program to extract data from Nintendo game consoles. It works by presenting a virtual filesystem with the contents of your games, NAND, or SD card contents, and you can browse and copy out just the files that you need.   Windows, macOS, and Linux are supported.</li>\n</ol>\n<p><a href=\"https://github.com/ihaveamac/ninfs\">ninfs</a></p>\n<h2 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h2><ul>\n<li><a href=\"https://github.com/Thealexbarney/LibHac/\">hactoolnet&#x2F;LibHac</a> - An alternative to hactool that supports more formats, and a C# library for reading file formats used by the Nintendo Switch OS.</li>\n<li><a href=\"https://github.com/SciresM/hactool\">hactool</a> - A tool to view informataion about, decrypt, and extract common file formats.</li>\n<li><a href=\"https://github.com/shuffle2/nx2elf\">nx2elf</a> - convert Switch binaries to ELFs for easy loading in IDA</li>\n<li><a href=\"https://switchtools.sshnuke.net/\">HacDiskMount</a> - Allows to open Switch eMMC RawNand dumps and mount them as a drive letter in Windows</li>\n<li><a href=\"https://github.com/ihaveamac/ninfs\">ninfs</a> - FUSE scripts for Nintendo Switch files, similar to HacDiskMount but cross-platform.</li>\n<li><a href=\"https://github.com/reswitched/swipc\">SwIPC</a> - IPC code and documentation generator. Auto-generated from <a href=\"https://github.com/roblabla/swipc-gen\">swipc-gen</a>.</li>\n<li><a href=\"https://github.com/misson20000/ilia\">ilia</a> - An IPC Logger for the switch, so you can spy on all the IPC calls.</li>\n<li><a href=\"https://gist.github.com/SciresM/c393d27caf18675bcb2475569bb864dd\">switch_cert.py</a> - Convert nintendo’s raw client certificate into an openssl cert.</li>\n<li><a href=\"https://github.com/hthh/switch-reversing\">hthh’s switch-reversing</a> - Various Switch reversing scripts.</li>\n</ul>\n<hr>\n<h1 id=\"最新硬解的Switch主机19-0-0故障\"><a href=\"#最新硬解的Switch主机19-0-0故障\" class=\"headerlink\" title=\"最新硬解的Switch主机19.0.0故障\"></a>最新硬解的Switch主机19.0.0故障</h1><p><img data-src=\"https://img.carlzeng.com:3/i/2024/10/27/671dd42ad1b45.png\" alt=\"image-20241027134822507\"></p>\n<p>![image-20241027135355896](&#x2F;Users&#x2F;carlzeng&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20241027135355896.png)</p>\n<p>硬解需要插入SD卡, 一般是exfat, 这时Switch主机会提示升级, 导致最新的固件变为19.0.0. 这样的情况,使用目前的19.0.0整合包 还是无法进入大气层虚拟系统</p>\n<p>现象: 开机启动, 点 虚拟系统, 黑屏</p>\n<p>为何最新更新的主机系统(19.0.0), 无法进大气虚拟系统?<br>    1. 破解芯片不支持; 换树莓派<br>    2. 内存卡不支持,, 大文件读取,速度等因素, 内存卡碎片多, 卡logo<br>  格式化, 重新emummc拷贝进去<br>    3. [失败]把识别的fat32任天堂文件夹复制粘贴到格式化为 exfat格式化的盘里<br>      1. 复制到电脑，格式化完再复制进去<br>      2. 512G的fat32的卡，插进去 也是提示更新主机<br>      3. 32G的fat32的卡, 可以正常 不回提示更新主机, 正常创建出 任天堂 文件夹<br>    4. 离线升级没问题<br>      1. 离线升级的机器，用这个整合包就能进虚拟系统<br>    5. [待测试]降级.  进大气层 真实系统, 然后选择 daybreak降级;<br>     然后使用18.0.1的整合包; 或者继续使用当前19.0(仅仅无法进大气层虚拟系统)的大气层整合包</p>\n<p>当然这么处理完以后, 可能会导致黑屏无法进入真实系统&#x2F;正版系统</p>\n<h1 id=\"手动刷写Switch系统\"><a href=\"#手动刷写Switch系统\" class=\"headerlink\" title=\"手动刷写Switch系统\"></a>手动刷写Switch系统</h1><p>远程协助, 修复 switch 固件, 报错; 手动刷写系统</p>\n<p>软件工具</p>\n<ol>\n<li><p>EmmcHaccGen</p>\n<ol>\n<li>这个工具+ 固件(相同目下的文件夹) + prod.key 就可以生成出适合当前特定Switch主机的固件包(Proinfo, proinfof, PKG2-1-Normal-Main, PKG2-2-Normal-Sub, PKG2-3-SafeMode-Main, PKG2-4-SafeMode-Sub, SAFE, SYSTEM, USER)</li>\n<li>支持Windows, Mac</li>\n<li>这个工具有命令行版本, 同时也有贴心的UI,可以选取prod.key文件和原始的固件目录; 另外三个选项: ExFAT Support, Enable AutoRCM, Generate Mariko Firmware(除非是Switch普通版, 其他版本的Switch都要选中)</li>\n</ol>\n</li>\n<li><p>NxNandManager</p>\n<ol>\n<li>警惕这个工具经常报错, 和闪退; 一旦发生意外当前的步骤(或关联步骤)就要重新操作一遍</li>\n<li>这个工具的第一个步骤是去加载证书! 确保解密正常才能进行恢复等等的动作</li>\n<li>当您刷完了PKG2-1-Normal-Main, PKG2-2-Normal-Sub, PKG2-3-SafeMode-Main, PKG2-4-SafeMode-Sub, SAFE, SYSTEM</li>\n<li>由于版本跨度, 也要刷Boot0, 和Boot1 这两个以.bin后缀的文件. 不然会提示出错:  “Pkg2 decryption failed.  Pkg1&#x2F;pkg2 mismatch or old hekate. Failed to launch HOS!”<ol>\n<li><p>Boot0 和 boot1 也可以使用NxNandManager来还原&#x2F;刷写, 步骤: </p>\n</li>\n<li><p>在hekate页面选择Boot0 后使用NxNandManager 的 load driver加载(能看到4M的驱动盘);</p>\n</li>\n<li><p>然后在NxNandManager中, 直接写入EmmcHaccGen文件生成的Boot0</p>\n</li>\n<li><p>Boot1的操作也一摸一样, 加载boot1.bin 刷写一下.</p>\n</li>\n<li><p>假如抱错: PKG1和PKG2不匹配(pkg1&#x2F;pkg2 mismatch or old hekate), 就需要重新根据当前的固件版本来生成配套的Boot0和Boot1</p>\n<ol>\n<li><p>工具: <a href=\"https://file3.carlzeng.com:3/d/SWITCH%E4%BB%BB%E5%A4%A9%E5%A0%82/Boot0%20builder_20220506.7z\">Boot0 builder_20220506.7z</a></p>\n</li>\n<li><p>方法: <a href=\"https://www.bilibili.com/opus/688996974304690217\">NS全机种Boot0,1生成方法</a></p>\n<p>1：recreate_boot_by_yoti</p>\n<p>2：系统固件</p>\n<p>3：最新的prod.keys(prod.keys请自己从自己设备提取)</p>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li><p>DiskGenius</p>\n<ol>\n<li>分区工具; 可以适用于把正版系统emmu分区成 32G 或 64G(OLED) 根据需要还原的</li>\n</ol>\n</li>\n<li><p>固件</p>\n<ol>\n<li>查看主机的熔断数, 根据熔断数来判断需要选用什么版本的固件</li>\n<li>可以使用NxNandManager来判断, 字段名为(右下脚位置) FW ver</li>\n</ol>\n</li>\n<li><p>整合包</p>\n<ol>\n<li>合适的大气层整合包中, 需要用到提取prod.key需要用到的插件: Lockpick_RCM.bin(banned)</li>\n</ol>\n</li>\n<li><p>prodinfo_gen</p>\n<ol>\n<li>原始, 并停留在 Adds support for 14.0.0固件</li>\n<li>github.com&#x2F;CaramelDunes&#x2F;prodinfo_gen&#x2F;</li>\n<li>Usage</li>\n<li>If you want to use a donor PRODINFO, place it at sd:&#x2F;switch&#x2F;donor_prodinfo.bin. Note: If the donor is a patched or Mariko Switch, you will need to copy the donor’s keys to sd:&#x2F;switch&#x2F;donor.keys.</li>\n<li>Launch prodinfo_gen.bin using your favorite payload injector or chainloader.</li>\n<li>You should find sd:&#x2F;switch&#x2F;generated_prodinfo_from_scratch.bin or sd:&#x2F;switch&#x2F;generated_prodinfo_from_donor.bin depending on what you selected.</li>\n<li>You can now write that PRODINFO to your NAND using a tool such as HacDiskMount (it is recommended to make a backup of the current PRODINFO first).</li>\n</ol>\n</li>\n<li><p>lockpick_rcm</p>\n<ol>\n<li>github.com&#x2F;shchmue&#x2F;Lockpick_RCM</li>\n<li><a href=\"https://github.com/Kofysh/Lockpick_RCM\">https://github.com/Kofysh/Lockpick_RCM</a> <ol>\n<li>New firmware is out and it brings the master_key_12 generation.</li>\n<li>Lockpick_RCM is a bare-metal Nintendo Switch payload that extracts encryption keys for use in file handling software like hactool, hactoolnet&#x2F;LibHac, ChoiDujour, etc., all without booting into Horizon OS. 🚀</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>全部工具下载地址：</p>\n<p>链接：<a href=\"https://pan.baidu.com/s/1uLhXq8Ljj33_DohLoIHBrQ?pwd=g2ro\">https://pan.baidu.com/s/1uLhXq8Ljj33_DohLoIHBrQ?pwd=g2ro</a> </p>\n<p>提取码：g2ro </p>\n<p>20241114</p>\n<p>现替换新的大气层整合包, 适配当前固件(或者大于当前固件的大气层整合包)</p>\n<p>修复正版系统, 成功, boot0 没有动.</p>\n<p>证书ok的情况下, 使用工具加载正版系统GPP, 然后重新写入1-4, 清空其他SAFE和USER, 重新写入SYSTEM(重新注册0000120)</p>\n<blockquote>\n<p>NxNandManager 加载上证书以后很好用, 全程修复不需要用到<a href=\"https://switchtools.sshnuke.net/\">HacDiskMount</a>工具即可实现</p>\n</blockquote>\n<p>需要注意的是注册SYSTEM分区里面SAVE文件夹内0000000120文件的动作, 这个注册的动作也需要用prod.key </p>\n<p>没有这个key或者忘记注册, 开机会抱错误: Pk92 decryption failed!  pk91&#x2F;pk92 mismatch or old hekate! Failed to lanch HOS! Press any key…</p>\n<p>参考:</p>\n<p><a href=\"https://www.bilibili.com/video/BV12u2VYTEbi/\">18.1.0switch救机降级详细教程switch大气层系统误升级更新开机启动报错修复教程提供大气层整合包18.1.0最终稳定版支持TX转大气层修复游戏</a></p>\n<p>NS全机型手动刷写eMMC系统固件教程 <a href=\"https://www.bilibili.com/read/cv17856812/\">https://www.bilibili.com/read/cv17856812/</a></p>\n<p><a href=\"https://www.bilibili.com/video/BV1CY4y1s7uS\">ns到手第一件事：大气层HEKATE备份NAND教程</a></p>\n<h2 id=\"Switch全机种Boot0-Boot1生成方法与步骤\"><a href=\"#Switch全机种Boot0-Boot1生成方法与步骤\" class=\"headerlink\" title=\"Switch全机种Boot0, Boot1生成方法与步骤\"></a>Switch全机种Boot0, Boot1生成方法与步骤</h2><p>工具: <a href=\"https://file3.carlzeng.com:3/d/SWITCH%E4%BB%BB%E5%A4%A9%E5%A0%82/Boot0%20builder_20220506.7z\">Boot0 builder_20220506.7z</a></p>\n<p>步骤:</p>\n<ol>\n<li>下载你需要生成boot0,1的系统固件，我这里的例子为14.1.1，下载后将固件解压到文件夹内</li>\n<li>将提取或下载的prod.keys放到固件文件夹内。</li>\n<li>将Boot0 builder下载解压，也丢到固件文件夹内。<ol>\n<li>工具一共是3个文件</li>\n</ol>\n</li>\n<li>双击recreate_boot_by_yoti.bat运行生成boot0,1</li>\n<li>提示DONE！！后生成成功，同时会生成两组BOOT0，BOOT1</li>\n</ol>\n<p>ERISTA&#x3D;注入机&#x2F;补丁机</p>\n<p>MARIKO&#x3D;续航&#x2F;OLED&#x2F;LITE</p>\n<p><img data-src=\"https://img.carlzeng.com:3/i/2025/05/16/68271d9eab507.png\" alt=\"image-20250516191228506\"></p>\n<p>整体的思路: NS全机型手动刷写eMMC系统固件教程 <a href=\"https://www.bilibili.com/opus/689072664524881937\">https://www.bilibili.com/opus/689072664524881937</a></p>\n","more":"<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.com:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n强调：备份很重要！！！当你的正版系统是正常可运行的时候，务必要做一个本主机的NAND备份，因为它是独一无二的备份。操作步骤请搜索文章: 如何备份NAND\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. hekate - tools - Backup eMMC - eMMC BOOT0 &amp; BOOT1</span><br><span class=\"line\">2. hekate - tools - Backup eMMC - eMMC RAW GPP</span><br><span class=\"line\"></span><br><span class=\"line\">3. [可选步骤]在电脑上备份SD卡中backup文件夹全部内容.  </span><br></pre></td></tr></table></figure>\n\n<p>第一件事：备份nand<br>无论你是不是单系统\\双系统，都备份一次，有双系统的，可以把自己的EMUMMC备份到电脑，这个也是NAND备份。这个备份可能会在未来，救你机器一命。<a href=\"https://www.bilibili.com/video/BV1CY4y1s7uS/\">备份视频教程.</a></p>\n<p>第二件事：提取prod.keys备份，用来不可知的时候手动救砖。<br><a href=\"https://www.bilibili.com/read/cv15542214\">prod.keys提取教程</a></p>\n<p>[可选步骤: 验证rawnand.bin文件] <a href=\"https://url50.ctfile.com/f/2272250-552992132-4de792\">nxnandmanager下载地址</a>（访问密码：3610）</p>\n<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>开机正版系统卡logo黑屏, 真实系统报错</p>\n<ul>\n<li>手误点击了升级 重启后黑屏变砖</li>\n<li>switch自动升级17.0.0 开机正版系统卡logo黑屏</li>\n<li>升级过程中断电, 重启后黑屏或卡logo</li>\n<li>手动系统升级导致黑屏或卡logo</li>\n<li>系统错误导致卡Logo</li>\n<li>WIFI芯片故障导致无法连接WIFI或蓝牙或卡Logo<ul>\n<li>这个需要先修复硬件</li>\n</ul>\n</li>\n</ul>\n<p> switch不管在正版系统还是真实系统上通过网络自动升级至17.0.0，再次启动，不管是在正版系统上开机卡logo黑屏，还是真实系统报错，还是switch的维护模式均无法进入系统。</p>\n<p>相关大佬的说法：</p>\n<pre><code>说法1：这次升级17.0卡nintendo后logo的，可能就算大气层更新支持17.0.0，也需要还原本机EMMC备份以后才能进正版系统升级。\n\n说法2：目前有可能之前误升级17.0.0正版系统导致卡logo变砖需要恢复EMMC备份后，从低于17.0.0的系统更新大气层1.6.0以后采取离线方式升级才行。卡logo是因为系统升级重建system分区的出错导致变砖，所以这个需要特别的注意。\n</code></pre>\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.com:3/appsearch?q=switch\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<p>工具MAC</p>\n<ul>\n<li><a href=\"https://suchmememanyskill.github.io/apps/emmchaccgen/#a-replacement-for-choidujour\">EmmcHaccGen</a></li>\n</ul>\n<p>EmmcHaccGen generates a firmware package (BOOT0, BOOT1, Bcpkg2 1-4 and the 120 system save) from a firmware dump and a valid prod.keys. This can be used to unbrick switches or to upgrade&#x2F;downgrade the console from rcm</p>\n<p>EmmcHaccGen is written in c#, running under .net core (3.1). It should work on windows, macos or linux.</p>\n<p><a href=\"https://github.com/suchmememanyskill/EmmcHaccGen/releases/tag/3.1.0\">https://github.com/suchmememanyskill/EmmcHaccGen/releases/tag/3.1.0</a></p>\n<p>EmmcHaccGen.CLI.zip</p>\n<ul>\n<li>FUSE filesystem Python scripts for Nintendo console files <a href=\"https://github.com/ihaveamac/ninfs/releases/tag/v2.0\">ninfs 2.0 Latest</a></li>\n</ul>\n<p>Mount my switch rawNAND like it’s possible with HacDiskMount on Windows</p>\n<ul>\n<li>.NET 7.0</li>\n</ul>\n<p>EmmcHaccGen需要用到.NET 7.0 到<a href=\"https://learn.microsoft.com/en-us/dotnet/core/install/macos\">微软的网站下载MAC版本的</a>.</p>\n<h1 id=\"操作步骤如下\"><a href=\"#操作步骤如下\" class=\"headerlink\" title=\"操作步骤如下\"></a>操作步骤如下</h1><h1 id=\"1-导出系统密钥\"><a href=\"#1-导出系统密钥\" class=\"headerlink\" title=\"1.导出系统密钥\"></a>1.导出系统密钥</h1><p>工具:</p>\n<p>Lockpick_RCM1.9.7.bin<br>TegraExplorer.bin<br>EmmcHaccGen.zip(Windows用户)  EmmcHaccGen.CLI(MAC用户)<br>SystemRestoreV3.te</p>\n<p>Firmware.16.1.0.zip<br>Firmware.17.0.0.zip</p>\n<p>工具都集成在了网盘中分享的文件: Firmware16.1.0+1.5.5大气层联机.zip</p>\n<p>①关闭switch（按住电源键15s可实现switch的强制关机），取出TF卡，复制Lockpick_RCM1.9.7.bin、TegraExplorer.bin两个文件到TF卡上大气层的 bootloader\\payloads 文件夹下；</p>\n<p>②通过hekate启动系统，在hetake界面下选择payloads；</p>\n<p>③用密钥获取工具Lockpick_RCM1.9.7.bin启动；</p>\n<p> ④启动后，选择第一个项：Dump from sysnand，导出系统密钥，这里按音量+和音量-可以移动光标，按电源键确认；</p>\n<p>⑤稍等一会，就会显示导出密钥的界面；</p>\n<p>⑥按任意键返回最初的页面，将光标移动到Power off，按电源键关机；</p>\n<p>⑦取出TF卡，导出的密钥文件在TF卡根目录的switch文件夹下，文件名为：prod.keys</p>\n<p>将这个密钥文件prod.keys拷贝到电脑中与16.1.0相同的目录层, 下一个步骤需要用到</p>\n<p>目录层级关系为:</p>\n<ul>\n<li>Firmware 16.1.0</li>\n<li>prod.keys</li>\n<li>EmmcHaccGen.dll</li>\n<li>EmmcHaccGen…..等EmmcHaccGen.CLI.zip文件解压后的所有文件</li>\n</ul>\n<h1 id=\"2-制作降级系统\"><a href=\"#2-制作降级系统\" class=\"headerlink\" title=\"2.制作降级系统\"></a>2.制作降级系统</h1><p>①新建一个文件夹在电脑硬盘根目录下，解压EmmcHaccGen.zip 到该文件夹，将固件Firmware.16.1.0.zip系统固件以及刚刚生成的 prod.keys 密钥文件同时拷贝到该文件夹下；</p>\n<p>②在此目录启动 CMD 执行命令</p>\n<p>Windows命令如下：</p>\n<p>软破和v1焊接（既注入和补丁机）：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">EmmcHaccGen</span> --keys prod.<span class=\"property\">keys</span> --fw <span class=\"number\">16.1</span><span class=\"number\">.0</span> --no-autorcm</span><br></pre></td></tr></table></figure>\n\n<p>续航和lite以及OLED：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title class_\">EmmcHaccGen</span> --keys prod.<span class=\"property\">keys</span> --fw <span class=\"number\">16.1</span><span class=\"number\">.0</span> --mariko</span><br></pre></td></tr></table></figure>\n\n<p>MAC命令如下:</p>\n<p>工具 EmmcHaccGen.CLI.zip</p>\n<p>软破和v1焊接：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dotnet EmmcHaccGen.dll --keys prod.keys --fw 16.1.0 --no-autorcm</span><br></pre></td></tr></table></figure>\n\n\n\n<p>续航和lite以及OLED：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 参数内容 prod.keys 是当前执行目录下, 在上一个步骤提取到的prod.keys</span><br><span class=\"line\"># 参数内容 16.1.0 是当前执行目录下固件文件夹的,文件夹名称</span><br><span class=\"line\"># 参数内容 --mariko 代表适用于 续航和lite以及OLED</span><br><span class=\"line\">dotnet EmmcHaccGen.dll --keys prod.keys --fw 16.1.0 --mariko</span><br><span class=\"line\"></span><br><span class=\"line\">dotnet EmmcHaccGen.dll --keys prod.keys --fw &#x27;Frimware 16.10&#x27; --mariko</span><br></pre></td></tr></table></figure>\n\n<p><img data-src=\"https://img.carlzeng.com:3/i/2024/10/20/671490ce2485e.png\" alt=\"image-20241020131034691\"></p>\n<p>结果要实现: 同目录下会生成一个新文件夹: a-16.1.0_exFAT</p>\n<p>③将SystemRestoreV3.te复制到这个文件夹下</p>\n<p>④将这个文件夹拷贝到SD卡的目录, 下一个步骤需要用到</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#查看Mac系统自动生成的隐藏文件</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> -a | egrep <span class=\"string\">&quot;^\\.[_a-zA-Z0-9]+&quot;</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Mac清理系统自动生成的隐藏文件</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> -a | egrep <span class=\"string\">&quot;^\\.[_a-zA-Z0-9]+&quot;</span> | xargs <span class=\"built_in\">rm</span> -rf</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"3-手动系统降级\"><a href=\"#3-手动系统降级\" class=\"headerlink\" title=\"3.手动系统降级\"></a>3.手动系统降级</h1><p>​    ①通过hekate启动系统，在hetake界面下选择payloads，用密钥获取工具TegraExplorer.bin启动；</p>\n<p>​    ②选择Browse SD；</p>\n<p>​    ③进入SD后，选择我们刚才拷贝进去的文件夹NX-16.1.0_exFAT；</p>\n<p>​    ④选择SystemRestoreV3.te文件；</p>\n<p>​    ⑤确认后，选择Launch Script；</p>\n<p>​    ⑥进入后，选择Apply on Sysmmc;</p>\n<p>​    ⑦进入后，选择Restore Both；</p>\n<p>​    ⑧等待几秒后按电源键确认，开始备份系统以及恢复系统；</p>\n<p>​    ⑨耐心等待直至完成，可能需要10分钟左右；当出现fully down 或者 press any key to exit 时，证明恢复已经完成；一路按B到最顶层，再选择关机。</p>\n<p>​    ⑩再次通过hekate启动系统，在hetake界面下选择Launch，选择真实系统启动，这时系统能启动了，进入系统可查看系统版本是16.1.0|AMS 1.6.0|S，正版系统也能进入。</p>\n<h1 id=\"4-离线升级系统\"><a href=\"#4-离线升级系统\" class=\"headerlink\" title=\"4.离线升级系统\"></a>4.离线升级系统</h1><p>  ①将固件Firmware.17.0.0.zip解压至TF卡根目录下；</p>\n<h2 id=\"离线升级正版系统\"><a href=\"#离线升级正版系统\" class=\"headerlink\" title=\"离线升级正版系统\"></a>离线升级正版系统</h2><p>​    ②通过hekate启动系统，在hetake界面下选择Launch，选择真实系统启动；</p>\n<p>​    ③进入真实系统，选择相册，运行Daybreak；</p>\n<p>再次通过hekate启动系统，在hetake界面下选择Launch，选择真实系统启动，进入系统可查看系统版本是17.0.0|AMS 1.6.0|S；正版系统也能进入。</p>\n<h2 id=\"离线升级虚拟系统\"><a href=\"#离线升级虚拟系统\" class=\"headerlink\" title=\"离线升级虚拟系统\"></a>离线升级虚拟系统</h2><p>进大气层虚拟系统, Daybreak</p>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p><a href=\"https://www.bilibili.com/read/cv27072776/\">记switch自动升级17.0.0，开机正版系统卡logo黑屏，真实系统报错等处理事宜</a></p>\n<hr>\n<p>20241022待核实内容</p>\n<p>OLED修复系统, 卡在了第二个Logo(Switch Logo)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dotnet EmmcHaccGen.dll --keys prod.keys --fw <span class=\"string\">&#x27;Firmware 17.0.0&#x27;</span> --mariko</span><br></pre></td></tr></table></figure>\n\n<p>使用EmmcHaccGen生成了相应配套的固件版本后, 怀疑EmmcHaccGen没有对a-17.0.0_exFAT -  SYSTEM - save - 8000000000000120 这个文件进行签名(使用prod.keys, 和工具: hactoolnet.exe)</p>\n<hr>\n<p>MAC电脑加载Switch分区</p>\n<ol>\n<li>Memloader is the payload you run on your Switch, so it appears as USB drive when you connect to your computer. Then run ninfs on your computer to mount the Switch partitions.</li>\n</ol>\n<p><a href=\"https://switchtools.sshnuke.net/\">memloader</a></p>\n<ol start=\"2\">\n<li>ninfs (formerly fuse-3ds) is a FUSE program to extract data from Nintendo game consoles. It works by presenting a virtual filesystem with the contents of your games, NAND, or SD card contents, and you can browse and copy out just the files that you need.   Windows, macOS, and Linux are supported.</li>\n</ol>\n<p><a href=\"https://github.com/ihaveamac/ninfs\">ninfs</a></p>\n<h2 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h2><ul>\n<li><a href=\"https://github.com/Thealexbarney/LibHac/\">hactoolnet&#x2F;LibHac</a> - An alternative to hactool that supports more formats, and a C# library for reading file formats used by the Nintendo Switch OS.</li>\n<li><a href=\"https://github.com/SciresM/hactool\">hactool</a> - A tool to view informataion about, decrypt, and extract common file formats.</li>\n<li><a href=\"https://github.com/shuffle2/nx2elf\">nx2elf</a> - convert Switch binaries to ELFs for easy loading in IDA</li>\n<li><a href=\"https://switchtools.sshnuke.net/\">HacDiskMount</a> - Allows to open Switch eMMC RawNand dumps and mount them as a drive letter in Windows</li>\n<li><a href=\"https://github.com/ihaveamac/ninfs\">ninfs</a> - FUSE scripts for Nintendo Switch files, similar to HacDiskMount but cross-platform.</li>\n<li><a href=\"https://github.com/reswitched/swipc\">SwIPC</a> - IPC code and documentation generator. Auto-generated from <a href=\"https://github.com/roblabla/swipc-gen\">swipc-gen</a>.</li>\n<li><a href=\"https://github.com/misson20000/ilia\">ilia</a> - An IPC Logger for the switch, so you can spy on all the IPC calls.</li>\n<li><a href=\"https://gist.github.com/SciresM/c393d27caf18675bcb2475569bb864dd\">switch_cert.py</a> - Convert nintendo’s raw client certificate into an openssl cert.</li>\n<li><a href=\"https://github.com/hthh/switch-reversing\">hthh’s switch-reversing</a> - Various Switch reversing scripts.</li>\n</ul>\n<hr>\n<h1 id=\"最新硬解的Switch主机19-0-0故障\"><a href=\"#最新硬解的Switch主机19-0-0故障\" class=\"headerlink\" title=\"最新硬解的Switch主机19.0.0故障\"></a>最新硬解的Switch主机19.0.0故障</h1><p><img data-src=\"https://img.carlzeng.com:3/i/2024/10/27/671dd42ad1b45.png\" alt=\"image-20241027134822507\"></p>\n<p>![image-20241027135355896](&#x2F;Users&#x2F;carlzeng&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20241027135355896.png)</p>\n<p>硬解需要插入SD卡, 一般是exfat, 这时Switch主机会提示升级, 导致最新的固件变为19.0.0. 这样的情况,使用目前的19.0.0整合包 还是无法进入大气层虚拟系统</p>\n<p>现象: 开机启动, 点 虚拟系统, 黑屏</p>\n<p>为何最新更新的主机系统(19.0.0), 无法进大气虚拟系统?<br>    1. 破解芯片不支持; 换树莓派<br>    2. 内存卡不支持,, 大文件读取,速度等因素, 内存卡碎片多, 卡logo<br>  格式化, 重新emummc拷贝进去<br>    3. [失败]把识别的fat32任天堂文件夹复制粘贴到格式化为 exfat格式化的盘里<br>      1. 复制到电脑，格式化完再复制进去<br>      2. 512G的fat32的卡，插进去 也是提示更新主机<br>      3. 32G的fat32的卡, 可以正常 不回提示更新主机, 正常创建出 任天堂 文件夹<br>    4. 离线升级没问题<br>      1. 离线升级的机器，用这个整合包就能进虚拟系统<br>    5. [待测试]降级.  进大气层 真实系统, 然后选择 daybreak降级;<br>     然后使用18.0.1的整合包; 或者继续使用当前19.0(仅仅无法进大气层虚拟系统)的大气层整合包</p>\n<p>当然这么处理完以后, 可能会导致黑屏无法进入真实系统&#x2F;正版系统</p>\n<h1 id=\"手动刷写Switch系统\"><a href=\"#手动刷写Switch系统\" class=\"headerlink\" title=\"手动刷写Switch系统\"></a>手动刷写Switch系统</h1><p>远程协助, 修复 switch 固件, 报错; 手动刷写系统</p>\n<p>软件工具</p>\n<ol>\n<li><p>EmmcHaccGen</p>\n<ol>\n<li>这个工具+ 固件(相同目下的文件夹) + prod.key 就可以生成出适合当前特定Switch主机的固件包(Proinfo, proinfof, PKG2-1-Normal-Main, PKG2-2-Normal-Sub, PKG2-3-SafeMode-Main, PKG2-4-SafeMode-Sub, SAFE, SYSTEM, USER)</li>\n<li>支持Windows, Mac</li>\n<li>这个工具有命令行版本, 同时也有贴心的UI,可以选取prod.key文件和原始的固件目录; 另外三个选项: ExFAT Support, Enable AutoRCM, Generate Mariko Firmware(除非是Switch普通版, 其他版本的Switch都要选中)</li>\n</ol>\n</li>\n<li><p>NxNandManager</p>\n<ol>\n<li>警惕这个工具经常报错, 和闪退; 一旦发生意外当前的步骤(或关联步骤)就要重新操作一遍</li>\n<li>这个工具的第一个步骤是去加载证书! 确保解密正常才能进行恢复等等的动作</li>\n<li>当您刷完了PKG2-1-Normal-Main, PKG2-2-Normal-Sub, PKG2-3-SafeMode-Main, PKG2-4-SafeMode-Sub, SAFE, SYSTEM</li>\n<li>由于版本跨度, 也要刷Boot0, 和Boot1 这两个以.bin后缀的文件. 不然会提示出错:  “Pkg2 decryption failed.  Pkg1&#x2F;pkg2 mismatch or old hekate. Failed to launch HOS!”<ol>\n<li><p>Boot0 和 boot1 也可以使用NxNandManager来还原&#x2F;刷写, 步骤: </p>\n</li>\n<li><p>在hekate页面选择Boot0 后使用NxNandManager 的 load driver加载(能看到4M的驱动盘);</p>\n</li>\n<li><p>然后在NxNandManager中, 直接写入EmmcHaccGen文件生成的Boot0</p>\n</li>\n<li><p>Boot1的操作也一摸一样, 加载boot1.bin 刷写一下.</p>\n</li>\n<li><p>假如抱错: PKG1和PKG2不匹配(pkg1&#x2F;pkg2 mismatch or old hekate), 就需要重新根据当前的固件版本来生成配套的Boot0和Boot1</p>\n<ol>\n<li><p>工具: <a href=\"https://file3.carlzeng.com:3/d/SWITCH%E4%BB%BB%E5%A4%A9%E5%A0%82/Boot0%20builder_20220506.7z\">Boot0 builder_20220506.7z</a></p>\n</li>\n<li><p>方法: <a href=\"https://www.bilibili.com/opus/688996974304690217\">NS全机种Boot0,1生成方法</a></p>\n<p>1：recreate_boot_by_yoti</p>\n<p>2：系统固件</p>\n<p>3：最新的prod.keys(prod.keys请自己从自己设备提取)</p>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n<li><p>DiskGenius</p>\n<ol>\n<li>分区工具; 可以适用于把正版系统emmu分区成 32G 或 64G(OLED) 根据需要还原的</li>\n</ol>\n</li>\n<li><p>固件</p>\n<ol>\n<li>查看主机的熔断数, 根据熔断数来判断需要选用什么版本的固件</li>\n<li>可以使用NxNandManager来判断, 字段名为(右下脚位置) FW ver</li>\n</ol>\n</li>\n<li><p>整合包</p>\n<ol>\n<li>合适的大气层整合包中, 需要用到提取prod.key需要用到的插件: Lockpick_RCM.bin(banned)</li>\n</ol>\n</li>\n<li><p>prodinfo_gen</p>\n<ol>\n<li>原始, 并停留在 Adds support for 14.0.0固件</li>\n<li>github.com&#x2F;CaramelDunes&#x2F;prodinfo_gen&#x2F;</li>\n<li>Usage</li>\n<li>If you want to use a donor PRODINFO, place it at sd:&#x2F;switch&#x2F;donor_prodinfo.bin. Note: If the donor is a patched or Mariko Switch, you will need to copy the donor’s keys to sd:&#x2F;switch&#x2F;donor.keys.</li>\n<li>Launch prodinfo_gen.bin using your favorite payload injector or chainloader.</li>\n<li>You should find sd:&#x2F;switch&#x2F;generated_prodinfo_from_scratch.bin or sd:&#x2F;switch&#x2F;generated_prodinfo_from_donor.bin depending on what you selected.</li>\n<li>You can now write that PRODINFO to your NAND using a tool such as HacDiskMount (it is recommended to make a backup of the current PRODINFO first).</li>\n</ol>\n</li>\n<li><p>lockpick_rcm</p>\n<ol>\n<li>github.com&#x2F;shchmue&#x2F;Lockpick_RCM</li>\n<li><a href=\"https://github.com/Kofysh/Lockpick_RCM\">https://github.com/Kofysh/Lockpick_RCM</a> <ol>\n<li>New firmware is out and it brings the master_key_12 generation.</li>\n<li>Lockpick_RCM is a bare-metal Nintendo Switch payload that extracts encryption keys for use in file handling software like hactool, hactoolnet&#x2F;LibHac, ChoiDujour, etc., all without booting into Horizon OS. 🚀</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>全部工具下载地址：</p>\n<p>链接：<a href=\"https://pan.baidu.com/s/1uLhXq8Ljj33_DohLoIHBrQ?pwd=g2ro\">https://pan.baidu.com/s/1uLhXq8Ljj33_DohLoIHBrQ?pwd=g2ro</a> </p>\n<p>提取码：g2ro </p>\n<p>20241114</p>\n<p>现替换新的大气层整合包, 适配当前固件(或者大于当前固件的大气层整合包)</p>\n<p>修复正版系统, 成功, boot0 没有动.</p>\n<p>证书ok的情况下, 使用工具加载正版系统GPP, 然后重新写入1-4, 清空其他SAFE和USER, 重新写入SYSTEM(重新注册0000120)</p>\n<blockquote>\n<p>NxNandManager 加载上证书以后很好用, 全程修复不需要用到<a href=\"https://switchtools.sshnuke.net/\">HacDiskMount</a>工具即可实现</p>\n</blockquote>\n<p>需要注意的是注册SYSTEM分区里面SAVE文件夹内0000000120文件的动作, 这个注册的动作也需要用prod.key </p>\n<p>没有这个key或者忘记注册, 开机会抱错误: Pk92 decryption failed!  pk91&#x2F;pk92 mismatch or old hekate! Failed to lanch HOS! Press any key…</p>\n<p>参考:</p>\n<p><a href=\"https://www.bilibili.com/video/BV12u2VYTEbi/\">18.1.0switch救机降级详细教程switch大气层系统误升级更新开机启动报错修复教程提供大气层整合包18.1.0最终稳定版支持TX转大气层修复游戏</a></p>\n<p>NS全机型手动刷写eMMC系统固件教程 <a href=\"https://www.bilibili.com/read/cv17856812/\">https://www.bilibili.com/read/cv17856812/</a></p>\n<p><a href=\"https://www.bilibili.com/video/BV1CY4y1s7uS\">ns到手第一件事：大气层HEKATE备份NAND教程</a></p>\n<h2 id=\"Switch全机种Boot0-Boot1生成方法与步骤\"><a href=\"#Switch全机种Boot0-Boot1生成方法与步骤\" class=\"headerlink\" title=\"Switch全机种Boot0, Boot1生成方法与步骤\"></a>Switch全机种Boot0, Boot1生成方法与步骤</h2><p>工具: <a href=\"https://file3.carlzeng.com:3/d/SWITCH%E4%BB%BB%E5%A4%A9%E5%A0%82/Boot0%20builder_20220506.7z\">Boot0 builder_20220506.7z</a></p>\n<p>步骤:</p>\n<ol>\n<li>下载你需要生成boot0,1的系统固件，我这里的例子为14.1.1，下载后将固件解压到文件夹内</li>\n<li>将提取或下载的prod.keys放到固件文件夹内。</li>\n<li>将Boot0 builder下载解压，也丢到固件文件夹内。<ol>\n<li>工具一共是3个文件</li>\n</ol>\n</li>\n<li>双击recreate_boot_by_yoti.bat运行生成boot0,1</li>\n<li>提示DONE！！后生成成功，同时会生成两组BOOT0，BOOT1</li>\n</ol>\n<p>ERISTA&#x3D;注入机&#x2F;补丁机</p>\n<p>MARIKO&#x3D;续航&#x2F;OLED&#x2F;LITE</p>\n<p><img data-src=\"https://img.carlzeng.com:3/i/2025/05/16/68271d9eab507.png\" alt=\"image-20250516191228506\"></p>\n<p>整体的思路: NS全机型手动刷写eMMC系统固件教程 <a href=\"https://www.bilibili.com/opus/689072664524881937\">https://www.bilibili.com/opus/689072664524881937</a></p>","categories":[{"name":"switch","path":"api/categories/switch.json"}],"tags":[{"name":"switch","path":"api/tags/switch.json"},{"name":"大气层","path":"api/tags/大气层.json"},{"name":"nand","path":"api/tags/nand.json"}]}