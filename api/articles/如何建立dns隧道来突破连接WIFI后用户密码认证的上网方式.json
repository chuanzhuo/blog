{"title":"如何建立dns隧道来突破连接WIFI后用户密码认证的上网方式","slug":"如何建立dns隧道来突破连接WIFI后用户密码认证的上网方式","date":"2024-02-19T12:08:44.000Z","updated":"2024-02-19T15:15:22.855Z","comments":true,"path":"api/articles/如何建立dns隧道来突破连接WIFI后用户密码认证的上网方式.json","excerpt":" [Figure] ","covers":null,"content":"<img class=\"lozad\" data-src=\"\">\n\n<span id=\"more\"></span>\n<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.top:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n# 有什么用\n\n<p>建立dns隧道来突破连接WIFI后用户密码认证的上网方式</p>\n<p>学习和了解iodine的工作原理</p>\n<h1 id=\"怎么用\"><a href=\"#怎么用\" class=\"headerlink\" title=\"怎么用\"></a>怎么用</h1><p>详见下方的实现过程，含大框架的步骤</p>\n<p>客户端iodine连接上服务端iodined后，继续嵌套SSH来上网（或使用其他的vpn&#x2F;socks等代理方式）</p>\n<p>当前的目标是：突破连接WIFI后，继续提示输入用户名和密码的认证方式（一般还设置了上网时间限制，比如采集手机号码当作用户名，密码用短信下发）</p>\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=dns\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><h2 id=\"1-make-后获取iodined（Server端）-和-iodine（客户端）\"><a href=\"#1-make-后获取iodined（Server端）-和-iodine（客户端）\" class=\"headerlink\" title=\"1. make 后获取iodined（Server端） 和 iodine（客户端）\"></a>1. make 后获取iodined（Server端） 和 iodine（客户端）</h2><p>OpenWrt平台（Linux）：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">opkg install iodined</span></span><br><span class=\"line\">\t\tInstalling iodined (0.7.0-4) to root...</span><br><span class=\"line\">\t\tDownloading https://op.supes.top/23.05/packages/x86_64/packages/iodined_0.7.0-4_x86_64.ipk</span><br><span class=\"line\">\t\tConfiguring iodined.</span><br><span class=\"line\">\t\tiodined: Invalid topdomain: Too short (&lt; 3)</span><br><span class=\"line\">\t\tUsage: iodined [-v] [-h] [-c] [-s] [-f] [-D] [-u user] [-t chrootdir] [-d device] [-m mtu] [-z context] [-l ip address to listen on] [-p port] [-n external ip] [-b dnsport] [-P password] [-F pidfile] [-i max idle time] tunnel_ip[/netmask] topdomain</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">以下部分是客户端的程序：iodine</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">opkg install iodine</span></span><br><span class=\"line\">\t\tInstalling iodine (0.7.0-4) to root...</span><br><span class=\"line\">\t\tDownloading https://op.supes.top/23.05/packages/x86_64/packages/iodine_0.7.0-4_x86_64.ipk</span><br><span class=\"line\">\t\tConfiguring iodine.\t\t</span><br></pre></td></tr></table></figure>\n\n\n\n<p>Mac平台（Mac OS X）：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iodine-0.8.0 % make</span><br><span class=\"line\">\t\tOS is DARWIN, arch is arm64</span><br><span class=\"line\">\t\tCC tun.c</span><br><span class=\"line\">\t\tCC dns.c</span><br><span class=\"line\">\t\tCC read.c</span><br><span class=\"line\">\t\tCC encoding.c</span><br><span class=\"line\">\t\tCC login.c</span><br><span class=\"line\">\t\tCC base32.c</span><br><span class=\"line\">\t\tCC base64.c</span><br><span class=\"line\">\t\tMaking base64u.c</span><br><span class=\"line\">\t\tCC common.c</span><br><span class=\"line\">\t\tcommon.c:283:2: warning: &#x27;daemon&#x27; is deprecated: first deprecated in macOS 10.5 - Use posix_spawn APIs instead. [-Wdeprecated-declarations]</span><br><span class=\"line\">\t\t        daemon(0, 0);</span><br><span class=\"line\">\t\t        ^</span><br><span class=\"line\">\t\t/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:294:6: note: &#x27;daemon&#x27; has been explicitly marked deprecated here</span><br><span class=\"line\">\t\tint      daemon(int, int) __DARWIN_1050(daemon) __OSX_AVAILABLE_BUT_DEPRECATED_MSG(__MAC_10_0, __MAC_10_5, __IPHONE_2_0, __IPHONE_2_0, &quot;Use posix_spawn APIs instead.&quot;) __WATCHOS_PROHIBITED __TVOS_PROHIBITED;</span><br><span class=\"line\">\t\t         ^</span><br><span class=\"line\">\t\t1 warning generated.</span><br><span class=\"line\">\t\tCC iodine.c</span><br><span class=\"line\">\t\tCC client.c</span><br><span class=\"line\">\t\tCC util.c</span><br><span class=\"line\">\t\tLD ../bin/iodine</span><br><span class=\"line\">\t\tCC iodined.c</span><br><span class=\"line\">\t\tCC user.c</span><br><span class=\"line\">\t\tCC fw_query.c</span><br><span class=\"line\">\t\tLD ../bin/iodined</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-设置DNS记录\"><a href=\"#2-设置DNS记录\" class=\"headerlink\" title=\"2. 设置DNS记录\"></a>2. 设置DNS记录</h2><p>以dash.cloudflare.com的配置为例</p>\n<table>\n<thead>\n<tr>\n<th>NS</th>\n<th>t1</th>\n<th>t1ns.carlzeng.top</th>\n<th>仅 DNS</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>A</td>\n<td>t1ns</td>\n<td>125.34.235.88</td>\n<td>仅 DNS</td>\n</tr>\n</tbody></table>\n<h2 id=\"3-运行服务端\"><a href=\"#3-运行服务端\" class=\"headerlink\" title=\"3. 运行服务端\"></a>3. 运行服务端</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iodined -f -P 123 10.0.0.1  t1.carlzeng.top</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-运行客户端\"><a href=\"#4-运行客户端\" class=\"headerlink\" title=\"4. 运行客户端\"></a>4. 运行客户端</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./iodine -f -P 123 t1.carlzeng.top</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-使用dns隧道来代理上网\"><a href=\"#5-使用dns隧道来代理上网\" class=\"headerlink\" title=\"5. 使用dns隧道来代理上网\"></a>5. 使用dns隧道来代理上网</h2><p>现实中的代理使用</p>\n<p>​\tssh隧道方案：<br>​\t\t客户端运行：<br>​\t\t\tssh -CfNg -D 7001 <a href=\"mailto:&#x72;&#111;&#x6f;&#116;&#64;&#49;&#x30;&#x2e;&#48;&#46;&#48;&#46;&#49;\">&#x72;&#111;&#x6f;&#116;&#64;&#49;&#x30;&#x2e;&#48;&#46;&#48;&#46;&#49;</a><br>​\t\t客户端的浏览器设置socks代理<br>​\t\t\tIP地址<br>​\t\t\t7001端口</p>\n<h1 id=\"错误解决\"><a href=\"#错误解决\" class=\"headerlink\" title=\"错误解决\"></a>错误解决</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./iodine -f -P 123 t1.carlzeng.top                                                                  </span><br><span class=\"line\">No tun devices found, trying utun                                                                                       </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">Opened utun5                                                                                                            </span><br><span class=\"line\">Opened IPv4 UDP socket                                                                                                  </span><br><span class=\"line\">Sending DNS queries for t1.carlzeng.top to 192.168.6.1                                                                  </span><br><span class=\"line\">Autodetecting DNS query type (use -T to override)..iodine: Got NOTIMP as reply: server does not support our request     </span><br><span class=\"line\">.......iodine: Got NOTIMP as reply: server does not support our request                                                 </span><br><span class=\"line\">.......iodine: Got NOTIMP as reply: server does not support our request                                                 </span><br><span class=\"line\">.....                                                                                                                   </span><br><span class=\"line\">iodine: No suitable DNS query type found. Are you connected to a network?                                               </span><br><span class=\"line\">iodine: If you expect very long roundtrip delays, use -T explicitly.                                                    </span><br><span class=\"line\">iodine: (Also, connecting to an &quot;ancient&quot; version of iodined won&#x27;t work.)  </span><br></pre></td></tr></table></figure>\n\n<p>关闭了iodined以后，仍然还是53端口开启状态，这是相当不正常啊</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">nc -vz op.carlzeng.top 53                        </span><br><span class=\"line\">Connection to op.carlzeng.top port 53 [tcp/domain] succeeded!       </span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"相关知识-灵感来源\"><a href=\"#相关知识-灵感来源\" class=\"headerlink\" title=\"相关知识&#x2F;灵感来源\"></a>相关知识&#x2F;灵感来源</h1><h2 id=\"什么是DNS隧道？\"><a href=\"#什么是DNS隧道？\" class=\"headerlink\" title=\"什么是DNS隧道？\"></a>什么是DNS隧道？</h2><p>DNS隧道(DNS Tunneling)是将其他协议的内容封装在DNS协议中，然后以DNS请求和响应包完成传输数据(通信)的技术。</p>\n<h2 id=\"DNS隧道的原理：\"><a href=\"#DNS隧道的原理：\" class=\"headerlink\" title=\"DNS隧道的原理：\"></a>DNS隧道的原理：</h2><p>在进行DNS查询时，如果查询的域名不在DNS服务器本机的缓存中，就会访问互联网进行查询，然后返回结果。如果在互联网上有一台定制的服务器，那么依靠DNS协议即可进行数据包的交换。从DNS协议的角度看，这样的操作只是在一次次查询某个特定的域名并得到解析结果，但其本质问题是，预期的返回结果应该是一个IP地址，而事实上不是——返回的可以是任意字符串，包括加密的C&amp;C指令。</p>\n<h2 id=\"DNS隧道分为两种：\"><a href=\"#DNS隧道分为两种：\" class=\"headerlink\" title=\"DNS隧道分为两种：\"></a>DNS隧道分为两种：</h2><p>直连模式：客户端直接向指定IP地址的DNS服务器发起DNS解析请求</p>\n<p>中继模式：DNS经过互联网的迭代解析，指向指定的DNS服务器。</p>\n<p>区别在于直连模式速度相对快，但安全性相对较差。非直连模式速度相对较慢，但安全性相对较高。大多数情况下都使用中继模式。</p>\n<h2 id=\"iodine\"><a href=\"#iodine\" class=\"headerlink\" title=\"iodine\"></a>iodine</h2><p>iodine可以通过一台DNS服务器制造一个IPv4数据通道，特别适合在目标主机只能发送DNS请求的网络环境中使用。iodine是基于C语言开发的，分为服务端程序iodined和客户端程序iodine。kali中内置了iodine。 下载：<a href=\"https://github.com/Al1ex/iodine\">https://github.com/Al1ex/iodine</a><br>    iodine工作原理是:通过 TAP虚拟网卡,在服务端建立一个局域网;在客户端，通过TAP 建立一个虚拟网卡;两者通过 DNS 隧道连接，处于同—个局域网(可以通过ping命令通信）。在客户端和服务端之间建立连接后，客户机上会多出一块名为“dns0”的虚拟网卡。更多使用方法和功能特性，请参考iodine的官方文档：<a href=\"http://code.kryo.se/iodine\">http://code.kryo.se/iodine</a></p>\n<pre><code>https://github.com/yarrick/iodine\nhttps://code.kryo.se/iodine/\n</code></pre>\n<h2 id=\"另一个工具dns2tcp\"><a href=\"#另一个工具dns2tcp\" class=\"headerlink\" title=\"另一个工具dns2tcp\"></a>另一个工具dns2tcp</h2><p>详细见文章：<a href=\"https://www.carlzeng.top/202305082325.html\">WIFI无线上网短信认证</a></p>\n","more":"<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.top:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n# 有什么用\n\n<p>建立dns隧道来突破连接WIFI后用户密码认证的上网方式</p>\n<p>学习和了解iodine的工作原理</p>\n<h1 id=\"怎么用\"><a href=\"#怎么用\" class=\"headerlink\" title=\"怎么用\"></a>怎么用</h1><p>详见下方的实现过程，含大框架的步骤</p>\n<p>客户端iodine连接上服务端iodined后，继续嵌套SSH来上网（或使用其他的vpn&#x2F;socks等代理方式）</p>\n<p>当前的目标是：突破连接WIFI后，继续提示输入用户名和密码的认证方式（一般还设置了上网时间限制，比如采集手机号码当作用户名，密码用短信下发）</p>\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=dns\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><h2 id=\"1-make-后获取iodined（Server端）-和-iodine（客户端）\"><a href=\"#1-make-后获取iodined（Server端）-和-iodine（客户端）\" class=\"headerlink\" title=\"1. make 后获取iodined（Server端） 和 iodine（客户端）\"></a>1. make 后获取iodined（Server端） 和 iodine（客户端）</h2><p>OpenWrt平台（Linux）：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">opkg install iodined</span></span><br><span class=\"line\">\t\tInstalling iodined (0.7.0-4) to root...</span><br><span class=\"line\">\t\tDownloading https://op.supes.top/23.05/packages/x86_64/packages/iodined_0.7.0-4_x86_64.ipk</span><br><span class=\"line\">\t\tConfiguring iodined.</span><br><span class=\"line\">\t\tiodined: Invalid topdomain: Too short (&lt; 3)</span><br><span class=\"line\">\t\tUsage: iodined [-v] [-h] [-c] [-s] [-f] [-D] [-u user] [-t chrootdir] [-d device] [-m mtu] [-z context] [-l ip address to listen on] [-p port] [-n external ip] [-b dnsport] [-P password] [-F pidfile] [-i max idle time] tunnel_ip[/netmask] topdomain</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">以下部分是客户端的程序：iodine</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">opkg install iodine</span></span><br><span class=\"line\">\t\tInstalling iodine (0.7.0-4) to root...</span><br><span class=\"line\">\t\tDownloading https://op.supes.top/23.05/packages/x86_64/packages/iodine_0.7.0-4_x86_64.ipk</span><br><span class=\"line\">\t\tConfiguring iodine.\t\t</span><br></pre></td></tr></table></figure>\n\n\n\n<p>Mac平台（Mac OS X）：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iodine-0.8.0 % make</span><br><span class=\"line\">\t\tOS is DARWIN, arch is arm64</span><br><span class=\"line\">\t\tCC tun.c</span><br><span class=\"line\">\t\tCC dns.c</span><br><span class=\"line\">\t\tCC read.c</span><br><span class=\"line\">\t\tCC encoding.c</span><br><span class=\"line\">\t\tCC login.c</span><br><span class=\"line\">\t\tCC base32.c</span><br><span class=\"line\">\t\tCC base64.c</span><br><span class=\"line\">\t\tMaking base64u.c</span><br><span class=\"line\">\t\tCC common.c</span><br><span class=\"line\">\t\tcommon.c:283:2: warning: &#x27;daemon&#x27; is deprecated: first deprecated in macOS 10.5 - Use posix_spawn APIs instead. [-Wdeprecated-declarations]</span><br><span class=\"line\">\t\t        daemon(0, 0);</span><br><span class=\"line\">\t\t        ^</span><br><span class=\"line\">\t\t/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:294:6: note: &#x27;daemon&#x27; has been explicitly marked deprecated here</span><br><span class=\"line\">\t\tint      daemon(int, int) __DARWIN_1050(daemon) __OSX_AVAILABLE_BUT_DEPRECATED_MSG(__MAC_10_0, __MAC_10_5, __IPHONE_2_0, __IPHONE_2_0, &quot;Use posix_spawn APIs instead.&quot;) __WATCHOS_PROHIBITED __TVOS_PROHIBITED;</span><br><span class=\"line\">\t\t         ^</span><br><span class=\"line\">\t\t1 warning generated.</span><br><span class=\"line\">\t\tCC iodine.c</span><br><span class=\"line\">\t\tCC client.c</span><br><span class=\"line\">\t\tCC util.c</span><br><span class=\"line\">\t\tLD ../bin/iodine</span><br><span class=\"line\">\t\tCC iodined.c</span><br><span class=\"line\">\t\tCC user.c</span><br><span class=\"line\">\t\tCC fw_query.c</span><br><span class=\"line\">\t\tLD ../bin/iodined</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-设置DNS记录\"><a href=\"#2-设置DNS记录\" class=\"headerlink\" title=\"2. 设置DNS记录\"></a>2. 设置DNS记录</h2><p>以dash.cloudflare.com的配置为例</p>\n<table>\n<thead>\n<tr>\n<th>NS</th>\n<th>t1</th>\n<th>t1ns.carlzeng.top</th>\n<th>仅 DNS</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>A</td>\n<td>t1ns</td>\n<td>125.34.235.88</td>\n<td>仅 DNS</td>\n</tr>\n</tbody></table>\n<h2 id=\"3-运行服务端\"><a href=\"#3-运行服务端\" class=\"headerlink\" title=\"3. 运行服务端\"></a>3. 运行服务端</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iodined -f -P 123 10.0.0.1  t1.carlzeng.top</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-运行客户端\"><a href=\"#4-运行客户端\" class=\"headerlink\" title=\"4. 运行客户端\"></a>4. 运行客户端</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./iodine -f -P 123 t1.carlzeng.top</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"5-使用dns隧道来代理上网\"><a href=\"#5-使用dns隧道来代理上网\" class=\"headerlink\" title=\"5. 使用dns隧道来代理上网\"></a>5. 使用dns隧道来代理上网</h2><p>现实中的代理使用</p>\n<p>​\tssh隧道方案：<br>​\t\t客户端运行：<br>​\t\t\tssh -CfNg -D 7001 <a href=\"mailto:&#x72;&#111;&#x6f;&#116;&#64;&#49;&#x30;&#x2e;&#48;&#46;&#48;&#46;&#49;\">&#x72;&#111;&#x6f;&#116;&#64;&#49;&#x30;&#x2e;&#48;&#46;&#48;&#46;&#49;</a><br>​\t\t客户端的浏览器设置socks代理<br>​\t\t\tIP地址<br>​\t\t\t7001端口</p>\n<h1 id=\"错误解决\"><a href=\"#错误解决\" class=\"headerlink\" title=\"错误解决\"></a>错误解决</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./iodine -f -P 123 t1.carlzeng.top                                                                  </span><br><span class=\"line\">No tun devices found, trying utun                                                                                       </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">Opened utun5                                                                                                            </span><br><span class=\"line\">Opened IPv4 UDP socket                                                                                                  </span><br><span class=\"line\">Sending DNS queries for t1.carlzeng.top to 192.168.6.1                                                                  </span><br><span class=\"line\">Autodetecting DNS query type (use -T to override)..iodine: Got NOTIMP as reply: server does not support our request     </span><br><span class=\"line\">.......iodine: Got NOTIMP as reply: server does not support our request                                                 </span><br><span class=\"line\">.......iodine: Got NOTIMP as reply: server does not support our request                                                 </span><br><span class=\"line\">.....                                                                                                                   </span><br><span class=\"line\">iodine: No suitable DNS query type found. Are you connected to a network?                                               </span><br><span class=\"line\">iodine: If you expect very long roundtrip delays, use -T explicitly.                                                    </span><br><span class=\"line\">iodine: (Also, connecting to an &quot;ancient&quot; version of iodined won&#x27;t work.)  </span><br></pre></td></tr></table></figure>\n\n<p>关闭了iodined以后，仍然还是53端口开启状态，这是相当不正常啊</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">nc -vz op.carlzeng.top 53                        </span><br><span class=\"line\">Connection to op.carlzeng.top port 53 [tcp/domain] succeeded!       </span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h1 id=\"相关知识-灵感来源\"><a href=\"#相关知识-灵感来源\" class=\"headerlink\" title=\"相关知识&#x2F;灵感来源\"></a>相关知识&#x2F;灵感来源</h1><h2 id=\"什么是DNS隧道？\"><a href=\"#什么是DNS隧道？\" class=\"headerlink\" title=\"什么是DNS隧道？\"></a>什么是DNS隧道？</h2><p>DNS隧道(DNS Tunneling)是将其他协议的内容封装在DNS协议中，然后以DNS请求和响应包完成传输数据(通信)的技术。</p>\n<h2 id=\"DNS隧道的原理：\"><a href=\"#DNS隧道的原理：\" class=\"headerlink\" title=\"DNS隧道的原理：\"></a>DNS隧道的原理：</h2><p>在进行DNS查询时，如果查询的域名不在DNS服务器本机的缓存中，就会访问互联网进行查询，然后返回结果。如果在互联网上有一台定制的服务器，那么依靠DNS协议即可进行数据包的交换。从DNS协议的角度看，这样的操作只是在一次次查询某个特定的域名并得到解析结果，但其本质问题是，预期的返回结果应该是一个IP地址，而事实上不是——返回的可以是任意字符串，包括加密的C&amp;C指令。</p>\n<h2 id=\"DNS隧道分为两种：\"><a href=\"#DNS隧道分为两种：\" class=\"headerlink\" title=\"DNS隧道分为两种：\"></a>DNS隧道分为两种：</h2><p>直连模式：客户端直接向指定IP地址的DNS服务器发起DNS解析请求</p>\n<p>中继模式：DNS经过互联网的迭代解析，指向指定的DNS服务器。</p>\n<p>区别在于直连模式速度相对快，但安全性相对较差。非直连模式速度相对较慢，但安全性相对较高。大多数情况下都使用中继模式。</p>\n<h2 id=\"iodine\"><a href=\"#iodine\" class=\"headerlink\" title=\"iodine\"></a>iodine</h2><p>iodine可以通过一台DNS服务器制造一个IPv4数据通道，特别适合在目标主机只能发送DNS请求的网络环境中使用。iodine是基于C语言开发的，分为服务端程序iodined和客户端程序iodine。kali中内置了iodine。 下载：<a href=\"https://github.com/Al1ex/iodine\">https://github.com/Al1ex/iodine</a><br>    iodine工作原理是:通过 TAP虚拟网卡,在服务端建立一个局域网;在客户端，通过TAP 建立一个虚拟网卡;两者通过 DNS 隧道连接，处于同—个局域网(可以通过ping命令通信）。在客户端和服务端之间建立连接后，客户机上会多出一块名为“dns0”的虚拟网卡。更多使用方法和功能特性，请参考iodine的官方文档：<a href=\"http://code.kryo.se/iodine\">http://code.kryo.se/iodine</a></p>\n<pre><code>https://github.com/yarrick/iodine\nhttps://code.kryo.se/iodine/\n</code></pre>\n<h2 id=\"另一个工具dns2tcp\"><a href=\"#另一个工具dns2tcp\" class=\"headerlink\" title=\"另一个工具dns2tcp\"></a>另一个工具dns2tcp</h2><p>详细见文章：<a href=\"https://www.carlzeng.top/202305082325.html\">WIFI无线上网短信认证</a></p>","categories":[{"name":"dns隧道","path":"api/categories/dns隧道.json"}],"tags":[{"name":"Mac","path":"api/tags/Mac.json"},{"name":"OpenWrt","path":"api/tags/OpenWrt.json"},{"name":"Debian","path":"api/tags/Debian.json"},{"name":"iodine","path":"api/tags/iodine.json"},{"name":"dns","path":"api/tags/dns.json"},{"name":"WIFI","path":"api/tags/WIFI.json"},{"name":"隧道","path":"api/tags/隧道.json"},{"name":"ssh","path":"api/tags/ssh.json"}]}