{"title":"如何建立dns隧道来突破连接WIFI后用户密码认证的上网方式","slug":"如何建立dns隧道来突破连接WIFI后用户密码认证的上网方式","date":"2024-02-19T12:08:44.000Z","updated":"2024-10-25T13:16:40.621Z","comments":true,"path":"api/articles/如何建立dns隧道来突破连接WIFI后用户密码认证的上网方式.json","excerpt":" [Figure] ","covers":["https://img.carlzeng.com:3/i/2024/02/21/65d58e67ec924.png","https://img.carlzeng.com:3/i/2024/02/21/65d5c73550e5f.png","https://img.carlzeng.com:3/i/2024/02/21/65d5c789f3d63.png"],"content":"<img class=\"lozad\" data-src=\"\">\n\n<img data-src=\"https://img.carlzeng.com:3/i/2024/02/21/65d58e67ec924.png\" alt=\"image-20240221134517708\" style=\"zoom:50%;\" />\n\n<span id=\"more\"></span>\n\n<ul>\n<li>2024.3.5 优化了DNS的A记录（经测试优化t1ns的A记录成功）</li>\n</ul>\n<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.com:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n\n\n<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>建立dns隧道来突破连接WIFI后用户密码认证的上网方式</p>\n<p>学习和了解iodine的工作原理</p>\n<p>实测环境：</p>\n<ul>\n<li>J4125中的OpenWrt；作为服务端</li>\n<li>Mac OS X 电脑；作为客户端</li>\n</ul>\n<h1 id=\"怎么用\"><a href=\"#怎么用\" class=\"headerlink\" title=\"怎么用\"></a>怎么用</h1><p>详见下方的实现过程，含大框架的步骤</p>\n<p>客户端iodine连接上服务端iodined后，继续嵌套SSH来上网（或使用其他的vpn&#x2F;socks等代理方式）</p>\n<p>当前的目标是：突破连接WIFI后，继续提示输入用户名和密码的认证方式（一般还设置了上网时间限制，比如采集手机号码当作用户名，密码用短信下发）</p>\n<p>当前应用：可以建立dns隧道来突破连接WIFI后用户密码认证的上网方式，然后远程SSH来管理或给Linux主机下达指令</p>\n<p>下一步：</p>\n<ul>\n<li>如何提速？减少连接使用时的等待时间（目前的应用，需要超级大的耐心）</li>\n<li>是否有其他的应用场景？或结合其他的应用？</li>\n</ul>\n<h1 id=\"相关知识-灵感来源\"><a href=\"#相关知识-灵感来源\" class=\"headerlink\" title=\"相关知识&#x2F;灵感来源\"></a>相关知识&#x2F;灵感来源</h1><h2 id=\"什么是DNS隧道？\"><a href=\"#什么是DNS隧道？\" class=\"headerlink\" title=\"什么是DNS隧道？\"></a>什么是DNS隧道？</h2><p>DNS隧道(DNS Tunneling)是将其他协议的内容封装在DNS协议中，然后以DNS请求和响应包完成传输数据(通信)的技术。</p>\n<h2 id=\"DNS隧道的原理：\"><a href=\"#DNS隧道的原理：\" class=\"headerlink\" title=\"DNS隧道的原理：\"></a>DNS隧道的原理：</h2><p>在进行DNS查询时，如果查询的域名不在DNS服务器本机的缓存中，就会访问互联网进行查询，然后返回结果。如果在互联网上有一台定制的服务器，那么依靠DNS协议即可进行数据包的交换。从DNS协议的角度看，这样的操作只是在一次次查询某个特定的域名并得到解析结果，但其本质问题是，预期的返回结果应该是一个IP地址，而事实上不是——返回的可以是任意字符串，包括加密的C&amp;C指令。</p>\n<h2 id=\"DNS隧道分为两种：\"><a href=\"#DNS隧道分为两种：\" class=\"headerlink\" title=\"DNS隧道分为两种：\"></a>DNS隧道分为两种：</h2><p>直连模式：客户端直接向指定IP地址的DNS服务器发起DNS解析请求</p>\n<p>中继模式：DNS经过互联网的迭代解析，指向指定的DNS服务器。</p>\n<p>区别在于直连模式速度相对快，但安全性相对较差。非直连模式速度相对较慢，但安全性相对较高。大多数情况下都使用中继模式。</p>\n<h2 id=\"iodine\"><a href=\"#iodine\" class=\"headerlink\" title=\"iodine\"></a>iodine</h2><p>iodine可以通过一台DNS服务器制造一个IPv4数据通道，特别适合在目标主机只能发送DNS请求的网络环境中使用。iodine是基于C语言开发的，分为服务端程序iodined和客户端程序iodine。kali中内置了iodine。 下载：<a href=\"https://github.com/Al1ex/iodine\">https://github.com/Al1ex/iodine</a><br>    iodine工作原理是:通过 TAP虚拟网卡,在服务端建立一个局域网;在客户端，通过TAP 建立一个虚拟网卡;两者通过 DNS 隧道连接，处于同—个局域网(可以通过ping命令通信）。在客户端和服务端之间建立连接后，客户机上会多出一块名为“dns0”的虚拟网卡。更多使用方法和功能特性，请参考iodine的官方文档：<a href=\"http://code.kryo.se/iodine\">http://code.kryo.se/iodine</a></p>\n<pre><code>https://github.com/yarrick/iodine\nhttps://code.kryo.se/iodine/\n</code></pre>\n<h2 id=\"另一个工具dns2tcp\"><a href=\"#另一个工具dns2tcp\" class=\"headerlink\" title=\"另一个工具dns2tcp\"></a>另一个工具dns2tcp</h2><p>详细见文章：<a href=\"https://www.carlzeng.com/202305082325.html\">WIFI无线上网短信认证</a></p>\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.com:3/appsearch?q=dns\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><h2 id=\"1-make-后获取iodined（Server端）-和-iodine（客户端）\"><a href=\"#1-make-后获取iodined（Server端）-和-iodine（客户端）\" class=\"headerlink\" title=\"1. make 后获取iodined（Server端） 和 iodine（客户端）\"></a>1. make 后获取iodined（Server端） 和 iodine（客户端）</h2><p>OpenWrt平台（Linux）：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">opkg install iodined</span></span><br><span class=\"line\">\t\tInstalling iodined (0.7.0-4) to root...</span><br><span class=\"line\">\t\tDownloading https://op.supes.top/23.05/packages/x86_64/packages/iodined_0.7.0-4_x86_64.ipk</span><br><span class=\"line\">\t\tConfiguring iodined.</span><br><span class=\"line\">\t\tiodined: Invalid topdomain: Too short (&lt; 3)</span><br><span class=\"line\">\t\tUsage: iodined [-v] [-h] [-c] [-s] [-f] [-D] [-u user] [-t chrootdir] [-d device] [-m mtu] [-z context] [-l ip address to listen on] [-p port] [-n external ip] [-b dnsport] [-P password] [-F pidfile] [-i max idle time] tunnel_ip[/netmask] topdomain</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">以下部分是客户端的程序：iodine</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">opkg install iodine</span></span><br><span class=\"line\">\t\tInstalling iodine (0.7.0-4) to root...</span><br><span class=\"line\">\t\tDownloading https://op.supes.top/23.05/packages/x86_64/packages/iodine_0.7.0-4_x86_64.ipk</span><br><span class=\"line\">\t\tConfiguring iodine.\t\t</span><br></pre></td></tr></table></figure>\n\n\n\n<p>Mac平台（Mac OS X）：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iodine-0.8.0 % make</span><br><span class=\"line\">\t\tOS is DARWIN, arch is arm64</span><br><span class=\"line\">\t\tCC tun.c</span><br><span class=\"line\">\t\tCC dns.c</span><br><span class=\"line\">\t\tCC read.c</span><br><span class=\"line\">\t\tCC encoding.c</span><br><span class=\"line\">\t\tCC login.c</span><br><span class=\"line\">\t\tCC base32.c</span><br><span class=\"line\">\t\tCC base64.c</span><br><span class=\"line\">\t\tMaking base64u.c</span><br><span class=\"line\">\t\tCC common.c</span><br><span class=\"line\">\t\tcommon.c:283:2: warning: &#x27;daemon&#x27; is deprecated: first deprecated in macOS 10.5 - Use posix_spawn APIs instead. [-Wdeprecated-declarations]</span><br><span class=\"line\">\t\t        daemon(0, 0);</span><br><span class=\"line\">\t\t        ^</span><br><span class=\"line\">\t\t/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:294:6: note: &#x27;daemon&#x27; has been explicitly marked deprecated here</span><br><span class=\"line\">\t\tint      daemon(int, int) __DARWIN_1050(daemon) __OSX_AVAILABLE_BUT_DEPRECATED_MSG(__MAC_10_0, __MAC_10_5, __IPHONE_2_0, __IPHONE_2_0, &quot;Use posix_spawn APIs instead.&quot;) __WATCHOS_PROHIBITED __TVOS_PROHIBITED;</span><br><span class=\"line\">\t\t         ^</span><br><span class=\"line\">\t\t1 warning generated.</span><br><span class=\"line\">\t\tCC iodine.c</span><br><span class=\"line\">\t\tCC client.c</span><br><span class=\"line\">\t\tCC util.c</span><br><span class=\"line\">\t\tLD ../bin/iodine</span><br><span class=\"line\">\t\tCC iodined.c</span><br><span class=\"line\">\t\tCC user.c</span><br><span class=\"line\">\t\tCC fw_query.c</span><br><span class=\"line\">\t\tLD ../bin/iodined</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-设置DNS记录\"><a href=\"#2-设置DNS记录\" class=\"headerlink\" title=\"2. 设置DNS记录\"></a>2. 设置DNS记录</h2><p>以dash.cloudflare.com的配置为例，新增以下这两条DNS记录</p>\n<table>\n<thead>\n<tr>\n<th>DNS类型</th>\n<th>名称</th>\n<th>内容&#x2F;值</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>NS</td>\n<td>t1</td>\n<td>t1ns.carlzeng.com</td>\n<td>仅 DNS</td>\n</tr>\n<tr>\n<td>A</td>\n<td>t1ns</td>\n<td>125.34.235.88</td>\n<td>仅 DNS, 可优化</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>20240305 经实践测试，这条A记录是可以有泛域名*A记录解析后优化掉（即删去）。</p>\n<p>原理：这个APP只需要得到t1ns.carlzeng.com的IP地址，而不设置这条A记录，DNS系统会自动使用泛域名*所对应的IP地址，而这正是我想要达到的效果（减少了宽带DDNS需要更新的DNS记录数）</p>\n</blockquote>\n<h2 id=\"3-运行服务端iodined\"><a href=\"#3-运行服务端iodined\" class=\"headerlink\" title=\"3. 运行服务端iodined\"></a>3. 运行服务端iodined</h2><p><img data-src=\"https://img.carlzeng.com:3/i/2024/02/21/65d5c73550e5f.png\" alt=\"image-20240221174938467\"></p>\n<p>这个范例在OpenWrt上无法成功：iodined -f -P 123 10.0.0.1  t1.carlzeng.com</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">请使用-c  和 -l 125.34.235.88 指定WAN口的监听IP， —D 为调试信息输出</span></span><br><span class=\"line\">iodined -D -f -c -l 125.34.235.88 -p 53 -P 123 192.168.99.1/24 t1.carlzeng.com</span><br></pre></td></tr></table></figure>\n\n<p>长期运行的话，放入后台运行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">iodined -c -l 125.34.235.88 -p 53 -P 123 192.168.99.1/24 t1.carlzeng.com</span>        </span><br><span class=\"line\">Opened dns0                                                                                                 </span><br><span class=\"line\">Setting IP of dns0 to 192.168.99.1                                                                          </span><br><span class=\"line\">Setting MTU of dns0 to 1130                                                                                 </span><br><span class=\"line\">Opened IPv4 UDP socket                                                                                      </span><br><span class=\"line\">Listening to dns for domain t1.carlzeng.com                                                                 </span><br><span class=\"line\">Detaching from terminal...  </span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-运行客户端iodine\"><a href=\"#4-运行客户端iodine\" class=\"headerlink\" title=\"4. 运行客户端iodine\"></a>4. 运行客户端iodine</h2><p><img data-src=\"https://img.carlzeng.com:3/i/2024/02/21/65d5c789f3d63.png\" alt=\"image-20240221175104599\"></p>\n<p>以Mac OS X运行客户端为例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./iodine -f -P 123 t1.carlzeng.com</span><br></pre></td></tr></table></figure>\n\n\n\n<p>成功后的信息：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">./iodine -f -P 123  t1.carlzeng.com</span></span><br><span class=\"line\">No tun devices found, trying utun</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">Opened utun6</span><br><span class=\"line\">Opened IPv4 UDP socket</span><br><span class=\"line\">Sending DNS queries for t1.carlzeng.com to 223.5.5.5</span><br><span class=\"line\">Autodetecting DNS query type (use -T to override).</span><br><span class=\"line\">Using DNS type NULL queries</span><br><span class=\"line\">Version ok, both using protocol v 0x00000502. You are user #0</span><br><span class=\"line\">Setting IP of utun6 to 10.0.0.2</span><br><span class=\"line\">Adding route 10.0.0.0/27 to 10.0.0.2</span><br><span class=\"line\">add net 10.0.0.0: gateway 10.0.0.2</span><br><span class=\"line\">Setting MTU of utun6 to 1130</span><br><span class=\"line\">Server tunnel IP is 10.0.0.1</span><br><span class=\"line\">Requesting server address to attempt raw UDP mode (skip with -r) </span><br><span class=\"line\">Server is at 125.34.235.88, trying raw login: (skip with -r) ....failed</span><br><span class=\"line\">Using EDNS0 extension</span><br><span class=\"line\">DNS queries get changed to lowercase, keeping upstream codec Base32</span><br><span class=\"line\">No alternative downstream codec available, using default (Raw)</span><br><span class=\"line\">Switching to lazy mode for low-latency</span><br><span class=\"line\">Server switched to lazy mode</span><br><span class=\"line\">Autoprobing max downstream fragment size... (skip with -m fragsize)</span><br><span class=\"line\">...768 not ok.. ...384 not ok.. 192 ok.. ...288 not ok.. ...240 not ok.. 216 ok.. 228 ok.. ...234 not ok.. ...231 not ok.. 230 ok.. will use 230-2=228</span><br><span class=\"line\">Setting downstream fragment size to max 228...</span><br><span class=\"line\">Connection setup complete, transmitting data.</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># sudo ./iodine -r -f -P 123 202.106.0.20 t1.carlzeng.com</span><br><span class=\"line\">No tun devices found, trying utun</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">Opened utun6</span><br><span class=\"line\">Opened IPv4 UDP socket</span><br><span class=\"line\">Sending DNS queries for t1.carlzeng.com to 202.106.0.20</span><br><span class=\"line\">Autodetecting DNS query type (use -T to override).</span><br><span class=\"line\">Using DNS type NULL queries</span><br><span class=\"line\">Version ok, both using protocol v 0x00000502. You are user #6</span><br><span class=\"line\">Setting IP of utun6 to 192.168.99.8</span><br><span class=\"line\">Adding route 192.168.99.0/24 to 192.168.99.8</span><br><span class=\"line\">add net 192.168.99.0: gateway 192.168.99.8</span><br><span class=\"line\">Setting MTU of utun6 to 1130</span><br><span class=\"line\">Server tunnel IP is 192.168.99.1</span><br><span class=\"line\">Skipping raw mode</span><br><span class=\"line\">Using EDNS0 extension</span><br><span class=\"line\">Switching upstream to codec Base128</span><br><span class=\"line\">Server switched upstream to codec Base128</span><br><span class=\"line\">No alternative downstream codec available, using default (Raw)</span><br><span class=\"line\">Switching to lazy mode for low-latency</span><br><span class=\"line\">Server switched to lazy mode</span><br><span class=\"line\">Autoprobing max downstream fragment size... (skip with -m fragsize)</span><br><span class=\"line\">...768 not ok.. ...384 not ok.. 192 ok.. ...288 not ok.. ...240 not ok.. 216 ok.. 228 ok.. ...234 not ok.. ...231 not ok.. 230 ok.. will use 230-2=228</span><br><span class=\"line\">Setting downstream fragment size to max 228...</span><br><span class=\"line\">Connection setup complete, transmitting data.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>长期运行的话，放入后台运行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">sudo ./iodine -r -P 123 202.106.0.20 t1.carlzeng.com</span></span><br><span class=\"line\">No tun devices found, trying utun</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">Opened utun6</span><br><span class=\"line\">Opened IPv4 UDP socket</span><br><span class=\"line\">Sending DNS queries for t1.carlzeng.com to 202.106.0.20</span><br><span class=\"line\">Autodetecting DNS query type (use -T to override).</span><br><span class=\"line\">Using DNS type NULL queries</span><br><span class=\"line\">Version ok, both using protocol v 0x00000502. You are user #1</span><br><span class=\"line\">Setting IP of utun6 to 192.168.99.3</span><br><span class=\"line\">Adding route 192.168.99.0/24 to 192.168.99.3</span><br><span class=\"line\">add net 192.168.99.0: gateway 192.168.99.3</span><br><span class=\"line\">Setting MTU of utun6 to 1130</span><br><span class=\"line\">Server tunnel IP is 192.168.99.1</span><br><span class=\"line\">Skipping raw mode</span><br><span class=\"line\">Using EDNS0 extension</span><br><span class=\"line\">DNS queries get changed to lowercase, keeping upstream codec Base32</span><br><span class=\"line\">No alternative downstream codec available, using default (Raw)</span><br><span class=\"line\">Switching to lazy mode for low-latency</span><br><span class=\"line\">Server switched to lazy mode</span><br><span class=\"line\">Autoprobing max downstream fragment size... (skip with -m fragsize)</span><br><span class=\"line\">...768 not ok.. ...384 not ok.. 192 ok.. ...288 not ok.. ...240 not ok.. 216 ok.. 228 ok.. ...234 not ok.. ...231 not ok.. 230 ok.. will use 230-2=228</span><br><span class=\"line\">Setting downstream fragment size to max 228...</span><br><span class=\"line\">Connection setup complete, transmitting data.</span><br><span class=\"line\">Detaching from terminal...</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h2 id=\"5-使用dns隧道来代理上网\"><a href=\"#5-使用dns隧道来代理上网\" class=\"headerlink\" title=\"5. 使用dns隧道来代理上网\"></a>5. 使用dns隧道来代理上网</h2><p>注意：这个方案需要开启iodined服务端（也就是OpenWrt）防火墙设置；开启SSH访问运行从Wan口访问，开启防火墙运行接收入站流量。</p>\n<p>现实中的代理使用; </p>\n<p>​\tssh隧道方案：<br>​\t\t客户端运行：<br>​\t\t\tssh -CfNg -D 7001 <a href=\"mailto:&#x72;&#x6f;&#111;&#116;&#64;&#49;&#48;&#46;&#48;&#x2e;&#48;&#x2e;&#49;\">&#x72;&#x6f;&#111;&#116;&#64;&#49;&#48;&#46;&#48;&#x2e;&#48;&#x2e;&#49;</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -CfNg -D 7001 root@192.168.99.1</span><br></pre></td></tr></table></figure>\n\n\n\n<p>​\t\t客户端的浏览器设置socks代理<br>​\t\t\tIP地址<br>​\t\t\t7001端口</p>\n<h2 id=\"感受\"><a href=\"#感受\" class=\"headerlink\" title=\"感受\"></a>感受</h2><p>通过以上设置，可正常打开网页。但网速实在不敢恭维，并无多大现实日常使用的意思。</p>\n<p>除非极其特别的情况：比如，通过此隧道连接来触发远程服务端执行特定的预编译的指令。</p>\n<h1 id=\"错误及解决方法\"><a href=\"#错误及解决方法\" class=\"headerlink\" title=\"错误及解决方法\"></a>错误及解决方法</h1><p>#1.客户端卡死：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">./iodine -f -P 123 t1.carlzeng.com</span>                                                                  </span><br><span class=\"line\">No tun devices found, trying utun                                                                                       </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">Opened utun5                                                                                                            </span><br><span class=\"line\">Opened IPv4 UDP socket                                                                                                  </span><br><span class=\"line\">Sending DNS queries for t1.carlzeng.com to 192.168.6.1                                                                  </span><br><span class=\"line\">Autodetecting DNS query type (use -T to override)..iodine: Got NOTIMP as reply: server does not support our request     </span><br><span class=\"line\">.......iodine: Got NOTIMP as reply: server does not support our request                                                 </span><br><span class=\"line\">.......iodine: Got NOTIMP as reply: server does not support our request                                                 </span><br><span class=\"line\">.....                                                                                                                   </span><br><span class=\"line\">iodine: No suitable DNS query type found. Are you connected to a network?                                               </span><br><span class=\"line\">iodine: If you expect very long roundtrip delays, use -T explicitly.                                                    </span><br><span class=\"line\">iodine: (Also, connecting to an &quot;ancient&quot; version of iodined won&#x27;t work.)  </span><br><span class=\"line\"></span><br><span class=\"line\">------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">sudo ./iodine -f -P 123 202.106.0.20  t1.carlzeng.com</span></span><br><span class=\"line\">No tun devices found, trying utun</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">Opened utun6</span><br><span class=\"line\">Opened IPv4 UDP socket</span><br><span class=\"line\">Sending DNS queries for t1.carlzeng.com to 202.106.0.20</span><br><span class=\"line\">Autodetecting DNS query type (use -T to override).....................</span><br><span class=\"line\">iodine: No suitable DNS query type found. Are you connected to a network?</span><br><span class=\"line\">iodine: If you expect very long roundtrip delays, use -T explicitly.</span><br><span class=\"line\">iodine: (Also, connecting to an &quot;ancient&quot; version of iodined won&#x27;t work.)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>#1解决办法：</p>\n<p>换一个客户端来测试（从Mac换到OpenWrt，或者Debian） </p>\n<p>使用官方的在线工具测试：<a href=\"https://code.kryo.se/iodine/check-it/\">https://code.kryo.se/iodine/check-it/</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Troubleshoot your iodine setup</span><br><span class=\"line\"></span><br><span class=\"line\">Analyzing DNS setup for tunnel domain &#x27;t1.carlzeng.com&#x27;... (might take some time)</span><br><span class=\"line\"></span><br><span class=\"line\">Looking for nameserver for carlzeng.com.. got paityn.ns.cloudflare.com (at 108.162.194.18).</span><br><span class=\"line\">Resolving delegation of t1.carlzeng.com at 108.162.194.18... to t1ns.carlzeng.com (at 125.34.235.88).</span><br><span class=\"line\"></span><br><span class=\"line\">Expecting iodined to be accessible at 125.34.235.88... no reply.</span><br><span class=\"line\"></span><br><span class=\"line\">Error: Make sure iodined is running and the firewall accepts UDP port 53. Also check any port forwards in use.</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iodined -f -DDD -l 125.34.235.88 -p 53 -P 123 10.0.0.1 t1.carlzeng.com</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">最终改进后的服务端命令</span></span><br><span class=\"line\">iodined -f -c -l 125.34.235.88 -p 53 -P 123 10.0.0.1 t1.carlzeng.com  </span><br></pre></td></tr></table></figure>\n\n<p>​\t</p>\n<ol start=\"2\">\n<li>关闭了iodined以后，仍然还是53端口开启状态，这是相当不正常?(后来来看，这是正常的)</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">nc -vz op.carlzeng.com 53                        </span><br><span class=\"line\">Connection to op.carlzeng.com port 53 [tcp/domain] succeeded!       </span><br></pre></td></tr></table></figure>\n\n<p>#2解决方法：</p>\n<p>​\t登录到OpenWrt的SSH，关闭dnsmasq服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">关闭OpenWrt的DHCP和DNS服务</span></span><br><span class=\"line\">/etc/init.d/dnsmasq stop</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">关闭，重启，防火墙服务</span></span><br><span class=\"line\">/etc/init.d/firewall stop</span><br><span class=\"line\">/etc/init.d/firewall restart</span><br></pre></td></tr></table></figure>\n\n<p>登录到UI，<a href=\"http://192.168.6.1:8080/cgi-bin/luci/admin/network/dhcp\">修改DNS服务端口从53改为5353</a>:</p>\n<p>原来iodined使用的是udp的53端口，而运行完iodined这个是开启着的</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">NC检查udp端口情况， -vz（检测TCP端口） 变成 -vuz（检测UDP端口）</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">nc -vuz 192.168.6.1 53</span>                                   </span><br><span class=\"line\">Connection to 192.168.6.1 port 53 [udp/domain] succeeded! </span><br></pre></td></tr></table></figure>\n\n<p>最终的解决方法是：</p>\n<p>让iodined指定监听OpenWrt的Wan口IP地址，举例：-l 125.34.235.88（这是你iodined的公网IP地址）</p>\n<p>#3 检查进程是否在运行，以及端口的使用情况</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">搜索输出的内容包含特定字符的行</span></span><br><span class=\"line\">ps | grep iodine </span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">在进程列表中搜索包含iodine</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">在开放端口的列表中模糊搜索53端口的所有信息</span></span><br><span class=\"line\">netstat -tulpn | grep 53</span><br></pre></td></tr></table></figure>\n\n\n\n<p>#4 客户端和服务端连接成功后（调试信息可见：Connection setup complete, transmitting data. ），</p>\n<p>如果客户端依旧无法ping通192.168.99.1（iodined服务端虚拟接口被分配的IP地址）</p>\n<p>成功后如果客户端依旧无法ping通192.168.99.1</p>\n<p>#4 解决方法：</p>\n<p>开启OpenWrt（iodine服务端）的防火墙，<a href=\"http://192.168.6.1:8080/cgi-bin/luci/admin/network/firewall/zones\">允许入站数据包</a>（入站数据 &#x3D; 接受）。</p>\n<p>#5 客户端和服务端连接成功后（调试信息可见：Connection setup complete, transmitting data. ），</p>\n<p>如果客户端依旧无法ssh通192.168.99.1（iodined服务端虚拟接口被分配的IP地址）的22端口。</p>\n<p>#5 解决方法：</p>\n<p>配置OpenWrt的<a href=\"http://192.168.6.1:8080/cgi-bin/luci/admin/system/admin/dropbear\">系统 》 管理权</a></p>\n<p>设置 “接口” 为 “未指定”； 含义： 仅监听指定的接口，未指定则监听全部</p>\n<p>#6 修改了OpenWrt的防火墙设置或DHCP&#x2F;DNS设置后，</p>\n<p>iodine: Got reply without error, but also without question and&#x2F;or answer  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">客户端重启提示错误：</span></span><br><span class=\"line\">iodine: Got NOTIMP as reply: server does not support our request                                                  </span><br><span class=\"line\">.....                                                                                                              </span><br><span class=\"line\">iodine: No suitable DNS query type found. Are you connected to a network? </span><br></pre></td></tr></table></figure>\n\n<p>#6 解决方法：</p>\n<p>重启服务端+客户端，必须都要重启（因为服务的其他设置被修改了，需要重启；</p>\n<p>而客户端因为服务端重启了，也需要被重启）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">服务端查询旧的iodined所运行的进程ID，然后<span class=\"built_in\">kill</span>掉</span></span><br><span class=\"line\">ps | grep iodine        </span><br><span class=\"line\">kill -9 &#123;pid&#125;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">直到输出变成：</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">ps | grep iodine</span></span><br><span class=\"line\">9291 root      1200 S    grep iodine</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">然后重新启动</span></span><br><span class=\"line\">iodined -c -l 125.34.235.88 -p 53 -P 123 192.168.99.1/24 t1.carlzeng.com</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">客户端，Mac OSX为例：</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">sudo ./iodine -r -f -P 123 202.106.0.20 t1.carlzeng.com</span></span><br><span class=\"line\">....</span><br><span class=\"line\">Connection setup complete, transmitting data.</span><br></pre></td></tr></table></figure>\n\n\n\n<p>#7 由于连接速度慢，当并发多的时候（同时刷新多个网页）服务经常容易进入假死状态，这是远程如何重启整个链路呢？</p>\n<p>#7解决办法：</p>\n<p>7.1 ssh进iodined的服务器：ssh <a href=\"mailto:&#x72;&#x6f;&#x6f;&#x74;&#x40;&#x31;&#57;&#50;&#46;&#49;&#x36;&#56;&#46;&#x39;&#x39;&#x2e;&#49;\">&#x72;&#x6f;&#x6f;&#x74;&#x40;&#x31;&#57;&#50;&#46;&#49;&#x36;&#56;&#46;&#x39;&#x39;&#x2e;&#49;</a>   </p>\n<p>7.2 ps | grep iodined </p>\n<p>7.3 kill -9 23611 &amp;&amp; iodined -c -l 125.34.235.88 -p 53 -P 123 192.168.99.1&#x2F;24 t1.carlzeng.com</p>\n<p>这样就可以远程重启iodined服务端，然后在本地在重启一下iodine就可以获取到全新的链路</p>\n<h1 id=\"在线检测DNS以及iodined配置\"><a href=\"#在线检测DNS以及iodined配置\" class=\"headerlink\" title=\"在线检测DNS以及iodined配置\"></a>在线检测DNS以及iodined配置</h1><p><a href=\"https://code.kryo.se/iodine/check-it/\">https://code.kryo.se/iodine/check-it/</a></p>\n<p><strong>Troubleshoot your iodine setup</strong></p>\n<p>Analyzing DNS setup for tunnel domain ‘t1.carlzeng.com’… (might take some time)</p>\n<p>Looking for nameserver for carlzeng.com.. got amir.ns.cloudflare.com (at 108.162.193.62).<br>Resolving delegation of t1.carlzeng.com at 108.162.193.62… to t1ns.carlzeng.com (at 125.34.235.**).</p>\n<p>Expecting iodined to be accessible at 125.34.235.**… yes, using proto 00000502.<br>Testing iodine reply using default nameserver… ok.</p>\n<p><strong>Well done</strong>, your iodine setup seems fine!</p>\n<h1 id=\"感谢列表\"><a href=\"#感谢列表\" class=\"headerlink\" title=\"感谢列表\"></a>感谢列表</h1><p><a href=\"https://code.kryo.se/iodine/\">iodine</a> 》 <a href=\"https://code.kryo.se/iodine/README.html\">ReadMe</a> 〉<a href=\"https://github.com/yarrick/iodine\">Github</a></p>\n<p><a href=\"https://forum.turris.cz/t/howto-dns-tunneling-with-iodined-on-turrisos-hbk-5-2-3/15620/4\">[HOWTO] DNS tunneling with iodined on TurrisOS HBK [5.2.3]</a></p>\n<p><a href=\"https://m.freebuf.com/articles/network/284740.html\">内网隐藏通信隧道技术——DNS隧道</a></p>\n<p><a href=\"https://mihail.stoynov.com/2013/02/16/iodined-how-to-use-free-internet-on-airports/\">Iodined - how to use free internet on airports</a></p>\n","more":"<ul>\n<li>2024.3.5 优化了DNS的A记录（经测试优化t1ns的A记录成功）</li>\n</ul>\n<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.com:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n\n\n<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>建立dns隧道来突破连接WIFI后用户密码认证的上网方式</p>\n<p>学习和了解iodine的工作原理</p>\n<p>实测环境：</p>\n<ul>\n<li>J4125中的OpenWrt；作为服务端</li>\n<li>Mac OS X 电脑；作为客户端</li>\n</ul>\n<h1 id=\"怎么用\"><a href=\"#怎么用\" class=\"headerlink\" title=\"怎么用\"></a>怎么用</h1><p>详见下方的实现过程，含大框架的步骤</p>\n<p>客户端iodine连接上服务端iodined后，继续嵌套SSH来上网（或使用其他的vpn&#x2F;socks等代理方式）</p>\n<p>当前的目标是：突破连接WIFI后，继续提示输入用户名和密码的认证方式（一般还设置了上网时间限制，比如采集手机号码当作用户名，密码用短信下发）</p>\n<p>当前应用：可以建立dns隧道来突破连接WIFI后用户密码认证的上网方式，然后远程SSH来管理或给Linux主机下达指令</p>\n<p>下一步：</p>\n<ul>\n<li>如何提速？减少连接使用时的等待时间（目前的应用，需要超级大的耐心）</li>\n<li>是否有其他的应用场景？或结合其他的应用？</li>\n</ul>\n<h1 id=\"相关知识-灵感来源\"><a href=\"#相关知识-灵感来源\" class=\"headerlink\" title=\"相关知识&#x2F;灵感来源\"></a>相关知识&#x2F;灵感来源</h1><h2 id=\"什么是DNS隧道？\"><a href=\"#什么是DNS隧道？\" class=\"headerlink\" title=\"什么是DNS隧道？\"></a>什么是DNS隧道？</h2><p>DNS隧道(DNS Tunneling)是将其他协议的内容封装在DNS协议中，然后以DNS请求和响应包完成传输数据(通信)的技术。</p>\n<h2 id=\"DNS隧道的原理：\"><a href=\"#DNS隧道的原理：\" class=\"headerlink\" title=\"DNS隧道的原理：\"></a>DNS隧道的原理：</h2><p>在进行DNS查询时，如果查询的域名不在DNS服务器本机的缓存中，就会访问互联网进行查询，然后返回结果。如果在互联网上有一台定制的服务器，那么依靠DNS协议即可进行数据包的交换。从DNS协议的角度看，这样的操作只是在一次次查询某个特定的域名并得到解析结果，但其本质问题是，预期的返回结果应该是一个IP地址，而事实上不是——返回的可以是任意字符串，包括加密的C&amp;C指令。</p>\n<h2 id=\"DNS隧道分为两种：\"><a href=\"#DNS隧道分为两种：\" class=\"headerlink\" title=\"DNS隧道分为两种：\"></a>DNS隧道分为两种：</h2><p>直连模式：客户端直接向指定IP地址的DNS服务器发起DNS解析请求</p>\n<p>中继模式：DNS经过互联网的迭代解析，指向指定的DNS服务器。</p>\n<p>区别在于直连模式速度相对快，但安全性相对较差。非直连模式速度相对较慢，但安全性相对较高。大多数情况下都使用中继模式。</p>\n<h2 id=\"iodine\"><a href=\"#iodine\" class=\"headerlink\" title=\"iodine\"></a>iodine</h2><p>iodine可以通过一台DNS服务器制造一个IPv4数据通道，特别适合在目标主机只能发送DNS请求的网络环境中使用。iodine是基于C语言开发的，分为服务端程序iodined和客户端程序iodine。kali中内置了iodine。 下载：<a href=\"https://github.com/Al1ex/iodine\">https://github.com/Al1ex/iodine</a><br>    iodine工作原理是:通过 TAP虚拟网卡,在服务端建立一个局域网;在客户端，通过TAP 建立一个虚拟网卡;两者通过 DNS 隧道连接，处于同—个局域网(可以通过ping命令通信）。在客户端和服务端之间建立连接后，客户机上会多出一块名为“dns0”的虚拟网卡。更多使用方法和功能特性，请参考iodine的官方文档：<a href=\"http://code.kryo.se/iodine\">http://code.kryo.se/iodine</a></p>\n<pre><code>https://github.com/yarrick/iodine\nhttps://code.kryo.se/iodine/\n</code></pre>\n<h2 id=\"另一个工具dns2tcp\"><a href=\"#另一个工具dns2tcp\" class=\"headerlink\" title=\"另一个工具dns2tcp\"></a>另一个工具dns2tcp</h2><p>详细见文章：<a href=\"https://www.carlzeng.com/202305082325.html\">WIFI无线上网短信认证</a></p>\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.com:3/appsearch?q=dns\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><h2 id=\"1-make-后获取iodined（Server端）-和-iodine（客户端）\"><a href=\"#1-make-后获取iodined（Server端）-和-iodine（客户端）\" class=\"headerlink\" title=\"1. make 后获取iodined（Server端） 和 iodine（客户端）\"></a>1. make 后获取iodined（Server端） 和 iodine（客户端）</h2><p>OpenWrt平台（Linux）：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">opkg install iodined</span></span><br><span class=\"line\">\t\tInstalling iodined (0.7.0-4) to root...</span><br><span class=\"line\">\t\tDownloading https://op.supes.top/23.05/packages/x86_64/packages/iodined_0.7.0-4_x86_64.ipk</span><br><span class=\"line\">\t\tConfiguring iodined.</span><br><span class=\"line\">\t\tiodined: Invalid topdomain: Too short (&lt; 3)</span><br><span class=\"line\">\t\tUsage: iodined [-v] [-h] [-c] [-s] [-f] [-D] [-u user] [-t chrootdir] [-d device] [-m mtu] [-z context] [-l ip address to listen on] [-p port] [-n external ip] [-b dnsport] [-P password] [-F pidfile] [-i max idle time] tunnel_ip[/netmask] topdomain</span><br><span class=\"line\">\t\t</span><br><span class=\"line\"></span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\">以下部分是客户端的程序：iodine</span><br><span class=\"line\">------------------------------------------------</span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">opkg install iodine</span></span><br><span class=\"line\">\t\tInstalling iodine (0.7.0-4) to root...</span><br><span class=\"line\">\t\tDownloading https://op.supes.top/23.05/packages/x86_64/packages/iodine_0.7.0-4_x86_64.ipk</span><br><span class=\"line\">\t\tConfiguring iodine.\t\t</span><br></pre></td></tr></table></figure>\n\n\n\n<p>Mac平台（Mac OS X）：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iodine-0.8.0 % make</span><br><span class=\"line\">\t\tOS is DARWIN, arch is arm64</span><br><span class=\"line\">\t\tCC tun.c</span><br><span class=\"line\">\t\tCC dns.c</span><br><span class=\"line\">\t\tCC read.c</span><br><span class=\"line\">\t\tCC encoding.c</span><br><span class=\"line\">\t\tCC login.c</span><br><span class=\"line\">\t\tCC base32.c</span><br><span class=\"line\">\t\tCC base64.c</span><br><span class=\"line\">\t\tMaking base64u.c</span><br><span class=\"line\">\t\tCC common.c</span><br><span class=\"line\">\t\tcommon.c:283:2: warning: &#x27;daemon&#x27; is deprecated: first deprecated in macOS 10.5 - Use posix_spawn APIs instead. [-Wdeprecated-declarations]</span><br><span class=\"line\">\t\t        daemon(0, 0);</span><br><span class=\"line\">\t\t        ^</span><br><span class=\"line\">\t\t/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:294:6: note: &#x27;daemon&#x27; has been explicitly marked deprecated here</span><br><span class=\"line\">\t\tint      daemon(int, int) __DARWIN_1050(daemon) __OSX_AVAILABLE_BUT_DEPRECATED_MSG(__MAC_10_0, __MAC_10_5, __IPHONE_2_0, __IPHONE_2_0, &quot;Use posix_spawn APIs instead.&quot;) __WATCHOS_PROHIBITED __TVOS_PROHIBITED;</span><br><span class=\"line\">\t\t         ^</span><br><span class=\"line\">\t\t1 warning generated.</span><br><span class=\"line\">\t\tCC iodine.c</span><br><span class=\"line\">\t\tCC client.c</span><br><span class=\"line\">\t\tCC util.c</span><br><span class=\"line\">\t\tLD ../bin/iodine</span><br><span class=\"line\">\t\tCC iodined.c</span><br><span class=\"line\">\t\tCC user.c</span><br><span class=\"line\">\t\tCC fw_query.c</span><br><span class=\"line\">\t\tLD ../bin/iodined</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-设置DNS记录\"><a href=\"#2-设置DNS记录\" class=\"headerlink\" title=\"2. 设置DNS记录\"></a>2. 设置DNS记录</h2><p>以dash.cloudflare.com的配置为例，新增以下这两条DNS记录</p>\n<table>\n<thead>\n<tr>\n<th>DNS类型</th>\n<th>名称</th>\n<th>内容&#x2F;值</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>NS</td>\n<td>t1</td>\n<td>t1ns.carlzeng.com</td>\n<td>仅 DNS</td>\n</tr>\n<tr>\n<td>A</td>\n<td>t1ns</td>\n<td>125.34.235.88</td>\n<td>仅 DNS, 可优化</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>20240305 经实践测试，这条A记录是可以有泛域名*A记录解析后优化掉（即删去）。</p>\n<p>原理：这个APP只需要得到t1ns.carlzeng.com的IP地址，而不设置这条A记录，DNS系统会自动使用泛域名*所对应的IP地址，而这正是我想要达到的效果（减少了宽带DDNS需要更新的DNS记录数）</p>\n</blockquote>\n<h2 id=\"3-运行服务端iodined\"><a href=\"#3-运行服务端iodined\" class=\"headerlink\" title=\"3. 运行服务端iodined\"></a>3. 运行服务端iodined</h2><p><img data-src=\"https://img.carlzeng.com:3/i/2024/02/21/65d5c73550e5f.png\" alt=\"image-20240221174938467\"></p>\n<p>这个范例在OpenWrt上无法成功：iodined -f -P 123 10.0.0.1  t1.carlzeng.com</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">请使用-c  和 -l 125.34.235.88 指定WAN口的监听IP， —D 为调试信息输出</span></span><br><span class=\"line\">iodined -D -f -c -l 125.34.235.88 -p 53 -P 123 192.168.99.1/24 t1.carlzeng.com</span><br></pre></td></tr></table></figure>\n\n<p>长期运行的话，放入后台运行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">iodined -c -l 125.34.235.88 -p 53 -P 123 192.168.99.1/24 t1.carlzeng.com</span>        </span><br><span class=\"line\">Opened dns0                                                                                                 </span><br><span class=\"line\">Setting IP of dns0 to 192.168.99.1                                                                          </span><br><span class=\"line\">Setting MTU of dns0 to 1130                                                                                 </span><br><span class=\"line\">Opened IPv4 UDP socket                                                                                      </span><br><span class=\"line\">Listening to dns for domain t1.carlzeng.com                                                                 </span><br><span class=\"line\">Detaching from terminal...  </span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-运行客户端iodine\"><a href=\"#4-运行客户端iodine\" class=\"headerlink\" title=\"4. 运行客户端iodine\"></a>4. 运行客户端iodine</h2><p><img data-src=\"https://img.carlzeng.com:3/i/2024/02/21/65d5c789f3d63.png\" alt=\"image-20240221175104599\"></p>\n<p>以Mac OS X运行客户端为例：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./iodine -f -P 123 t1.carlzeng.com</span><br></pre></td></tr></table></figure>\n\n\n\n<p>成功后的信息：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">./iodine -f -P 123  t1.carlzeng.com</span></span><br><span class=\"line\">No tun devices found, trying utun</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">Opened utun6</span><br><span class=\"line\">Opened IPv4 UDP socket</span><br><span class=\"line\">Sending DNS queries for t1.carlzeng.com to 223.5.5.5</span><br><span class=\"line\">Autodetecting DNS query type (use -T to override).</span><br><span class=\"line\">Using DNS type NULL queries</span><br><span class=\"line\">Version ok, both using protocol v 0x00000502. You are user #0</span><br><span class=\"line\">Setting IP of utun6 to 10.0.0.2</span><br><span class=\"line\">Adding route 10.0.0.0/27 to 10.0.0.2</span><br><span class=\"line\">add net 10.0.0.0: gateway 10.0.0.2</span><br><span class=\"line\">Setting MTU of utun6 to 1130</span><br><span class=\"line\">Server tunnel IP is 10.0.0.1</span><br><span class=\"line\">Requesting server address to attempt raw UDP mode (skip with -r) </span><br><span class=\"line\">Server is at 125.34.235.88, trying raw login: (skip with -r) ....failed</span><br><span class=\"line\">Using EDNS0 extension</span><br><span class=\"line\">DNS queries get changed to lowercase, keeping upstream codec Base32</span><br><span class=\"line\">No alternative downstream codec available, using default (Raw)</span><br><span class=\"line\">Switching to lazy mode for low-latency</span><br><span class=\"line\">Server switched to lazy mode</span><br><span class=\"line\">Autoprobing max downstream fragment size... (skip with -m fragsize)</span><br><span class=\"line\">...768 not ok.. ...384 not ok.. 192 ok.. ...288 not ok.. ...240 not ok.. 216 ok.. 228 ok.. ...234 not ok.. ...231 not ok.. 230 ok.. will use 230-2=228</span><br><span class=\"line\">Setting downstream fragment size to max 228...</span><br><span class=\"line\">Connection setup complete, transmitting data.</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># sudo ./iodine -r -f -P 123 202.106.0.20 t1.carlzeng.com</span><br><span class=\"line\">No tun devices found, trying utun</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">Opened utun6</span><br><span class=\"line\">Opened IPv4 UDP socket</span><br><span class=\"line\">Sending DNS queries for t1.carlzeng.com to 202.106.0.20</span><br><span class=\"line\">Autodetecting DNS query type (use -T to override).</span><br><span class=\"line\">Using DNS type NULL queries</span><br><span class=\"line\">Version ok, both using protocol v 0x00000502. You are user #6</span><br><span class=\"line\">Setting IP of utun6 to 192.168.99.8</span><br><span class=\"line\">Adding route 192.168.99.0/24 to 192.168.99.8</span><br><span class=\"line\">add net 192.168.99.0: gateway 192.168.99.8</span><br><span class=\"line\">Setting MTU of utun6 to 1130</span><br><span class=\"line\">Server tunnel IP is 192.168.99.1</span><br><span class=\"line\">Skipping raw mode</span><br><span class=\"line\">Using EDNS0 extension</span><br><span class=\"line\">Switching upstream to codec Base128</span><br><span class=\"line\">Server switched upstream to codec Base128</span><br><span class=\"line\">No alternative downstream codec available, using default (Raw)</span><br><span class=\"line\">Switching to lazy mode for low-latency</span><br><span class=\"line\">Server switched to lazy mode</span><br><span class=\"line\">Autoprobing max downstream fragment size... (skip with -m fragsize)</span><br><span class=\"line\">...768 not ok.. ...384 not ok.. 192 ok.. ...288 not ok.. ...240 not ok.. 216 ok.. 228 ok.. ...234 not ok.. ...231 not ok.. 230 ok.. will use 230-2=228</span><br><span class=\"line\">Setting downstream fragment size to max 228...</span><br><span class=\"line\">Connection setup complete, transmitting data.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>长期运行的话，放入后台运行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">sudo ./iodine -r -P 123 202.106.0.20 t1.carlzeng.com</span></span><br><span class=\"line\">No tun devices found, trying utun</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">Opened utun6</span><br><span class=\"line\">Opened IPv4 UDP socket</span><br><span class=\"line\">Sending DNS queries for t1.carlzeng.com to 202.106.0.20</span><br><span class=\"line\">Autodetecting DNS query type (use -T to override).</span><br><span class=\"line\">Using DNS type NULL queries</span><br><span class=\"line\">Version ok, both using protocol v 0x00000502. You are user #1</span><br><span class=\"line\">Setting IP of utun6 to 192.168.99.3</span><br><span class=\"line\">Adding route 192.168.99.0/24 to 192.168.99.3</span><br><span class=\"line\">add net 192.168.99.0: gateway 192.168.99.3</span><br><span class=\"line\">Setting MTU of utun6 to 1130</span><br><span class=\"line\">Server tunnel IP is 192.168.99.1</span><br><span class=\"line\">Skipping raw mode</span><br><span class=\"line\">Using EDNS0 extension</span><br><span class=\"line\">DNS queries get changed to lowercase, keeping upstream codec Base32</span><br><span class=\"line\">No alternative downstream codec available, using default (Raw)</span><br><span class=\"line\">Switching to lazy mode for low-latency</span><br><span class=\"line\">Server switched to lazy mode</span><br><span class=\"line\">Autoprobing max downstream fragment size... (skip with -m fragsize)</span><br><span class=\"line\">...768 not ok.. ...384 not ok.. 192 ok.. ...288 not ok.. ...240 not ok.. 216 ok.. 228 ok.. ...234 not ok.. ...231 not ok.. 230 ok.. will use 230-2=228</span><br><span class=\"line\">Setting downstream fragment size to max 228...</span><br><span class=\"line\">Connection setup complete, transmitting data.</span><br><span class=\"line\">Detaching from terminal...</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h2 id=\"5-使用dns隧道来代理上网\"><a href=\"#5-使用dns隧道来代理上网\" class=\"headerlink\" title=\"5. 使用dns隧道来代理上网\"></a>5. 使用dns隧道来代理上网</h2><p>注意：这个方案需要开启iodined服务端（也就是OpenWrt）防火墙设置；开启SSH访问运行从Wan口访问，开启防火墙运行接收入站流量。</p>\n<p>现实中的代理使用; </p>\n<p>​\tssh隧道方案：<br>​\t\t客户端运行：<br>​\t\t\tssh -CfNg -D 7001 <a href=\"mailto:&#x72;&#x6f;&#111;&#116;&#64;&#49;&#48;&#46;&#48;&#x2e;&#48;&#x2e;&#49;\">&#x72;&#x6f;&#111;&#116;&#64;&#49;&#48;&#46;&#48;&#x2e;&#48;&#x2e;&#49;</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -CfNg -D 7001 root@192.168.99.1</span><br></pre></td></tr></table></figure>\n\n\n\n<p>​\t\t客户端的浏览器设置socks代理<br>​\t\t\tIP地址<br>​\t\t\t7001端口</p>\n<h2 id=\"感受\"><a href=\"#感受\" class=\"headerlink\" title=\"感受\"></a>感受</h2><p>通过以上设置，可正常打开网页。但网速实在不敢恭维，并无多大现实日常使用的意思。</p>\n<p>除非极其特别的情况：比如，通过此隧道连接来触发远程服务端执行特定的预编译的指令。</p>\n<h1 id=\"错误及解决方法\"><a href=\"#错误及解决方法\" class=\"headerlink\" title=\"错误及解决方法\"></a>错误及解决方法</h1><p>#1.客户端卡死：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">./iodine -f -P 123 t1.carlzeng.com</span>                                                                  </span><br><span class=\"line\">No tun devices found, trying utun                                                                                       </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">Opened utun5                                                                                                            </span><br><span class=\"line\">Opened IPv4 UDP socket                                                                                                  </span><br><span class=\"line\">Sending DNS queries for t1.carlzeng.com to 192.168.6.1                                                                  </span><br><span class=\"line\">Autodetecting DNS query type (use -T to override)..iodine: Got NOTIMP as reply: server does not support our request     </span><br><span class=\"line\">.......iodine: Got NOTIMP as reply: server does not support our request                                                 </span><br><span class=\"line\">.......iodine: Got NOTIMP as reply: server does not support our request                                                 </span><br><span class=\"line\">.....                                                                                                                   </span><br><span class=\"line\">iodine: No suitable DNS query type found. Are you connected to a network?                                               </span><br><span class=\"line\">iodine: If you expect very long roundtrip delays, use -T explicitly.                                                    </span><br><span class=\"line\">iodine: (Also, connecting to an &quot;ancient&quot; version of iodined won&#x27;t work.)  </span><br><span class=\"line\"></span><br><span class=\"line\">------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">sudo ./iodine -f -P 123 202.106.0.20  t1.carlzeng.com</span></span><br><span class=\"line\">No tun devices found, trying utun</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">Opened utun6</span><br><span class=\"line\">Opened IPv4 UDP socket</span><br><span class=\"line\">Sending DNS queries for t1.carlzeng.com to 202.106.0.20</span><br><span class=\"line\">Autodetecting DNS query type (use -T to override).....................</span><br><span class=\"line\">iodine: No suitable DNS query type found. Are you connected to a network?</span><br><span class=\"line\">iodine: If you expect very long roundtrip delays, use -T explicitly.</span><br><span class=\"line\">iodine: (Also, connecting to an &quot;ancient&quot; version of iodined won&#x27;t work.)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>#1解决办法：</p>\n<p>换一个客户端来测试（从Mac换到OpenWrt，或者Debian） </p>\n<p>使用官方的在线工具测试：<a href=\"https://code.kryo.se/iodine/check-it/\">https://code.kryo.se/iodine/check-it/</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Troubleshoot your iodine setup</span><br><span class=\"line\"></span><br><span class=\"line\">Analyzing DNS setup for tunnel domain &#x27;t1.carlzeng.com&#x27;... (might take some time)</span><br><span class=\"line\"></span><br><span class=\"line\">Looking for nameserver for carlzeng.com.. got paityn.ns.cloudflare.com (at 108.162.194.18).</span><br><span class=\"line\">Resolving delegation of t1.carlzeng.com at 108.162.194.18... to t1ns.carlzeng.com (at 125.34.235.88).</span><br><span class=\"line\"></span><br><span class=\"line\">Expecting iodined to be accessible at 125.34.235.88... no reply.</span><br><span class=\"line\"></span><br><span class=\"line\">Error: Make sure iodined is running and the firewall accepts UDP port 53. Also check any port forwards in use.</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iodined -f -DDD -l 125.34.235.88 -p 53 -P 123 10.0.0.1 t1.carlzeng.com</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">最终改进后的服务端命令</span></span><br><span class=\"line\">iodined -f -c -l 125.34.235.88 -p 53 -P 123 10.0.0.1 t1.carlzeng.com  </span><br></pre></td></tr></table></figure>\n\n<p>​\t</p>\n<ol start=\"2\">\n<li>关闭了iodined以后，仍然还是53端口开启状态，这是相当不正常?(后来来看，这是正常的)</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">nc -vz op.carlzeng.com 53                        </span><br><span class=\"line\">Connection to op.carlzeng.com port 53 [tcp/domain] succeeded!       </span><br></pre></td></tr></table></figure>\n\n<p>#2解决方法：</p>\n<p>​\t登录到OpenWrt的SSH，关闭dnsmasq服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">关闭OpenWrt的DHCP和DNS服务</span></span><br><span class=\"line\">/etc/init.d/dnsmasq stop</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">关闭，重启，防火墙服务</span></span><br><span class=\"line\">/etc/init.d/firewall stop</span><br><span class=\"line\">/etc/init.d/firewall restart</span><br></pre></td></tr></table></figure>\n\n<p>登录到UI，<a href=\"http://192.168.6.1:8080/cgi-bin/luci/admin/network/dhcp\">修改DNS服务端口从53改为5353</a>:</p>\n<p>原来iodined使用的是udp的53端口，而运行完iodined这个是开启着的</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">NC检查udp端口情况， -vz（检测TCP端口） 变成 -vuz（检测UDP端口）</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">nc -vuz 192.168.6.1 53</span>                                   </span><br><span class=\"line\">Connection to 192.168.6.1 port 53 [udp/domain] succeeded! </span><br></pre></td></tr></table></figure>\n\n<p>最终的解决方法是：</p>\n<p>让iodined指定监听OpenWrt的Wan口IP地址，举例：-l 125.34.235.88（这是你iodined的公网IP地址）</p>\n<p>#3 检查进程是否在运行，以及端口的使用情况</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">搜索输出的内容包含特定字符的行</span></span><br><span class=\"line\">ps | grep iodine </span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">在进程列表中搜索包含iodine</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">在开放端口的列表中模糊搜索53端口的所有信息</span></span><br><span class=\"line\">netstat -tulpn | grep 53</span><br></pre></td></tr></table></figure>\n\n\n\n<p>#4 客户端和服务端连接成功后（调试信息可见：Connection setup complete, transmitting data. ），</p>\n<p>如果客户端依旧无法ping通192.168.99.1（iodined服务端虚拟接口被分配的IP地址）</p>\n<p>成功后如果客户端依旧无法ping通192.168.99.1</p>\n<p>#4 解决方法：</p>\n<p>开启OpenWrt（iodine服务端）的防火墙，<a href=\"http://192.168.6.1:8080/cgi-bin/luci/admin/network/firewall/zones\">允许入站数据包</a>（入站数据 &#x3D; 接受）。</p>\n<p>#5 客户端和服务端连接成功后（调试信息可见：Connection setup complete, transmitting data. ），</p>\n<p>如果客户端依旧无法ssh通192.168.99.1（iodined服务端虚拟接口被分配的IP地址）的22端口。</p>\n<p>#5 解决方法：</p>\n<p>配置OpenWrt的<a href=\"http://192.168.6.1:8080/cgi-bin/luci/admin/system/admin/dropbear\">系统 》 管理权</a></p>\n<p>设置 “接口” 为 “未指定”； 含义： 仅监听指定的接口，未指定则监听全部</p>\n<p>#6 修改了OpenWrt的防火墙设置或DHCP&#x2F;DNS设置后，</p>\n<p>iodine: Got reply without error, but also without question and&#x2F;or answer  </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">客户端重启提示错误：</span></span><br><span class=\"line\">iodine: Got NOTIMP as reply: server does not support our request                                                  </span><br><span class=\"line\">.....                                                                                                              </span><br><span class=\"line\">iodine: No suitable DNS query type found. Are you connected to a network? </span><br></pre></td></tr></table></figure>\n\n<p>#6 解决方法：</p>\n<p>重启服务端+客户端，必须都要重启（因为服务的其他设置被修改了，需要重启；</p>\n<p>而客户端因为服务端重启了，也需要被重启）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">服务端查询旧的iodined所运行的进程ID，然后<span class=\"built_in\">kill</span>掉</span></span><br><span class=\"line\">ps | grep iodine        </span><br><span class=\"line\">kill -9 &#123;pid&#125;</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">直到输出变成：</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">ps | grep iodine</span></span><br><span class=\"line\">9291 root      1200 S    grep iodine</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">然后重新启动</span></span><br><span class=\"line\">iodined -c -l 125.34.235.88 -p 53 -P 123 192.168.99.1/24 t1.carlzeng.com</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">客户端，Mac OSX为例：</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">sudo ./iodine -r -f -P 123 202.106.0.20 t1.carlzeng.com</span></span><br><span class=\"line\">....</span><br><span class=\"line\">Connection setup complete, transmitting data.</span><br></pre></td></tr></table></figure>\n\n\n\n<p>#7 由于连接速度慢，当并发多的时候（同时刷新多个网页）服务经常容易进入假死状态，这是远程如何重启整个链路呢？</p>\n<p>#7解决办法：</p>\n<p>7.1 ssh进iodined的服务器：ssh <a href=\"mailto:&#x72;&#x6f;&#x6f;&#x74;&#x40;&#x31;&#57;&#50;&#46;&#49;&#x36;&#56;&#46;&#x39;&#x39;&#x2e;&#49;\">&#x72;&#x6f;&#x6f;&#x74;&#x40;&#x31;&#57;&#50;&#46;&#49;&#x36;&#56;&#46;&#x39;&#x39;&#x2e;&#49;</a>   </p>\n<p>7.2 ps | grep iodined </p>\n<p>7.3 kill -9 23611 &amp;&amp; iodined -c -l 125.34.235.88 -p 53 -P 123 192.168.99.1&#x2F;24 t1.carlzeng.com</p>\n<p>这样就可以远程重启iodined服务端，然后在本地在重启一下iodine就可以获取到全新的链路</p>\n<h1 id=\"在线检测DNS以及iodined配置\"><a href=\"#在线检测DNS以及iodined配置\" class=\"headerlink\" title=\"在线检测DNS以及iodined配置\"></a>在线检测DNS以及iodined配置</h1><p><a href=\"https://code.kryo.se/iodine/check-it/\">https://code.kryo.se/iodine/check-it/</a></p>\n<p><strong>Troubleshoot your iodine setup</strong></p>\n<p>Analyzing DNS setup for tunnel domain ‘t1.carlzeng.com’… (might take some time)</p>\n<p>Looking for nameserver for carlzeng.com.. got amir.ns.cloudflare.com (at 108.162.193.62).<br>Resolving delegation of t1.carlzeng.com at 108.162.193.62… to t1ns.carlzeng.com (at 125.34.235.**).</p>\n<p>Expecting iodined to be accessible at 125.34.235.**… yes, using proto 00000502.<br>Testing iodine reply using default nameserver… ok.</p>\n<p><strong>Well done</strong>, your iodine setup seems fine!</p>\n<h1 id=\"感谢列表\"><a href=\"#感谢列表\" class=\"headerlink\" title=\"感谢列表\"></a>感谢列表</h1><p><a href=\"https://code.kryo.se/iodine/\">iodine</a> 》 <a href=\"https://code.kryo.se/iodine/README.html\">ReadMe</a> 〉<a href=\"https://github.com/yarrick/iodine\">Github</a></p>\n<p><a href=\"https://forum.turris.cz/t/howto-dns-tunneling-with-iodined-on-turrisos-hbk-5-2-3/15620/4\">[HOWTO] DNS tunneling with iodined on TurrisOS HBK [5.2.3]</a></p>\n<p><a href=\"https://m.freebuf.com/articles/network/284740.html\">内网隐藏通信隧道技术——DNS隧道</a></p>\n<p><a href=\"https://mihail.stoynov.com/2013/02/16/iodined-how-to-use-free-internet-on-airports/\">Iodined - how to use free internet on airports</a></p>","categories":[{"name":"dns隧道","path":"api/categories/dns隧道.json"}],"tags":[{"name":"Mac","path":"api/tags/Mac.json"},{"name":"OpenWrt","path":"api/tags/OpenWrt.json"},{"name":"Debian","path":"api/tags/Debian.json"},{"name":"iodine","path":"api/tags/iodine.json"},{"name":"dns","path":"api/tags/dns.json"},{"name":"WIFI","path":"api/tags/WIFI.json"},{"name":"隧道","path":"api/tags/隧道.json"},{"name":"ssh","path":"api/tags/ssh.json"}]}