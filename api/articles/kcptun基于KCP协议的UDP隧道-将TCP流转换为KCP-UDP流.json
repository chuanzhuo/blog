{"title":"kcptun基于KCP协议的UDP隧道 - 将TCP流转换为KCP+UDP流播放IPTV","slug":"kcptun基于KCP协议的UDP隧道-将TCP流转换为KCP-UDP流","date":"2024-01-04T12:40:33.000Z","updated":"2024-10-25T13:16:40.489Z","comments":true,"path":"api/articles/kcptun基于KCP协议的UDP隧道-将TCP流转换为KCP-UDP流.json","excerpt":" [Figure] 适用于低延迟高速率要求的应用，据说传输效率可以加倍X2+","covers":["https://github.com/xtaci/kcptun/raw/master/kcptun.png","https://img.carlzeng.com:3/i/2024/03/26/66023cc462bb0.png"],"content":"<img class=\"lozad\" data-src=\"https://github.com/xtaci/kcptun/raw/master/kcptun.png\">\n\n<p>适用于低延迟高速率要求的应用，据说传输效率可以加倍X2+</p>\n<span id=\"more\"></span>\n\n<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.com:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n\n<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>通过UDP隧道，加速端到端的远程传输（点对点p2p传输，封装为UDP的KCP数据）</p>\n<p>Kcptun 是一个简单和快速的，基于 KCP 协议的 UDP 隧道，它可以将 TCP 流转换为 KCP+UDP 流。</p>\n<h1 id=\"怎么用\"><a href=\"#怎么用\" class=\"headerlink\" title=\"怎么用\"></a>怎么用</h1><p>部署和配置简单</p>\n<p>讲一种例子：</p>\n<ol>\n<li>远程&#x2F;远距离客户端的某一个应用，需要访问服务的网段内的某个特定TCP服务（比如游戏或IPTV）。</li>\n<li>通过启动远程客户端的路由器#1上的kcptun client（监听本地端口，然后指定服务器IP和端口，加密信息），这个kcptun客户端监听的端口就是本地应用要连接使用的端口。</li>\n<li>去连接服务器（从路由器#2的端口转发）的特定kcp server（监听服务器端口，然后指定发往本地特定服务[TCP服务的IP地址和端口]）</li>\n<li>这样加密并封装过的整条链路就建立在UDP上了，据说传输效率可以加倍X2+</li>\n</ol>\n<p>以下是两个使用docker应用kcptun的实例</p>\n<h2 id=\"实际用例1：\"><a href=\"#实际用例1：\" class=\"headerlink\" title=\"实际用例1：\"></a>实际用例1：</h2><p><a href=\"https://hub.docker.com/r/lowid/kcptun\">https://hub.docker.com/r/lowid/kcptun</a></p>\n<p>如果按要封装的服务是服务器上的socks代理：</p>\n<p>server side （kcp+socks） compose file</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">kcp-server:</span></span><br><span class=\"line\">  <span class=\"attr\">image:</span> <span class=\"string\">lowid/kcptun:v20170329</span></span><br><span class=\"line\">  <span class=\"attr\">command:</span></span><br><span class=\"line\">    <span class=\"string\">--listen</span> <span class=\"string\">:29900</span></span><br><span class=\"line\">    <span class=\"string\">--target</span> <span class=\"string\">dante-server:1080</span></span><br><span class=\"line\">    <span class=\"string\">--mode</span> <span class=\"string\">fast2</span></span><br><span class=\"line\">  <span class=\"attr\">ports:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">&quot;30003:29900/udp&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">environment:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">KCPTUN_KEY=your_password</span></span><br><span class=\"line\">  <span class=\"attr\">links:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">dante-server</span></span><br><span class=\"line\">  <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">dante-server:</span></span><br><span class=\"line\">  <span class=\"attr\">image:</span> <span class=\"string\">vimagick/dante</span></span><br><span class=\"line\">  <span class=\"attr\">expose:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">&quot;1080&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">volumes:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">./sockd.conf:/etc/sockd.conf</span></span><br><span class=\"line\">  <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>server side sockd.conf</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">debug: 0</span><br><span class=\"line\">logoutput: stderr</span><br><span class=\"line\">internal: 0.0.0.0 <span class=\"attr\">port</span> = <span class=\"number\">1080</span></span><br><span class=\"line\">external: eth0</span><br><span class=\"line\">socksmethod: username none</span><br><span class=\"line\">clientmethod: none</span><br><span class=\"line\">user.privileged: root</span><br><span class=\"line\">user.unprivileged: nobody</span><br><span class=\"line\"></span><br><span class=\"line\">client pass &#123;</span><br><span class=\"line\">    from: 0.0.0.0/0 port 1-65535 to: 0.0.0.0/0</span><br><span class=\"line\">    log: error</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">socks pass &#123;</span><br><span class=\"line\">    from: 0.0.0.0/0 to: 0.0.0.0/0</span><br><span class=\"line\">    <span class=\"comment\">#socksmethod: username</span></span><br><span class=\"line\">    log: error</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>client side compose file</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">client:</span></span><br><span class=\"line\">  <span class=\"attr\">image:</span> <span class=\"string\">lowid/kcptun:v20170329</span></span><br><span class=\"line\">  <span class=\"attr\">entrypoint:</span> <span class=\"string\">client_linux_amd64</span></span><br><span class=\"line\">  <span class=\"attr\">command:</span></span><br><span class=\"line\">    <span class=\"string\">--localaddr</span> <span class=\"string\">:12948</span></span><br><span class=\"line\">    <span class=\"string\">--remoteaddr</span> <span class=\"string\">server_ip_address:30003</span></span><br><span class=\"line\">    <span class=\"string\">--mode</span> <span class=\"string\">fast2</span></span><br><span class=\"line\">  <span class=\"attr\">ports:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">&quot;12948:12948/tcp&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">environment:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">KCPTUN_KEY=your_password</span></span><br><span class=\"line\">  <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"实际用例2：\"><a href=\"#实际用例2：\" class=\"headerlink\" title=\"实际用例2：\"></a>实际用例2：</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">$</span> <span class=\"string\">docker</span> <span class=\"string\">pull</span> <span class=\"string\">chenhw2/kcptun</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">$</span> <span class=\"string\">docker</span> <span class=\"string\">run</span> <span class=\"string\">-d</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">-e</span> <span class=\"string\">&quot;ARGS=server -t 10.0.0.1:80&quot;</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">-p</span> <span class=\"number\">29900</span><span class=\"string\">:29900/udp</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">chenhw2/kcptun</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#客户端</span></span><br><span class=\"line\"><span class=\"string\">$</span> <span class=\"string\">docker</span> <span class=\"string\">run</span> <span class=\"string\">-d</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">-e</span> <span class=\"string\">&quot;ARGS=client -r [kcp_server]:29900&quot;</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">-p</span> <span class=\"number\">12948</span><span class=\"string\">:12948/tcp</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">chenhw2/kcptun</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.com:3/appsearch?q=kcp\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><p>放弃docker的方式。</p>\n<p>KCP Server: </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./server_linux_amd64 -t &quot;192.168.6.243:8012&quot; -l &quot;:29900&quot; -mode fast3 -nocomp -dscp 46 --key op.carlzeng.com --crypt salsa20</span><br></pre></td></tr></table></figure>\n\n<p>说明：这个29900端口的服务，由于是配置在特定的服务器上（不是在公网IP的主路由器上），所以需要在公网IP的主路由上做一个端口映射（实现：把外网的29900 udp数据入世地转发到这台特定的服务器相同端口上）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">配置在K2P的Padavan界面的</span></span><br><span class=\"line\"></span><br><span class=\"line\">KCP Client: ./client_darwin_amd64 -r &quot;KCP_SERVER_IP:29900&quot; -l &quot;:8012&quot; -mode fast3 -nocomp -autoexpire 900 -sockbuf 16777217 -dscp 46</span><br><span class=\"line\"></span><br><span class=\"line\">/opt/bin/kcptun  -r &quot;@@@.@@@.@@@.@@@:29900&quot; -l &quot;:88012&quot; -key op.carlzeng.com -crypt salsa20 -mode fast3 -dscp 46 -autoexpire 900 -nocomp</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>一张图看透整个流程</p>\n<p><img data-src=\"https://img.carlzeng.com:3/i/2024/03/26/66023cc462bb0.png\" alt=\"kcptun整个流程实例\"></p>\n<p>使用了特殊的测试方式，用frp穿透到另外一处播放；</p>\n<p>实测体验：高清很顺畅，4K还是有卡顿的；</p>\n<p>TODO：等待下一步在客户端的局域网播放测试</p>\n<p>这样KCP传输以后，按报告上说是传输延迟减半，速率加倍*2+；有待于进一步实践考验</p>\n<blockquote>\n<p>20240121 放弃这个方案</p>\n</blockquote>\n<p>kcptun部署案例：<br>    <a href=\"https://c.carlzeng.com:3/iptvKcptun-123-1-8388-V20240121.m3u\">https://c.carlzeng.com:3/iptvKcptun-123-1-8388-V20240121.m3u</a></p>\n<pre><code>旧的DIYP配置：\nhttps://c.carlzeng.com:3/tv\n\nPerfect Player\nhttps://c.carlzeng.com:3/kcpzl\n    配置yourls对应了https://c.carlzeng.com:3/iptvKcptun-123-1-8388-V20240121.m3u\n\n2:16pm 感觉zl移动客户端的配置文件没问题，比如 \nhttp://192.168.123.1:8388/rtp/239.3.1.129:8008\n想要检查服务端NAS中的server_linux_amd64执行情况，重启\n2:28pm 启动NAS中的KCPTUN server，4K依旧卡。\n2:33pm 4K播放，卡！kcptun方案  —— 淘汰\n\n对比Perfect Player的 原始配置：\n    https://c.carlzeng.com:3/tvm3u\n2:39pm 体验这个直接的互联网上http udpxy：速度和kcptun差不多。\n4K测试台，反而不怎么卡；直观体验甚至可以说比kcptun以后的播放4K更流畅。\n\n结论：保留原先这个Perfect Player的配置（直接互联网上访问udprxy）https://c.carlzeng.com:3/tvm3u\n\n2:48pm\n修改DIYP的配置为：\nhttps://c.carlzeng.com:3/tvm\n这个m移动的配置里面，有对所有北京频道的优化，添加首个为hby的udpxy地址。\n\n方案三：直接本地组播（移动宽带）播放\n</code></pre>\n<h1 id=\"思考\"><a href=\"#思考\" class=\"headerlink\" title=\"思考\"></a>思考</h1><p>如果单单是用于播放IPTV，加速远程m3u8的播放内容的话；这个方案还要往前在走一步，</p>\n<ul>\n<li>在手机端也下载<a href=\"https://github.com/xtaci/kcptun/releases/download/v20231012/kcptun-linux-arm64-20231012.tar.gz\">kcptun-linux-arm64-20231012.tar.gz</a> 在手机端运行.&#x2F;client_linux_arm64 配合上参数（见上方已实例测试过）就可以加速播放远程的IPTV或直播</li>\n<li>在android盒子端下载<a href=\"https://github.com/xtaci/kcptun/releases/download/v20231012/kcptun-linux-arm64-20231012.tar.gz\">kcptun-linux-arm64-20231012.tar.gz</a>，并运行.&#x2F;client_linux_arm64 配合上参数（见上方已实例测试过）就可以加速播放远程的IPTV或直播或游戏…</li>\n<li></li>\n</ul>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p><a href=\"https://github.com/xtaci/kcptun/\">教程、项目地址: https://github.com/xtaci/kcptun/</a></p>\n<p><a href=\"https://www.bilibili.com/video/BV1KV411z7mJ/?spm_id_from=333.337.search-card.all.click&vd_source=dabd362cb0c2607dd58ee4300223b109\">【MC开服教程-3】用KCPTUN给你的服务器加个速</a></p>\n","more":"<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.com:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n\n<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>通过UDP隧道，加速端到端的远程传输（点对点p2p传输，封装为UDP的KCP数据）</p>\n<p>Kcptun 是一个简单和快速的，基于 KCP 协议的 UDP 隧道，它可以将 TCP 流转换为 KCP+UDP 流。</p>\n<h1 id=\"怎么用\"><a href=\"#怎么用\" class=\"headerlink\" title=\"怎么用\"></a>怎么用</h1><p>部署和配置简单</p>\n<p>讲一种例子：</p>\n<ol>\n<li>远程&#x2F;远距离客户端的某一个应用，需要访问服务的网段内的某个特定TCP服务（比如游戏或IPTV）。</li>\n<li>通过启动远程客户端的路由器#1上的kcptun client（监听本地端口，然后指定服务器IP和端口，加密信息），这个kcptun客户端监听的端口就是本地应用要连接使用的端口。</li>\n<li>去连接服务器（从路由器#2的端口转发）的特定kcp server（监听服务器端口，然后指定发往本地特定服务[TCP服务的IP地址和端口]）</li>\n<li>这样加密并封装过的整条链路就建立在UDP上了，据说传输效率可以加倍X2+</li>\n</ol>\n<p>以下是两个使用docker应用kcptun的实例</p>\n<h2 id=\"实际用例1：\"><a href=\"#实际用例1：\" class=\"headerlink\" title=\"实际用例1：\"></a>实际用例1：</h2><p><a href=\"https://hub.docker.com/r/lowid/kcptun\">https://hub.docker.com/r/lowid/kcptun</a></p>\n<p>如果按要封装的服务是服务器上的socks代理：</p>\n<p>server side （kcp+socks） compose file</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">kcp-server:</span></span><br><span class=\"line\">  <span class=\"attr\">image:</span> <span class=\"string\">lowid/kcptun:v20170329</span></span><br><span class=\"line\">  <span class=\"attr\">command:</span></span><br><span class=\"line\">    <span class=\"string\">--listen</span> <span class=\"string\">:29900</span></span><br><span class=\"line\">    <span class=\"string\">--target</span> <span class=\"string\">dante-server:1080</span></span><br><span class=\"line\">    <span class=\"string\">--mode</span> <span class=\"string\">fast2</span></span><br><span class=\"line\">  <span class=\"attr\">ports:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">&quot;30003:29900/udp&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">environment:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">KCPTUN_KEY=your_password</span></span><br><span class=\"line\">  <span class=\"attr\">links:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">dante-server</span></span><br><span class=\"line\">  <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">dante-server:</span></span><br><span class=\"line\">  <span class=\"attr\">image:</span> <span class=\"string\">vimagick/dante</span></span><br><span class=\"line\">  <span class=\"attr\">expose:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">&quot;1080&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">volumes:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">./sockd.conf:/etc/sockd.conf</span></span><br><span class=\"line\">  <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>server side sockd.conf</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">debug: 0</span><br><span class=\"line\">logoutput: stderr</span><br><span class=\"line\">internal: 0.0.0.0 <span class=\"attr\">port</span> = <span class=\"number\">1080</span></span><br><span class=\"line\">external: eth0</span><br><span class=\"line\">socksmethod: username none</span><br><span class=\"line\">clientmethod: none</span><br><span class=\"line\">user.privileged: root</span><br><span class=\"line\">user.unprivileged: nobody</span><br><span class=\"line\"></span><br><span class=\"line\">client pass &#123;</span><br><span class=\"line\">    from: 0.0.0.0/0 port 1-65535 to: 0.0.0.0/0</span><br><span class=\"line\">    log: error</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">socks pass &#123;</span><br><span class=\"line\">    from: 0.0.0.0/0 to: 0.0.0.0/0</span><br><span class=\"line\">    <span class=\"comment\">#socksmethod: username</span></span><br><span class=\"line\">    log: error</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>client side compose file</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">client:</span></span><br><span class=\"line\">  <span class=\"attr\">image:</span> <span class=\"string\">lowid/kcptun:v20170329</span></span><br><span class=\"line\">  <span class=\"attr\">entrypoint:</span> <span class=\"string\">client_linux_amd64</span></span><br><span class=\"line\">  <span class=\"attr\">command:</span></span><br><span class=\"line\">    <span class=\"string\">--localaddr</span> <span class=\"string\">:12948</span></span><br><span class=\"line\">    <span class=\"string\">--remoteaddr</span> <span class=\"string\">server_ip_address:30003</span></span><br><span class=\"line\">    <span class=\"string\">--mode</span> <span class=\"string\">fast2</span></span><br><span class=\"line\">  <span class=\"attr\">ports:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">&quot;12948:12948/tcp&quot;</span></span><br><span class=\"line\">  <span class=\"attr\">environment:</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"string\">KCPTUN_KEY=your_password</span></span><br><span class=\"line\">  <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"实际用例2：\"><a href=\"#实际用例2：\" class=\"headerlink\" title=\"实际用例2：\"></a>实际用例2：</h2><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">$</span> <span class=\"string\">docker</span> <span class=\"string\">pull</span> <span class=\"string\">chenhw2/kcptun</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">$</span> <span class=\"string\">docker</span> <span class=\"string\">run</span> <span class=\"string\">-d</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">-e</span> <span class=\"string\">&quot;ARGS=server -t 10.0.0.1:80&quot;</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">-p</span> <span class=\"number\">29900</span><span class=\"string\">:29900/udp</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">chenhw2/kcptun</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#客户端</span></span><br><span class=\"line\"><span class=\"string\">$</span> <span class=\"string\">docker</span> <span class=\"string\">run</span> <span class=\"string\">-d</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">-e</span> <span class=\"string\">&quot;ARGS=client -r [kcp_server]:29900&quot;</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">-p</span> <span class=\"number\">12948</span><span class=\"string\">:12948/tcp</span> <span class=\"string\">\\</span></span><br><span class=\"line\">    <span class=\"string\">chenhw2/kcptun</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.com:3/appsearch?q=kcp\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><p>放弃docker的方式。</p>\n<p>KCP Server: </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./server_linux_amd64 -t &quot;192.168.6.243:8012&quot; -l &quot;:29900&quot; -mode fast3 -nocomp -dscp 46 --key op.carlzeng.com --crypt salsa20</span><br></pre></td></tr></table></figure>\n\n<p>说明：这个29900端口的服务，由于是配置在特定的服务器上（不是在公网IP的主路由器上），所以需要在公网IP的主路由上做一个端口映射（实现：把外网的29900 udp数据入世地转发到这台特定的服务器相同端口上）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">配置在K2P的Padavan界面的</span></span><br><span class=\"line\"></span><br><span class=\"line\">KCP Client: ./client_darwin_amd64 -r &quot;KCP_SERVER_IP:29900&quot; -l &quot;:8012&quot; -mode fast3 -nocomp -autoexpire 900 -sockbuf 16777217 -dscp 46</span><br><span class=\"line\"></span><br><span class=\"line\">/opt/bin/kcptun  -r &quot;@@@.@@@.@@@.@@@:29900&quot; -l &quot;:88012&quot; -key op.carlzeng.com -crypt salsa20 -mode fast3 -dscp 46 -autoexpire 900 -nocomp</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>一张图看透整个流程</p>\n<p><img data-src=\"https://img.carlzeng.com:3/i/2024/03/26/66023cc462bb0.png\" alt=\"kcptun整个流程实例\"></p>\n<p>使用了特殊的测试方式，用frp穿透到另外一处播放；</p>\n<p>实测体验：高清很顺畅，4K还是有卡顿的；</p>\n<p>TODO：等待下一步在客户端的局域网播放测试</p>\n<p>这样KCP传输以后，按报告上说是传输延迟减半，速率加倍*2+；有待于进一步实践考验</p>\n<blockquote>\n<p>20240121 放弃这个方案</p>\n</blockquote>\n<p>kcptun部署案例：<br>    <a href=\"https://c.carlzeng.com:3/iptvKcptun-123-1-8388-V20240121.m3u\">https://c.carlzeng.com:3/iptvKcptun-123-1-8388-V20240121.m3u</a></p>\n<pre><code>旧的DIYP配置：\nhttps://c.carlzeng.com:3/tv\n\nPerfect Player\nhttps://c.carlzeng.com:3/kcpzl\n    配置yourls对应了https://c.carlzeng.com:3/iptvKcptun-123-1-8388-V20240121.m3u\n\n2:16pm 感觉zl移动客户端的配置文件没问题，比如 \nhttp://192.168.123.1:8388/rtp/239.3.1.129:8008\n想要检查服务端NAS中的server_linux_amd64执行情况，重启\n2:28pm 启动NAS中的KCPTUN server，4K依旧卡。\n2:33pm 4K播放，卡！kcptun方案  —— 淘汰\n\n对比Perfect Player的 原始配置：\n    https://c.carlzeng.com:3/tvm3u\n2:39pm 体验这个直接的互联网上http udpxy：速度和kcptun差不多。\n4K测试台，反而不怎么卡；直观体验甚至可以说比kcptun以后的播放4K更流畅。\n\n结论：保留原先这个Perfect Player的配置（直接互联网上访问udprxy）https://c.carlzeng.com:3/tvm3u\n\n2:48pm\n修改DIYP的配置为：\nhttps://c.carlzeng.com:3/tvm\n这个m移动的配置里面，有对所有北京频道的优化，添加首个为hby的udpxy地址。\n\n方案三：直接本地组播（移动宽带）播放\n</code></pre>\n<h1 id=\"思考\"><a href=\"#思考\" class=\"headerlink\" title=\"思考\"></a>思考</h1><p>如果单单是用于播放IPTV，加速远程m3u8的播放内容的话；这个方案还要往前在走一步，</p>\n<ul>\n<li>在手机端也下载<a href=\"https://github.com/xtaci/kcptun/releases/download/v20231012/kcptun-linux-arm64-20231012.tar.gz\">kcptun-linux-arm64-20231012.tar.gz</a> 在手机端运行.&#x2F;client_linux_arm64 配合上参数（见上方已实例测试过）就可以加速播放远程的IPTV或直播</li>\n<li>在android盒子端下载<a href=\"https://github.com/xtaci/kcptun/releases/download/v20231012/kcptun-linux-arm64-20231012.tar.gz\">kcptun-linux-arm64-20231012.tar.gz</a>，并运行.&#x2F;client_linux_arm64 配合上参数（见上方已实例测试过）就可以加速播放远程的IPTV或直播或游戏…</li>\n<li></li>\n</ul>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p><a href=\"https://github.com/xtaci/kcptun/\">教程、项目地址: https://github.com/xtaci/kcptun/</a></p>\n<p><a href=\"https://www.bilibili.com/video/BV1KV411z7mJ/?spm_id_from=333.337.search-card.all.click&vd_source=dabd362cb0c2607dd58ee4300223b109\">【MC开服教程-3】用KCPTUN给你的服务器加个速</a></p>","categories":[{"name":"KCP","path":"api/categories/KCP.json"}],"tags":[{"name":"linux","path":"api/tags/linux.json"},{"name":"kcptun","path":"api/tags/kcptun.json"},{"name":"TCP","path":"api/tags/TCP.json"},{"name":"UDP","path":"api/tags/UDP.json"},{"name":"IPTV","path":"api/tags/IPTV.json"},{"name":"udprxy","path":"api/tags/udprxy.json"},{"name":"直播","path":"api/tags/直播.json"},{"name":"加速器","path":"api/tags/加速器.json"}]}