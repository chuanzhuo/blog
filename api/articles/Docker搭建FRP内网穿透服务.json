{"title":"Docker搭建FRP内网穿透服务","slug":"Docker搭建FRP内网穿透服务","date":"2023-12-03T11:26:39.000Z","updated":"2023-12-04T04:18:29.575Z","comments":true,"path":"api/articles/Docker搭建FRP内网穿透服务.json","excerpt":" [Figure] 内网穿透, 让局域网的服务在异地互联网状态依旧在线可用frp，一个高性能的反向代理灵活，TCP&#x2F;IP底层逻辑应用广泛","covers":["https://www.evernote.com/shard/s122/sh/f91e4989-af7d-4910-abe5-c8146f128425/IQbusguULdKcK362p7Ob5rz7FkKSL8T5rzUwZMJ5uXnBSGjNM88g_xwyTg/deep/0/image.png"],"content":"<img class=\"lozad\" data-src=\"\">\n\n<p>内网穿透, 让局域网的服务在异地互联网状态依旧在线可用</p>\n<h4 id=\"frp，一个高性能的反向代理\"><a href=\"#frp，一个高性能的反向代理\" class=\"headerlink\" title=\"frp，一个高性能的反向代理\"></a><a href=\"https://github.com/fatedier/frp/blob/master/README_zh.md\">frp，一个高性能的反向代理</a></h4><p>灵活，TCP&#x2F;IP底层逻辑应用广泛</p>\n<span id=\"more\"></span>\n\n<h1 id=\"概念-什么是FRP-内网穿透服务\"><a href=\"#概念-什么是FRP-内网穿透服务\" class=\"headerlink\" title=\"[概念]什么是FRP 内网穿透服务\"></a>[概念]什么是FRP 内网穿透服务</h1><p><a href=\"https://github.com/fatedier/frp/blob/master/README_zh.md\">https://github.com/fatedier/frp/blob/master/README_zh.md</a></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">为什么使用 frp ？</span><br><span class=\"line\">开发状态</span><br><span class=\"line\">完整文档已经迁移至 https://gofrp.org</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><p>先自建一个frps服务器端(运行frps用的)<br>然后自控端A，被控端B；内网穿透服务器<br><a href=\"https://zsxwz.com/2023/10/09/%E8%BF%9C%E7%A8%8B%E6%8A%95%E5%B1%8F%E6%8E%A7%E5%88%B6%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%EF%BC%8C%E4%B8%8D%E7%94%A8-usb-%E4%B8%8D%E7%94%A8-wifi-%E4%B8%8D%E7%94%A8root/\">https://zsxwz.com/2023/10/09/远程投屏控制安卓手机，不用-usb-不用-wifi-不用root/</a><br><a href=\"https://zsxwz.com/2023/10/03/frp-%E4%BD%BF%E7%94%A8-p2p-%E6%A8%A1%E5%BC%8F%EF%BC%8C%E7%82%B9%E5%AF%B9%E7%82%B9%E7%A9%BF%E9%80%8F%EF%BC%8C%E8%8A%82%E7%BA%A6%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B8%A6%E5%AE%BD/\">https://zsxwz.com/2023/10/03/frp-使用-p2p-模式，点对点穿透，节约服务器带宽/</a><br>    开启手机adb，然后用scrcpy</p>\n<p>TODO 自建docker的frps服务<br><a href=\"https://github.com/fatedier/frp\">https://github.com/fatedier/frp</a><br>方案就是开放特定的内网服务到外网直接访问（域名+端口），这个特定的内网服务是有控制功能的，比如路由的web页面，可ssh的端口，可以远程桌面的mstc等。<br>这样打洞以后，在洞上面架设的是可以远程操作协助的APP（比如远程桌面，ssh等）<br>从而实现远程协助的功能。</p>\n<p>感觉frps，frpc才是王道，但愿受控端的操作会少一些，简单一下，步骤简易一些，通俗易懂一些。</p>\n<p>7000映射到外网了，在主路由上已配置。<br>测试frpc 来链接。。。。</p>\n<p>2023&#x2F;12&#x2F;01 08:35:34 [1;34m[I] [service.go:312] Dashboard listen on 0.0.0.0:9527[0m<br>无法正常连接, 原来是 配置文件dashboard_port&#x3D; 7500，然后docker映射出来9527即可。</p>\n<img data-src='https://www.evernote.com/shard/s122/sh/48544655-3a61-483a-b7ab-0a72f6cb4579/ebhmTXJ7DGn78oKPU3BDFhmbJ1jfxVMCaYN7a-J6dd8azwGBMDIH2P9NEg/deep/0/image.png'/>\n\n<p>docker重启日志中：<br>2023&#x2F;12&#x2F;01 08:57:30 [1;34m[I] [service.go:533] [67b3d0c8dd4be924] client login info: ip [120.244.216.197:37895] version [0.52.3] hostname [] os [linux] arch [mipsle][0m</p>\n<p>new proxy [web] type [http] error: subdomain is not supported because this feature is not enabled in server<br><a href=\"https://github.com/fatedier/frp\">https://github.com/fatedier/frp</a></p>\n<h2 id=\"FRPS-如何反代？\"><a href=\"#FRPS-如何反代？\" class=\"headerlink\" title=\"FRPS 如何反代？\"></a>FRPS 如何反代？</h2><p>修改了上面的配置</p>\n<p>开启防火墙6002</p>\n<p>太赞了，<a href=\"https://k2pzl.carlzeng.top:4443/Advanced_Extensions_script.asp\">https://k2pzl.carlzeng.top:4443/Advanced_Extensions_script.asp</a></p>\n<p>比Zerotier强太多了！！！</p>\n<p>​\tK2P UI中的文本框编辑在Zerotier中无法使用，在frpc后反代以后都正常了！</p>\n<h2 id=\"设置应用2\"><a href=\"#设置应用2\" class=\"headerlink\" title=\"设置应用2\"></a>设置应用2</h2><p>[webFloor#2]<br>type &#x3D; tcp<br>local_port &#x3D; 8181<br>remote_port &#x3D; 6003</p>\n<p>[webFloor#1]<br>type &#x3D; tcp<br>local_ip &#x3D; 192.168.10.1<br>local_port &#x3D; 8080<br>remote_port &#x3D; 6004</p>\n<img class=\"lozad\" data-src=\"https://www.evernote.com/shard/s122/sh/f91e4989-af7d-4910-abe5-c8146f128425/IQbusguULdKcK362p7Ob5rz7FkKSL8T5rzUwZMJ5uXnBSGjNM88g_xwyTg/deep/0/image.png\">\n\n<p>[done]TODO：</p>\n<p>开启debian防火墙的6003-6004，</p>\n<p>NPM反代6003</p>\n<h1 id=\"免费的FRP服务资源\"><a href=\"#免费的FRP服务资源\" class=\"headerlink\" title=\"免费的FRP服务资源\"></a>免费的FRP服务资源</h1><ol>\n<li><a href=\"https://frp.104300.xyz/\">https://frp.104300.xyz/</a></li>\n<li><a href=\"https://freefrp.net/\">https://freefrp.net/</a><ol>\n<li><a href=\"https://freefrp.net/docs\">说明文档</a>很赞; <a href=\"https://freefrp.net/docs\">https://freefrp.net/docs</a></li>\n</ol>\n</li>\n</ol>\n<p>优点：所见即所得，马上就用</p>\n<p>缺点：速度慢，适合用来学习测试</p>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p>设置和应用太灵活了，以至于很难理解和变通到家宽部署的情况。</p>\n<p>关键词：docker frps 反向代理</p>\n<p>感谢列表：</p>\n<p><a href=\"https://iwanlab.com/frp-with-nginx-proxy-manager/\">家里没有公网IP？FRP+NPM+VPS &#x3D; 随时随地用域名访问家里的任何设备！内网穿透，从未如此简单！</a></p>\n<p><a href=\"https://waynegong.cn/posts/8279.html\">Docker 部署 Nginx、frp 实现内网穿透</a></p>\n<p><a href=\"https://meowlight.space/archives/1599398838584\">使用docker-compose来构筑NGINX、frp的HTTP内网穿透</a></p>\n<p><a href=\"https://medium.com/@ken_c/%E7%94%A8fpc%E5%AE%9E%E7%8E%B0https%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F-a8570049b557\">用FPC实现HTTPS内网穿透</a></p>\n","more":"<h1 id=\"概念-什么是FRP-内网穿透服务\"><a href=\"#概念-什么是FRP-内网穿透服务\" class=\"headerlink\" title=\"[概念]什么是FRP 内网穿透服务\"></a>[概念]什么是FRP 内网穿透服务</h1><p><a href=\"https://github.com/fatedier/frp/blob/master/README_zh.md\">https://github.com/fatedier/frp/blob/master/README_zh.md</a></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">为什么使用 frp ？</span><br><span class=\"line\">开发状态</span><br><span class=\"line\">完整文档已经迁移至 https://gofrp.org</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><p>先自建一个frps服务器端(运行frps用的)<br>然后自控端A，被控端B；内网穿透服务器<br><a href=\"https://zsxwz.com/2023/10/09/%E8%BF%9C%E7%A8%8B%E6%8A%95%E5%B1%8F%E6%8E%A7%E5%88%B6%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%EF%BC%8C%E4%B8%8D%E7%94%A8-usb-%E4%B8%8D%E7%94%A8-wifi-%E4%B8%8D%E7%94%A8root/\">https://zsxwz.com/2023/10/09/远程投屏控制安卓手机，不用-usb-不用-wifi-不用root/</a><br><a href=\"https://zsxwz.com/2023/10/03/frp-%E4%BD%BF%E7%94%A8-p2p-%E6%A8%A1%E5%BC%8F%EF%BC%8C%E7%82%B9%E5%AF%B9%E7%82%B9%E7%A9%BF%E9%80%8F%EF%BC%8C%E8%8A%82%E7%BA%A6%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%B8%A6%E5%AE%BD/\">https://zsxwz.com/2023/10/03/frp-使用-p2p-模式，点对点穿透，节约服务器带宽/</a><br>    开启手机adb，然后用scrcpy</p>\n<p>TODO 自建docker的frps服务<br><a href=\"https://github.com/fatedier/frp\">https://github.com/fatedier/frp</a><br>方案就是开放特定的内网服务到外网直接访问（域名+端口），这个特定的内网服务是有控制功能的，比如路由的web页面，可ssh的端口，可以远程桌面的mstc等。<br>这样打洞以后，在洞上面架设的是可以远程操作协助的APP（比如远程桌面，ssh等）<br>从而实现远程协助的功能。</p>\n<p>感觉frps，frpc才是王道，但愿受控端的操作会少一些，简单一下，步骤简易一些，通俗易懂一些。</p>\n<p>7000映射到外网了，在主路由上已配置。<br>测试frpc 来链接。。。。</p>\n<p>2023&#x2F;12&#x2F;01 08:35:34 [1;34m[I] [service.go:312] Dashboard listen on 0.0.0.0:9527[0m<br>无法正常连接, 原来是 配置文件dashboard_port&#x3D; 7500，然后docker映射出来9527即可。</p>\n<img data-src='https://www.evernote.com/shard/s122/sh/48544655-3a61-483a-b7ab-0a72f6cb4579/ebhmTXJ7DGn78oKPU3BDFhmbJ1jfxVMCaYN7a-J6dd8azwGBMDIH2P9NEg/deep/0/image.png'/>\n\n<p>docker重启日志中：<br>2023&#x2F;12&#x2F;01 08:57:30 [1;34m[I] [service.go:533] [67b3d0c8dd4be924] client login info: ip [120.244.216.197:37895] version [0.52.3] hostname [] os [linux] arch [mipsle][0m</p>\n<p>new proxy [web] type [http] error: subdomain is not supported because this feature is not enabled in server<br><a href=\"https://github.com/fatedier/frp\">https://github.com/fatedier/frp</a></p>\n<h2 id=\"FRPS-如何反代？\"><a href=\"#FRPS-如何反代？\" class=\"headerlink\" title=\"FRPS 如何反代？\"></a>FRPS 如何反代？</h2><p>修改了上面的配置</p>\n<p>开启防火墙6002</p>\n<p>太赞了，<a href=\"https://k2pzl.carlzeng.top:4443/Advanced_Extensions_script.asp\">https://k2pzl.carlzeng.top:4443/Advanced_Extensions_script.asp</a></p>\n<p>比Zerotier强太多了！！！</p>\n<p>​\tK2P UI中的文本框编辑在Zerotier中无法使用，在frpc后反代以后都正常了！</p>\n<h2 id=\"设置应用2\"><a href=\"#设置应用2\" class=\"headerlink\" title=\"设置应用2\"></a>设置应用2</h2><p>[webFloor#2]<br>type &#x3D; tcp<br>local_port &#x3D; 8181<br>remote_port &#x3D; 6003</p>\n<p>[webFloor#1]<br>type &#x3D; tcp<br>local_ip &#x3D; 192.168.10.1<br>local_port &#x3D; 8080<br>remote_port &#x3D; 6004</p>\n<img class=\"lozad\" data-src=\"https://www.evernote.com/shard/s122/sh/f91e4989-af7d-4910-abe5-c8146f128425/IQbusguULdKcK362p7Ob5rz7FkKSL8T5rzUwZMJ5uXnBSGjNM88g_xwyTg/deep/0/image.png\">\n\n<p>[done]TODO：</p>\n<p>开启debian防火墙的6003-6004，</p>\n<p>NPM反代6003</p>\n<h1 id=\"免费的FRP服务资源\"><a href=\"#免费的FRP服务资源\" class=\"headerlink\" title=\"免费的FRP服务资源\"></a>免费的FRP服务资源</h1><ol>\n<li><a href=\"https://frp.104300.xyz/\">https://frp.104300.xyz/</a></li>\n<li><a href=\"https://freefrp.net/\">https://freefrp.net/</a><ol>\n<li><a href=\"https://freefrp.net/docs\">说明文档</a>很赞; <a href=\"https://freefrp.net/docs\">https://freefrp.net/docs</a></li>\n</ol>\n</li>\n</ol>\n<p>优点：所见即所得，马上就用</p>\n<p>缺点：速度慢，适合用来学习测试</p>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p>设置和应用太灵活了，以至于很难理解和变通到家宽部署的情况。</p>\n<p>关键词：docker frps 反向代理</p>\n<p>感谢列表：</p>\n<p><a href=\"https://iwanlab.com/frp-with-nginx-proxy-manager/\">家里没有公网IP？FRP+NPM+VPS &#x3D; 随时随地用域名访问家里的任何设备！内网穿透，从未如此简单！</a></p>\n<p><a href=\"https://waynegong.cn/posts/8279.html\">Docker 部署 Nginx、frp 实现内网穿透</a></p>\n<p><a href=\"https://meowlight.space/archives/1599398838584\">使用docker-compose来构筑NGINX、frp的HTTP内网穿透</a></p>\n<p><a href=\"https://medium.com/@ken_c/%E7%94%A8fpc%E5%AE%9E%E7%8E%B0https%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F-a8570049b557\">用FPC实现HTTPS内网穿透</a></p>","categories":[{"name":"frp","path":"api/categories/frp.json"}],"tags":[{"name":"debian","path":"api/tags/debian.json"},{"name":"docker","path":"api/tags/docker.json"},{"name":"内网穿透","path":"api/tags/内网穿透.json"},{"name":"NPM","path":"api/tags/NPM.json"},{"name":"docker-compose","path":"api/tags/docker-compose.json"},{"name":"FRP","path":"api/tags/FRP.json"},{"name":"frpc","path":"api/tags/frpc.json"},{"name":"frps","path":"api/tags/frps.json"}]}