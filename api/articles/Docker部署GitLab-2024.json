{"title":"部署GitLab代码管理平台 2024","slug":"Docker部署GitLab-2024","date":"2024-03-10T07:22:17.000Z","updated":"2024-10-25T13:16:40.278Z","comments":true,"path":"api/articles/Docker部署GitLab-2024.json","excerpt":" [Figure] 搭建公司&#x2F;个人私有化的Gitlab&#x2F;Github代码版本管理平台","covers":["https://img.carlzeng.com:3/i/2024/03/11/65ee765e43afd.png","https://img.carlzeng.com:3/i/2024/03/08/65ea7e8631f42.png","https://img.carlzeng.com:3/i/2024/03/11/65eeda5f648b0.png"],"content":"<img class=\"lozad\" data-src=\"https://img.carlzeng.com:3/i/2024/03/11/65ee765e43afd.png\">\n\n<p>搭建公司&#x2F;个人私有化的Gitlab&#x2F;Github代码版本管理平台</p>\n<span id=\"more\"></span>\n\n<p>文章耗时：5天（终于全流程走通），相关的应用或问题将持续更新。</p>\n<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.com:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n\n\n<h1 id=\"怎么用\"><a href=\"#怎么用\" class=\"headerlink\" title=\"怎么用\"></a>怎么用</h1><ul>\n<li>条件：个人域名，公网IP的小主机或服务器（或购得的VPS或网络服务器）</li>\n<li>根据‘实现方法’中的步骤用docker搭建好gitlab平台</li>\n<li>IDE或者命令行，或WEB UI，访问gitlab代码版本管理&#x2F;控制等功能</li>\n</ul>\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.com:3/appsearch?q=gitlab\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><h2 id=\"Docker命令搭建\"><a href=\"#Docker命令搭建\" class=\"headerlink\" title=\"Docker命令搭建\"></a>Docker命令搭建</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull gitlab/gitlab-ce:latest</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">实践过程中，这个下载过程需要持续好长时间，所以还单独使用docker pull</span></span><br><span class=\"line\">e05b9f286a50: Downloading [=====&gt;                                             ]  148.6MB/1.364GB</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&#x27;3.6&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">gitlab:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">gitlab/gitlab-ce:latest</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">gitlab</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">    <span class=\"comment\">#hostname: &#x27;HOSTNAME&#x27;</span></span><br><span class=\"line\">    <span class=\"comment\">#environment:</span></span><br><span class=\"line\">    <span class=\"comment\">#  GITLAB_OMNIBUS_CONFIG:</span></span><br><span class=\"line\">        <span class=\"comment\"># Add any other gitlab.rb configuration here, each on its own line</span></span><br><span class=\"line\">    <span class=\"comment\">#    external_url &#x27;https://gitlab.carlzeng.com:3&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&#x27;8097:80&#x27;</span>\t <span class=\"comment\">#根据自身端口情况调整</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&#x27;4431:443&#x27;</span> <span class=\"comment\">#根据自身端口情况调整</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&#x27;2222:22&#x27;</span>\t <span class=\"comment\">#根据自身端口情况调整</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&#x27;./config:/etc/gitlab&#x27;</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&#x27;./logs:/var/log/gitlab&#x27;</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&#x27;./data:/var/opt/gitlab&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">shm_size:</span> <span class=\"string\">&#x27;256m&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>这个docker-compose.yml文件，然后docker-compose up -d，在我的环境就能正常启动。</p>\n<p>通过注释掉了environment 和 hostname的section以后可以正常启动，然后再耐心等待3-4分钟以后（不行就关闭重启来），启动成功</p>\n<p>然后登录界面需要用户名和密码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it gitlab grep &#x27;Password:&#x27; /etc/gitlab/initial_root_password</span><br></pre></td></tr></table></figure>\n\n<p>这个命令可以获取初始化root用户的密码。或者使用config映射出来的目录，直接查看这个文件。</p>\n<p><img data-src=\"https://img.carlzeng.com:3/i/2024/03/08/65ea7e8631f42.png\" alt=\"image-20240308105655373\"></p>\n<h2 id=\"配置连接Gitlab端口（非标准443端口）\"><a href=\"#配置连接Gitlab端口（非标准443端口）\" class=\"headerlink\" title=\"配置连接Gitlab端口（非标准443端口）\"></a>配置连接Gitlab端口（非标准443端口）</h2><p>git remote 非标准端口</p>\n<p>测试使用IntelliJ IDEA来提交project到<a href=\"https://gitlab.carlzeng.com:3/\">https://gitlab.carlzeng.com:3/</a></p>\n<p><a href=\"https://gitlab.carlzeng.com:3/root/proxypool.git\">https://gitlab.carlzeng.com:3/root/proxypool.git</a> </p>\n<p>配置remote提示错误：unable to access ‘<a href=\"https://gitlab.carlzeng.com:3/root/proxypool':LibreSSL\">https://gitlab.carlzeng.com:3/root/proxypool&#39;:LibreSSL</a> SSL_connect: Connection reset by peer in connection to gitlab.carlzeng.com:443</p>\n<p>解决办法（以问题中的特定例子来举例说明）：</p>\n<ol>\n<li>cd 到相应目录，执行一下命令</li>\n<li>git remote set-url origin <a href=\"https://gitlab.carlzeng.com:3/root/proxypool.git\">https://gitlab.carlzeng.com:3/root/proxypool.git</a></li>\n<li>在IDE中push提示登录时，使用root用户登录即可</li>\n</ol>\n<p>友情提示：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin  https://gitlab.carlzeng.com:3/root/proxypool.git</span><br></pre></td></tr></table></figure>\n\n<p>这条命令也可以使用，用来添加多个git的源（这样push的时候，多个远程仓库都可以同时得到更新）；需要在命令行下切换到项目的主目录下使用。</p>\n<h2 id=\"Access-denied\"><a href=\"#Access-denied\" class=\"headerlink\" title=\"Access denied\"></a>Access denied</h2><p>08:32:02.142: [goProjects] git -c core.quotepath&#x3D;false -c log.showSignature&#x3D;false push –progress –porcelain origin refs&#x2F;heads&#x2F;master:master<br>    remote: HTTP Basic: Access denied. The provided password or token is incorrect or your account has 2FA enabled and you must use a personal access token instead of a password. See <a href=\"https://gitlab.carlzeng.com/help/topics/git/troubleshooting_git#error-on-git-fetch-http-basic-access-denied\">https://gitlab.carlzeng.com/help/topics/git/troubleshooting_git#error-on-git-fetch-http-basic-access-denied</a><br>    fatal: Authentication failed for ‘<a href=\"https://gitlab.carlzeng.com:3/root/proxypool.git/\">https://gitlab.carlzeng.com:3/root/proxypool.git/</a>‘</p>\n<p>解决办法：</p>\n<p>用root用户登录即可</p>\n<h2 id=\"Email-SMTP-setup\"><a href=\"#Email-SMTP-setup\" class=\"headerlink\" title=\"Email SMTP setup\"></a>Email SMTP setup</h2><p>vi &#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb</p>\n<p>![image-20240308164451369](&#x2F;Users&#x2F;carlzeng&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20240308164451369.png)</p>\n<p>![image-20240308165425674](&#x2F;Users&#x2F;carlzeng&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20240308165425674.png)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose down   </span><br><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"现有项目同步至私有仓库\"><a href=\"#现有项目同步至私有仓库\" class=\"headerlink\" title=\"现有项目同步至私有仓库\"></a>现有项目同步至私有仓库</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">1. 添加新的project，在UI上操作</span></span><br><span class=\"line\">https://gitlab.carlzeng.com:3/root/pri-freight-container</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">2. 添加remote, 注意替换具体的仓库地址</span></span><br><span class=\"line\">git remote add origin_gitlab  https://gitlab.carlzeng.com:3/root/pri-freight-container.git</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">3. Push 更新至远程（本地部署的gitlab平台）</span></span><br><span class=\"line\">git push origin_gitlab</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">命令输出展示</span></span><br><span class=\"line\">Enumerating objects: 667, done.</span><br><span class=\"line\">Counting objects: 100% (667/667), done.</span><br><span class=\"line\">Delta compression using up to 8 threads</span><br><span class=\"line\">Compressing objects: 100% (550/550), done.</span><br><span class=\"line\">Writing objects: 100% (667/667), 334.70 KiB | 8.58 MiB/s, done.</span><br><span class=\"line\">Total 667 (delta 334), reused 0 (delta 0), pack-reused 0</span><br><span class=\"line\">remote: Resolving deltas: 100% (334/334), done.</span><br><span class=\"line\">To https://gitlab.carlzeng.com:3/root/pri-freight-container.git</span><br><span class=\"line\"> * [new branch]      working -&gt; working</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n\n<p><img data-src=\"https://img.carlzeng.com:3/i/2024/03/11/65eeda5f648b0.png\" alt=\"image-20240311181747412\"></p>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p><a href=\"https://www.youtube.com/watch?v=dk04pvn0kxs\">Gitlab install | SMTP Mail configure and test on Linux | User create delete password change</a></p>\n<p><a href=\"https://www.thisfaner.com/p/git-ssh-https/\">Git中的ssh和https及相关问题</a></p>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2>","more":"<p>文章耗时：5天（终于全流程走通），相关的应用或问题将持续更新。</p>\n<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.com:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n\n\n<h1 id=\"怎么用\"><a href=\"#怎么用\" class=\"headerlink\" title=\"怎么用\"></a>怎么用</h1><ul>\n<li>条件：个人域名，公网IP的小主机或服务器（或购得的VPS或网络服务器）</li>\n<li>根据‘实现方法’中的步骤用docker搭建好gitlab平台</li>\n<li>IDE或者命令行，或WEB UI，访问gitlab代码版本管理&#x2F;控制等功能</li>\n</ul>\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.com:3/appsearch?q=gitlab\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><h2 id=\"Docker命令搭建\"><a href=\"#Docker命令搭建\" class=\"headerlink\" title=\"Docker命令搭建\"></a>Docker命令搭建</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull gitlab/gitlab-ce:latest</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">实践过程中，这个下载过程需要持续好长时间，所以还单独使用docker pull</span></span><br><span class=\"line\">e05b9f286a50: Downloading [=====&gt;                                             ]  148.6MB/1.364GB</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&#x27;3.6&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">gitlab:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">gitlab/gitlab-ce:latest</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">gitlab</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">    <span class=\"comment\">#hostname: &#x27;HOSTNAME&#x27;</span></span><br><span class=\"line\">    <span class=\"comment\">#environment:</span></span><br><span class=\"line\">    <span class=\"comment\">#  GITLAB_OMNIBUS_CONFIG:</span></span><br><span class=\"line\">        <span class=\"comment\"># Add any other gitlab.rb configuration here, each on its own line</span></span><br><span class=\"line\">    <span class=\"comment\">#    external_url &#x27;https://gitlab.carlzeng.com:3&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&#x27;8097:80&#x27;</span>\t <span class=\"comment\">#根据自身端口情况调整</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&#x27;4431:443&#x27;</span> <span class=\"comment\">#根据自身端口情况调整</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&#x27;2222:22&#x27;</span>\t <span class=\"comment\">#根据自身端口情况调整</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&#x27;./config:/etc/gitlab&#x27;</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&#x27;./logs:/var/log/gitlab&#x27;</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&#x27;./data:/var/opt/gitlab&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">shm_size:</span> <span class=\"string\">&#x27;256m&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>这个docker-compose.yml文件，然后docker-compose up -d，在我的环境就能正常启动。</p>\n<p>通过注释掉了environment 和 hostname的section以后可以正常启动，然后再耐心等待3-4分钟以后（不行就关闭重启来），启动成功</p>\n<p>然后登录界面需要用户名和密码</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker exec -it gitlab grep &#x27;Password:&#x27; /etc/gitlab/initial_root_password</span><br></pre></td></tr></table></figure>\n\n<p>这个命令可以获取初始化root用户的密码。或者使用config映射出来的目录，直接查看这个文件。</p>\n<p><img data-src=\"https://img.carlzeng.com:3/i/2024/03/08/65ea7e8631f42.png\" alt=\"image-20240308105655373\"></p>\n<h2 id=\"配置连接Gitlab端口（非标准443端口）\"><a href=\"#配置连接Gitlab端口（非标准443端口）\" class=\"headerlink\" title=\"配置连接Gitlab端口（非标准443端口）\"></a>配置连接Gitlab端口（非标准443端口）</h2><p>git remote 非标准端口</p>\n<p>测试使用IntelliJ IDEA来提交project到<a href=\"https://gitlab.carlzeng.com:3/\">https://gitlab.carlzeng.com:3/</a></p>\n<p><a href=\"https://gitlab.carlzeng.com:3/root/proxypool.git\">https://gitlab.carlzeng.com:3/root/proxypool.git</a> </p>\n<p>配置remote提示错误：unable to access ‘<a href=\"https://gitlab.carlzeng.com:3/root/proxypool':LibreSSL\">https://gitlab.carlzeng.com:3/root/proxypool&#39;:LibreSSL</a> SSL_connect: Connection reset by peer in connection to gitlab.carlzeng.com:443</p>\n<p>解决办法（以问题中的特定例子来举例说明）：</p>\n<ol>\n<li>cd 到相应目录，执行一下命令</li>\n<li>git remote set-url origin <a href=\"https://gitlab.carlzeng.com:3/root/proxypool.git\">https://gitlab.carlzeng.com:3/root/proxypool.git</a></li>\n<li>在IDE中push提示登录时，使用root用户登录即可</li>\n</ol>\n<p>友情提示：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin  https://gitlab.carlzeng.com:3/root/proxypool.git</span><br></pre></td></tr></table></figure>\n\n<p>这条命令也可以使用，用来添加多个git的源（这样push的时候，多个远程仓库都可以同时得到更新）；需要在命令行下切换到项目的主目录下使用。</p>\n<h2 id=\"Access-denied\"><a href=\"#Access-denied\" class=\"headerlink\" title=\"Access denied\"></a>Access denied</h2><p>08:32:02.142: [goProjects] git -c core.quotepath&#x3D;false -c log.showSignature&#x3D;false push –progress –porcelain origin refs&#x2F;heads&#x2F;master:master<br>    remote: HTTP Basic: Access denied. The provided password or token is incorrect or your account has 2FA enabled and you must use a personal access token instead of a password. See <a href=\"https://gitlab.carlzeng.com/help/topics/git/troubleshooting_git#error-on-git-fetch-http-basic-access-denied\">https://gitlab.carlzeng.com/help/topics/git/troubleshooting_git#error-on-git-fetch-http-basic-access-denied</a><br>    fatal: Authentication failed for ‘<a href=\"https://gitlab.carlzeng.com:3/root/proxypool.git/\">https://gitlab.carlzeng.com:3/root/proxypool.git/</a>‘</p>\n<p>解决办法：</p>\n<p>用root用户登录即可</p>\n<h2 id=\"Email-SMTP-setup\"><a href=\"#Email-SMTP-setup\" class=\"headerlink\" title=\"Email SMTP setup\"></a>Email SMTP setup</h2><p>vi &#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb</p>\n<p>![image-20240308164451369](&#x2F;Users&#x2F;carlzeng&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20240308164451369.png)</p>\n<p>![image-20240308165425674](&#x2F;Users&#x2F;carlzeng&#x2F;Library&#x2F;Application Support&#x2F;typora-user-images&#x2F;image-20240308165425674.png)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose down   </span><br><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"现有项目同步至私有仓库\"><a href=\"#现有项目同步至私有仓库\" class=\"headerlink\" title=\"现有项目同步至私有仓库\"></a>现有项目同步至私有仓库</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">1. 添加新的project，在UI上操作</span></span><br><span class=\"line\">https://gitlab.carlzeng.com:3/root/pri-freight-container</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">2. 添加remote, 注意替换具体的仓库地址</span></span><br><span class=\"line\">git remote add origin_gitlab  https://gitlab.carlzeng.com:3/root/pri-freight-container.git</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">3. Push 更新至远程（本地部署的gitlab平台）</span></span><br><span class=\"line\">git push origin_gitlab</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">命令输出展示</span></span><br><span class=\"line\">Enumerating objects: 667, done.</span><br><span class=\"line\">Counting objects: 100% (667/667), done.</span><br><span class=\"line\">Delta compression using up to 8 threads</span><br><span class=\"line\">Compressing objects: 100% (550/550), done.</span><br><span class=\"line\">Writing objects: 100% (667/667), 334.70 KiB | 8.58 MiB/s, done.</span><br><span class=\"line\">Total 667 (delta 334), reused 0 (delta 0), pack-reused 0</span><br><span class=\"line\">remote: Resolving deltas: 100% (334/334), done.</span><br><span class=\"line\">To https://gitlab.carlzeng.com:3/root/pri-freight-container.git</span><br><span class=\"line\"> * [new branch]      working -&gt; working</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>\n\n<p><img data-src=\"https://img.carlzeng.com:3/i/2024/03/11/65eeda5f648b0.png\" alt=\"image-20240311181747412\"></p>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p><a href=\"https://www.youtube.com/watch?v=dk04pvn0kxs\">Gitlab install | SMTP Mail configure and test on Linux | User create delete password change</a></p>\n<p><a href=\"https://www.thisfaner.com/p/git-ssh-https/\">Git中的ssh和https及相关问题</a></p>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2>","categories":[{"name":"gitlab","path":"api/categories/gitlab.json"}],"tags":[{"name":"docker","path":"api/tags/docker.json"},{"name":"gitlab","path":"api/tags/gitlab.json"},{"name":"git","path":"api/tags/git.json"},{"name":"code","path":"api/tags/code.json"}]}