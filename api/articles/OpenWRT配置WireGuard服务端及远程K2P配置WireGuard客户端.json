{"title":"Docker配置WireGuard服务端及多种WireGuard客户端实践","slug":"OpenWRT配置WireGuard服务端及远程K2P配置WireGuard客户端","date":"2024-08-18T14:32:13.000Z","updated":"2024-09-10T12:19:06.556Z","comments":true,"path":"api/articles/OpenWRT配置WireGuard服务端及远程K2P配置WireGuard客户端.json","excerpt":" [Figure] 使用WireGuard将不同地区的局域网或设备连接起来, 组成一个内部虚拟专用网络","covers":["https://img.carlzeng.top:3/i/2024/09/10/66e00d44aa551.png","https://img.carlzeng.top:3/i/2024/09/10/66dfb579be8f8.png","https://img.carlzeng.top:3/i/2024/08/20/66c462c99f24b.png","https://img.carlzeng.top:3/i/2024/08/19/66c2b714b67d2.png","https://img.carlzeng.top:3/i/2024/08/20/66c45bee8098e.png","https://img.carlzeng.top:3/i/2024/09/10/66e037359aea9.png","https://img.carlzeng.top:3/i/2024/08/20/66c4bb3886c11.png","https://img.carlzeng.top:3/i/2024/09/10/66e007f785cb2.png"],"content":"<img class=\"lozad\" data-src=\"https://img.carlzeng.top:3/i/2024/09/10/66e00d44aa551.png\">\n\n<p>使用WireGuard将不同地区的局域网或设备连接起来, 组成一个内部虚拟专用网络</p>\n<span id=\"more\"></span>\n\n<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.top:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n\n\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p><code>WireGuard</code> 是一种现代、快速且安全的虚拟专用网络 (VPN) 通信协议和免费开源软件。</p>\n<p><code>WireGuard</code> 的设计目标在于易于使用、高速性能和低攻击面。它利用了最新的加密技术，旨在提供比 <code>IPsec</code> 和 <code>OpenVPN</code> 等传统 VPN 协议更好的性能和更强大的功能。<code>WireGuard</code> 的核心代码相对精简，被 <code>Linux</code> 之父 <code>Linus Torvalds</code> 称为 <code>艺术品</code>，其核心代码只有四千多行。</p>\n<p>此外，<code>WireGuard</code> 协议通过 <code>UDP</code> 传递流量，使其在速度和安全性方面具有显著优势。它被设计为简单、高效，并适用于从低端设备如树莓派到高端服务器的广泛环境。</p>\n<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>Wireguard 回家</p>\n<p>学会配置WireGuard这种VPN‘回家’的方式, </p>\n<p>主要用于在外办公方便VPN 回家的使用场景. 下一步博主就要在 macOS, Android 和 K2P 上体验</p>\n<p>公网服务器上部署一个Wireguard 服务器，然后让<em>Openwrt</em> 通过Wireguard 连接到公网服务器，然后客户端可以通过Wireguard 访问<em>Openwrt</em> 的内网设备。</p>\n<h1 id=\"硬件\"><a href=\"#硬件\" class=\"headerlink\" title=\"硬件\"></a>硬件</h1><p>本例子中使用了</p>\n<ol>\n<li><p>[done] NAS中docker一个WireGuard Easy服务端</p>\n<ol>\n<li><a href=\"https://github.com/wg-easy/wg-easy\">The easiest way to run WireGuard VPN + Web-based Admin UI.</a></li>\n</ol>\n</li>\n<li><p>主路由为OpenWrt的情况, 作为远程VPN的服务端</p>\n<ol>\n<li>这样外出的电脑和手机等就可以通过这个WireGuard将数据VPN回主路由OpenWrt的物理位置</li>\n<li>设置繁琐, 放弃该方案</li>\n</ol>\n</li>\n<li><p>[done]客户端一: MAC OS 电脑作为一个WireGuard客户端接入VPN网络</p>\n<ol>\n<li>成功</li>\n</ol>\n</li>\n<li><p>客户端二: K2P作为一个WireGuard客户端接入VPN网络</p>\n<ol>\n<li>待续, 需要特定的固件</li>\n</ol>\n</li>\n<li><p>[done]客户端三: 安卓手机作为WireGuard客户端接入VPN网络</p>\n<ol>\n<li>成功</li>\n</ol>\n</li>\n<li><p>客户端四: OpenWrt作为WireGuard客户端接入VPN网络</p>\n</li>\n</ol>\n<p>未完待续….</p>\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=vpn\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><h2 id=\"OpenWRT创建公钥私钥\"><a href=\"#OpenWRT创建公钥私钥\" class=\"headerlink\" title=\"OpenWRT创建公钥私钥\"></a>OpenWRT创建公钥私钥</h2><h3 id=\"预共享密钥\"><a href=\"#预共享密钥\" class=\"headerlink\" title=\"预共享密钥\"></a>预共享密钥</h3><p>通过<code>SSH</code>登陆到 OpenWRT 后台.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> wg</span><br><span class=\"line\"><span class=\"comment\"># 创建目录存放公钥私钥</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> wg</span><br><span class=\"line\"><span class=\"comment\"># 进入文件夹</span></span><br><span class=\"line\"><span class=\"built_in\">umask</span> 077</span><br><span class=\"line\"><span class=\"comment\"># 配置创建密钥的权限</span></span><br><span class=\"line\">wg genpsk &gt; sharekey</span><br><span class=\"line\"><span class=\"comment\"># 创建预共享密钥</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> sharekey</span><br><span class=\"line\"><span class=\"comment\"># 获取密钥复制保存: vcjUaJ8laSu11QOwYbeSQoVbyMjzLRxzDZGb1OQiAcI=</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"服务端公钥私钥\"><a href=\"#服务端公钥私钥\" class=\"headerlink\" title=\"服务端公钥私钥\"></a>服务端公钥私钥</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wg genkey | <span class=\"built_in\">tee</span> server_privatekey | wg pubkey &gt; server_publickey</span><br><span class=\"line\"><span class=\"comment\"># 创建服务端公钥和私钥</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> server_privatekey</span><br><span class=\"line\"><span class=\"comment\"># 获取服务端私钥复制保存</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> server_publickey</span><br><span class=\"line\"><span class=\"comment\"># 获取服务端公钥复制保存</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"MacOS-客户端公钥\"><a href=\"#MacOS-客户端公钥\" class=\"headerlink\" title=\"MacOS 客户端公钥\"></a>MacOS 客户端公钥</h3><p>客户端公钥私钥 ( macOS )</p>\n<p>重复此操作创建每个客户端的公钥和私钥,请注意修改以下命令中的文件名,本文以 macOS 为例:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wg genkey | <span class=\"built_in\">tee</span> macos_privatekey | wg pubkey &gt; macos_publickey</span><br><span class=\"line\"><span class=\"comment\"># 创建 macOS 客户端公钥和私钥</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> macos_privatekey</span><br><span class=\"line\"><span class=\"comment\"># 获取 macOS 客户端私钥复制保存</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> macos_publickey</span><br><span class=\"line\"><span class=\"comment\"># 获取 macOS 客户端公钥复制保存</span></span><br></pre></td></tr></table></figure>\n\n<p>运行发现报错:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">zsh: command not found: wg </span><br></pre></td></tr></table></figure>\n\n<p>解决:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 在线安装wireguard</span><br><span class=\"line\">brew install wireguard-tools</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"配置-OpenWRT-UI\"><a href=\"#配置-OpenWRT-UI\" class=\"headerlink\" title=\"配置 OpenWRT UI\"></a>配置 OpenWRT UI</h3><h4 id=\"服务端相关配置\"><a href=\"#服务端相关配置\" class=\"headerlink\" title=\"服务端相关配置\"></a>服务端相关配置</h4><p>登陆 OpenWRT - 网络 - 接口 - 添加新接口</p>\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/09/10/66dfb579be8f8.png\" alt=\"image-20240910105651263\"></p>\n<p>基本设置 - 填写上文获取的服务端私钥<br>自行填写一个端口号 - 并且在路由器映射该端口的 UDP 协议<br>IP 地址填写一个 VPN 专用的网段 IP - 本文以192.168.100.X为 WireGuard 的专用网段为例,则本 WG 服务器 IP 为192.168.100.1&#x2F;24</p>\n<p>防火墙设置 - 选择 vpn</p>\n<h4 id=\"客户端-Peers-区域为每个客户端添加配置\"><a href=\"#客户端-Peers-区域为每个客户端添加配置\" class=\"headerlink\" title=\"客户端 Peers 区域为每个客户端添加配置\"></a>客户端 Peers 区域为每个客户端添加配置</h4><p><img data-src=\"https://img.carlzeng.top:3/i/2024/08/20/66c462c99f24b.png\" alt=\"image-20240820173253322\"></p>\n<p>选择<code>预共享密钥</code> - 添加</p>\n<p>公钥 - 填写上文获取的macOS 客户端公钥; </p>\n<p>​\t- 新的客户端, 正在尝试, 直接点击 “生成新的密钥对”进行新的客户端Peer的公钥和私钥生成. </p>\n<p>预共享密钥 - 填写上文获取的预共享密钥</p>\n<p>允许的 IP - 即表示为此 macOS 客户端分配固定 IP , 本文示例为 192.168.100.2&#x2F;32 , 注意各客户端 IP 不能冲突.<br>持续 Keep-Alive - 填写 25</p>\n<h4 id=\"防火墙\"><a href=\"#防火墙\" class=\"headerlink\" title=\"防火墙\"></a>防火墙</h4><p>网络 - 防火墙 - 自定义防火墙 - 添加以下防火墙 - 重启防火墙</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables -t nat -A POSTROUTING -s 192.168.100.0/24 -o br-lan -j MASQUERADE</span><br><span class=\"line\"><span class=\"comment\"># 注意此条防火墙网段 192.168.100.0/24 需和上文服务端 IP 网段保持一致.</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>再次声明博主的 OpenWRT 是作为旁路由接入</strong>,此条防火墙不确定适用于主路由部署 WireGuard 使用.主路由用户可以尝试无需设置防火墙(经朋友测试)</p>\n<p><u>配置了一圈防火墙的规则, 还是卡死</u></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -vz wg.carlzeng.top 51820                                                  </span><br><span class=\"line\">nc: connectx to wg.carlzeng.top port 51820 (tcp) failed: Connection refused </span><br></pre></td></tr></table></figure>\n\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/08/19/66c2b714b67d2.png\" alt=\"image-20240819110758717\"></p>\n<p>好像又有在OpenWrt的远程服务端收到数据包, 可是又不知道最终效果是如何的?</p>\n<p>比如从什么应用出发? 连接了WireGuard VPN以后效果是如何的?</p>\n<blockquote>\n<p>是可以直接ping通的, 比如 ping 10.8.0.5</p>\n</blockquote>\n<h4 id=\"重启-WireGuard\"><a href=\"#重启-WireGuard\" class=\"headerlink\" title=\"重启 WireGuard\"></a>重启 WireGuard</h4><p>返回网络 - 接口 - 关闭 - 连接<br>或者直接重启整个 OpenWRT 最为稳妥.</p>\n<hr>\n<h2 id=\"客户端-MAC\"><a href=\"#客户端-MAC\" class=\"headerlink\" title=\"客户端(MAC)\"></a>客户端(MAC)</h2><h3 id=\"创建客户端配置文件\"><a href=\"#创建客户端配置文件\" class=\"headerlink\" title=\"创建客户端配置文件\"></a>创建客户端配置文件</h3><p>创建后缀为<code>.conf</code>的配置文件,例如<code>macos_wireguard.conf</code>,复制以下信息,并且修改对应的公私钥信息:</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Interface]</span><br><span class=\"line\"><span class=\"attribute\">Address</span> = <span class=\"number\">192.168.100.2</span>/<span class=\"number\">32</span></span><br><span class=\"line\"><span class=\"comment\"># 对应 macOS 客户段分配的 IP</span></span><br><span class=\"line\">PrivateKey = qJHywBpl27Ao/TRse85DQ/f+kwfNGRmPDYCq0OC6uUY=</span><br><span class=\"line\"><span class=\"comment\"># 此时的配置文件是用于客户端的,所以PrivateKey则为 macOS 客户端的私钥</span></span><br><span class=\"line\">DNS = <span class=\"number\">192.168.1.3</span></span><br><span class=\"line\"><span class=\"comment\"># 本地的 DNS 服务器或者公有 DNS 服务器,例如: 114.114.114.114</span></span><br><span class=\"line\">[Peer]</span><br><span class=\"line\">PublicKey = u7vjXN90uJt7pRjG8tR7hb25ssYOi7PRzJ5h9Diy02I=</span><br><span class=\"line\">AllowedIPs = <span class=\"number\">192.168.1.0</span>/<span class=\"number\">24</span>, <span class=\"number\">192.168.100.0</span>/<span class=\"number\">24</span></span><br><span class=\"line\"><span class=\"comment\"># macOS 如上设置可与 ClashX Pro 共存仅代理局域网,互联网走本地网络.</span></span><br><span class=\"line\"><span class=\"comment\"># iPhone iPad 设置为 0.0.0.0/0 全局则模式.</span></span><br><span class=\"line\">PresharedKey = Pu5xBEBmz9ghhUMNp5o72s+w7nuLwxJJUgNk3EljFVo=</span><br><span class=\"line\"><span class=\"comment\"># 预共享密钥</span></span><br><span class=\"line\">Endpoint = ddns.xxxxx.com:<span class=\"number\">12345</span></span><br><span class=\"line\">PersistentKeepalive = <span class=\"number\">25</span></span><br></pre></td></tr></table></figure>\n\n<p>此时的配置文件是用于客户端的,所以<code>PrivateKey</code>则为 macOS 客户端的私钥,而<code>Peer</code>中的<code>PublicKey</code>则为 OpenWRT 的公钥.<strong>请注意反向思考</strong>,<code>Endpoint</code>填写家中的 IP 或者 DDNS 域名和端口.</p>\n<h4 id=\"AllowedIPs\"><a href=\"#AllowedIPs\" class=\"headerlink\" title=\"AllowedIPs\"></a>AllowedIPs</h4><p>值得注意的是<code>AllowedIPs</code>参数.针对不同场景和需求,此处可以配置不用的路由.<br>当此处为<code>0.0.0.0/0</code>时表示任意网络请求都经过 VPN 俗称全局 VPN , 由于 iPhone 同时只能有 1 个 VPN 软件在线,所以当 <code>WireGuard</code> 启动时,其他类似<code>Quanx</code>,<code>小火箭</code>等软件则无法使用,此时 iPhone 可以全局 VPN 使用家中的网络来访问一些外网.</p>\n<p>如果是 macOS 或 Windows 客户端,<code>WireGuard</code>和<code>Clash</code>等软件可以共存,此处可以设置为<code>AllowedIPs = 192.168.1.0/24, 192.168.100.0/24</code>,表示访问内网网段才会走 VPN .而其他互联网,外网等访问还是走当前网络来利用<code>Clash</code>分流.</p>\n<p>macOS<br>在 macOS App Store 下载 WireGuard,从文件导入隧道.</p>\n<p>在 OpenWRT 状态页面能够看到连接成功的状态信息</p>\n<h4 id=\"其他命令\"><a href=\"#其他命令\" class=\"headerlink\" title=\"其他命令\"></a>其他命令</h4><p>wg-quick down wg0 #停止服务<br>wg-quick strip wg0 #查看配置<br>wg-quick #查看所有支持的命令</p>\n<hr>\n<h2 id=\"群晖安装-WireGuard-客户端\"><a href=\"#群晖安装-WireGuard-客户端\" class=\"headerlink\" title=\"群晖安装 WireGuard 客户端\"></a>群晖安装 WireGuard 客户端</h2><p>WireGuard 官方提供了很多系统的客户端，但是群晖暂时还没有，有开发者打包了对应的安装包，但是 DSM 7.0 中，群晖插件机制有改动，造成无法简单安装使用。</p>\n<p>一、在套件中心添加“我不是矿神”套件源</p>\n<p>名称随意，位置填  <a href=\"https://spk7.imnks.com/\">https://spk7.imnks.com/</a>  然后确定</p>\n<p>二、安装Wireguard套件</p>\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/08/20/66c45bee8098e.png\" alt=\"image-20240820170337632\"></p>\n<pre><code>1、切换到root用户\n\n    sudo -i\n\n2、赋予Wireguard套件权限（执行该命令后启动Wireguard套件已经不会自动停用）\n\n    sudo sed -i &#39;s/package/root/g&#39; /var/packages/WireGuard/conf/privilege\n\n3、在etc目录下创建wireguard文件夹\n\n    mkdir /etc/wireguard/\n\n4、编辑Wireguard配置文件\n\n    vi /etc/wireguard/wg0.conf\n\n5、进行相关配置\n\n    （1）、按下” i “键进行编辑，复制本地编辑好的配置文件内容，鼠标右键直接粘贴  \n\n          注意：要将DNS那行删掉\n</code></pre>\n<p>实例的NAS中wg0.conf配置文件</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[Interface]</span></span><br><span class=\"line\"><span class=\"attr\">Address</span> = <span class=\"number\">192.168</span>.<span class=\"number\">100.203</span>/<span class=\"number\">32</span></span><br><span class=\"line\"><span class=\"attr\">PrivateKey</span> = <span class=\"number\">6</span>ANjSDBrOa+hymme+Ive8Fd1GbqOHPosSEQwDNy0x3s=</span><br><span class=\"line\"><span class=\"comment\"># 此时的配置文件是用于客户端的,所以PrivateKey则为 NAS 客户端的私钥</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[Peer]</span></span><br><span class=\"line\"><span class=\"attr\">PublicKey</span> = G22pgmNqDPGAYg5+bHdMRrxhPQ3HABRla/yZAj0Tu0I=</span><br><span class=\"line\"><span class=\"comment\"># 而`Peer`中的`PublicKey`则为 OpenWRT 的公钥</span></span><br><span class=\"line\"><span class=\"attr\">PresharedKey</span> = vcjUaJ8laSu11QOwYbeSQoVbyMjzLRxzDZGb1OQiAcI=</span><br><span class=\"line\"><span class=\"attr\">Endpoint</span> = wg.carlzeng.top:<span class=\"number\">51820</span></span><br><span class=\"line\"><span class=\"attr\">AllowedIPs</span> = <span class=\"number\">192.168</span>.<span class=\"number\">100.0</span>/<span class=\"number\">24</span></span><br><span class=\"line\"><span class=\"attr\">PersistentKeepalive</span> = <span class=\"number\">25</span></span><br></pre></td></tr></table></figure>\n\n<p>要小心,这个地方配置文件中的设置; </p>\n<p>要和OpenWrt中的Peer设置不一样的, OpenWrt中的Peer设置要填写下吗这些wg genkey 生成的NAS中的公钥和私钥.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wg genkey | tee nas_privatekey | wg pubkey &gt; nas_publickey</span><br><span class=\"line\"># 创建 NAS 客户端公钥和私钥</span><br><span class=\"line\">cat nas_privatekey</span><br><span class=\"line\"># 获取 NAS 客户端私钥复制保存</span><br><span class=\"line\">cat nas_publickey</span><br><span class=\"line\"># 获取 NAS 客户端公钥复制保存</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>[已解决]故障: MAC端的peer ( sudo wg show wg0) 可以看到输出; 但是 NAS这样的配置 同样运行( sudo wg show wg0)是无法看到peer的输出的</p>\n<p>一顿操作, 修改了配置文件后: 主要是</p>\n<ol>\n<li>ssh中的vi wg0.conf </li>\n<li>OpenWrt中设置&#x2F;添加相应的Peer</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@DS918:/etc/wireguard# wg show wg0                                                                        </span><br><span class=\"line\">interface: wg0                                                                                                </span><br><span class=\"line\">  public key: 6WNPlSVqB6FfpkHGNDXljl9+SdbAfW2/yTxd+iI7t1A=                                                    </span><br><span class=\"line\">  private key: (hidden)                                                                                       </span><br><span class=\"line\">  listening port: 38586                                                                                       </span><br><span class=\"line\">                                                                                                              </span><br><span class=\"line\">peer: g0ZlzyRHEIOYtxbFtUHTnGATSzRdrB7k1vJzYH+CJWA=                                                            </span><br><span class=\"line\">  preshared key: (hidden)                                                                                     </span><br><span class=\"line\">  endpoint: 221.218.233.216:51820                                                                             </span><br><span class=\"line\">  allowed ips: 192.168.100.0/24                                                                               </span><br><span class=\"line\">  transfer: 0 B received, 2.89 KiB sent                                                                       </span><br><span class=\"line\">  persistent keepalive: every 25 seconds </span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">carlzeng@Carls-MBP AppTesting % sudo wg show                                                                  </span><br><span class=\"line\">interface: utun3                                                                                              </span><br><span class=\"line\">  public key: g0ZlzyRHEIOYtxbFtUHTnGATSzRdrB7k1vJzYH+CJWA=                                                    </span><br><span class=\"line\">  private key: (hidden)                                                                                       </span><br><span class=\"line\">  listening port: 52623                                                                                       </span><br><span class=\"line\">                                                                                                              </span><br><span class=\"line\">peer: G22pgmNqDPGAYg5+bHdMRrxhPQ3HABRla/yZAj0Tu0I=                                                            </span><br><span class=\"line\">  endpoint: 221.218.233.216:51820                                                                             </span><br><span class=\"line\">  allowed ips: 192.168.100.0/24                                                                               </span><br><span class=\"line\">  transfer: 0 B received, 5.64 KiB sent                                                                       </span><br><span class=\"line\">  persistent keepalive: every 25 seconds </span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"K2P作为一个WireGuard客户端接入VPN网络\"><a href=\"#K2P作为一个WireGuard客户端接入VPN网络\" class=\"headerlink\" title=\"K2P作为一个WireGuard客户端接入VPN网络\"></a>K2P作为一个WireGuard客户端接入VPN网络</h2><p>固件: <a href=\"https://www.right.com.cn/FORUM/thread-8001722-1-1.html\">https://www.right.com.cn/FORUM/thread-8001722-1-1.html</a></p>\n<p><a href=\"https://github.com/shvchk/padavan-wireguard-client\">WireGuard client for routers with Padavan based firmware</a></p>\n<h2 id=\"OpenWrt作为WireGuard客户端接入VPN网络\"><a href=\"#OpenWrt作为WireGuard客户端接入VPN网络\" class=\"headerlink\" title=\"OpenWrt作为WireGuard客户端接入VPN网络\"></a>OpenWrt作为WireGuard客户端接入VPN网络</h2><p>OpenWrt安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wg-quick                                                                  </span><br><span class=\"line\">-bash: wg-quick: command not found </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">opkg install wireguard-tools                                              </span><br><span class=\"line\">Package wireguard-tools (1.0.20210914-2) installed in root is up to date. </span><br></pre></td></tr></table></figure>\n\n<p>原来直接在UI上可以直接设置(导入配置文件), 不需要使用wg-quick命令</p>\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/09/10/66e037359aea9.png\" alt=\"image-20240910201027853\"></p>\n<p>抱歉我目前无法做这个测试, 我不能把当前的主路由OpenWrt拿来配置WG 客户端 否者担心流量会走入一个错误的循环, 具体参考:</p>\n<p><a href=\"https://www.youtube.com/watch?v=0_zQAp3V18c\">https://www.youtube.com/watch?v=0_zQAp3V18c</a></p>\n\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\">\n<iframe src=\"https://www.youtube.com/watch?v=0_zQAp3V18c\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; Left: 0; top: 0;\" ></iframe></div> \n\n\n\n\n\n\n\n<hr>\n<h1 id=\"故障及排查解决\"><a href=\"#故障及排查解决\" class=\"headerlink\" title=\"故障及排查解决\"></a>故障及排查解决</h1><p>mac端也是; transfer: 0 B received, 有 sent </p>\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/08/20/66c4bb3886c11.png\" alt=\"image-20240820235014056\"></p>\n<p>6、启动刚才编辑好的配置(启动Wireguard套件后在执行)</p>\n<p>​\tsudo wg-quick up wg0</p>\n<p>7、查看连接状态</p>\n<p>​    sudo wg show wg0</p>\n<p>解决思路: 切换OpenWrt的服务端 到 docker服务器中, 这样简化了整个设置&#x2F;配置过程.</p>\n<h2 id=\"NAS中运行wg-quick错误\"><a href=\"#NAS中运行wg-quick错误\" class=\"headerlink\" title=\"NAS中运行wg-quick错误\"></a>NAS中运行wg-quick错误</h2><p>&#x2F;usr&#x2F;local&#x2F;bin&#x2F;wg-quick: line 32: resolvconf: command not found</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wg-quick up HBY_NAS</span><br><span class=\"line\">[#] ip link add HBY_NAS type wireguard</span><br><span class=\"line\">[#] wg setconf HBY_NAS /dev/fd/63</span><br><span class=\"line\">[#] ip -4 address add 10.8.0.4/24 dev HBY_NAS</span><br><span class=\"line\">[#] ip link set mtu 1420 up dev HBY_NAS</span><br><span class=\"line\">[#] resolvconf -a HBY_NAS -m 0 -x</span><br><span class=\"line\">/usr/local/bin/wg-quick: line 32: resolvconf: command not found</span><br><span class=\"line\">[#] ip link delete dev HBY_NAS</span><br></pre></td></tr></table></figure>\n\n\n\n<p>just install it with <code>apt-get install resolvconf</code> and reboot, or comment out all DNS fields in configuration file</p>\n<p>本章节参考: <a href=\"https://superuser.com/questions/1500691/usr-bin-wg-quick-line-31-resolvconf-command-not-found-wireguard-debian\">https://superuser.com/questions/1500691/usr-bin-wg-quick-line-31-resolvconf-command-not-found-wireguard-debian</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo wg-quick up HBY_NAS                                                   </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip <span class=\"built_in\">link</span> add HBY_NAS <span class=\"built_in\">type</span> wireguard</span>                                                                </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] wg setconf HBY_NAS /dev/fd/63</span>                                                                     </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -4 address add 10.8.0.4/24 dev HBY_NAS</span>                                                         </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip <span class=\"built_in\">link</span> <span class=\"built_in\">set</span> mtu 1420 up dev HBY_NAS</span>                                                               </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] wg <span class=\"built_in\">set</span> HBY_NAS fwmark 51820</span>                                                                       </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -6 route add ::/0 dev HBY_NAS table 51820</span>                                                      </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -6 rule add not fwmark 51820 table 51820</span>                                                       </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -6 rule add table main suppress_prefixlength 0</span>                                                 </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip6tables-restore -n</span>                                                                              </span><br><span class=\"line\">ip6tables-restore v1.8.3 (legacy): ip6tables-restore: unable to initialize table &#x27;raw&#x27;                </span><br><span class=\"line\">                                                                                                      </span><br><span class=\"line\">Error occurred at line: 1                                                                             </span><br><span class=\"line\">Try `ip6tables-restore -h&#x27; or &#x27;ip6tables-restore --help&#x27; for more information.                        </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -6 rule delete table 51820</span>                                                                     </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -6 rule delete table main suppress_prefixlength 0</span>                                              </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip <span class=\"built_in\">link</span> delete dev HBY_NAS</span> </span><br></pre></td></tr></table></figure>\n\n\n\n<p>通过如下设置, 关闭NAS的IPv6</p>\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/09/10/66e007f785cb2.png\" alt=\"image-20240910164851768\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wg-quick up HBY_NAS                                                                     </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip <span class=\"built_in\">link</span> add HBY_NAS <span class=\"built_in\">type</span> wireguard</span>                                                                </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] wg setconf HBY_NAS /dev/fd/63</span>                                                                     </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -4 address add 10.8.0.4/24 dev HBY_NAS</span>                                                         </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip <span class=\"built_in\">link</span> <span class=\"built_in\">set</span> mtu 1420 up dev HBY_NAS</span>                                                               </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] wg <span class=\"built_in\">set</span> HBY_NAS fwmark 51820</span>                                                                       </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -4 route add 0.0.0.0/0 dev HBY_NAS table 51820</span>                                                 </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -4 rule add not fwmark 51820 table 51820</span>                                                       </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -4 rule add table main suppress_prefixlength 0</span>                                                 </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] sysctl -q net.ipv4.conf.all.src_valid_mark=1</span>                                                      </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] iptables-restore -n</span>                                                                               </span><br><span class=\"line\">iptables-restore v1.8.3 (legacy): iptables-restore: unable to initialize table &#x27;raw&#x27;                  </span><br><span class=\"line\">                                                                                                      </span><br><span class=\"line\">Error occurred at line: 1                                                                             </span><br><span class=\"line\">Try `iptables-restore -h&#x27; or &#x27;iptables-restore --help&#x27; for more information.                          </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -4 rule delete table 51820</span>                                                                     </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -4 rule delete table main suppress_prefixlength 0</span>                                              </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip <span class=\"built_in\">link</span> delete dev HBY_NAS</span>  </span><br></pre></td></tr></table></figure>\n\n<p>截至目前, 仍然无法给NAS开启WireGuard客户端, 暂时放弃, 因为它也是WireGuard服务器所在的docker容器也在NAS中.</p>\n<hr>\n<h1 id=\"docker搭建WireGuard服务端\"><a href=\"#docker搭建WireGuard服务端\" class=\"headerlink\" title=\"docker搭建WireGuard服务端\"></a>docker搭建WireGuard服务端</h1><p>状态实时查看界面: <a href=\"http://192.168.6.203:51821/\">http://192.168.6.203:51821/</a></p>\n<p>docker-compose.yml</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">volumes:</span></span><br><span class=\"line\">  <span class=\"attr\">etc_wireguard:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">wg-easy:</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"comment\"># Change Language:</span></span><br><span class=\"line\">      <span class=\"comment\"># (Supports: en, ua, ru, tr, no, pl, fr, de, ca, es, ko, vi, nl, is, pt, chs, cht, it, th, hi)</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">LANG=en</span></span><br><span class=\"line\">      <span class=\"comment\">#  Required:</span></span><br><span class=\"line\">      <span class=\"comment\"># Change this to your host&#x27;s public address</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">WG_HOST=raspberrypi.local</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\"># Optional:</span></span><br><span class=\"line\">      <span class=\"comment\"># - PASSWORD_HASH=$$2y$$10$$hBCoykrB95WSzuV4fafBzOHWKu9sbyVa34GJr8VV5R/pIelfEMYyG (needs double $$, hash of &#x27;foobar123&#x27;; see &quot;How_to_generate_an_bcrypt_hash.md&quot; for generate the hash)</span></span><br><span class=\"line\">      <span class=\"comment\"># - PORT=51821</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_PORT=51820</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_CONFIG_PORT=92820</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_DEFAULT_ADDRESS=10.8.0.x</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_DEFAULT_DNS=1.1.1.1</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_MTU=1420</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_ALLOWED_IPS=192.168.15.0/24, 10.0.1.0/24</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_PERSISTENT_KEEPALIVE=25</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_PRE_UP=echo &quot;Pre Up&quot; &gt; /etc/wireguard/pre-up.txt</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_POST_UP=echo &quot;Post Up&quot; &gt; /etc/wireguard/post-up.txt</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_PRE_DOWN=echo &quot;Pre Down&quot; &gt; /etc/wireguard/pre-down.txt</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_POST_DOWN=echo &quot;Post Down&quot; &gt; /etc/wireguard/post-down.txt</span></span><br><span class=\"line\">      <span class=\"comment\"># - UI_TRAFFIC_STATS=true</span></span><br><span class=\"line\">      <span class=\"comment\"># - UI_CHART_TYPE=0 # (0 Charts disabled, 1 # Line chart, 2 # Area chart, 3 # Bar chart)</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_ENABLE_ONE_TIME_LINKS=true</span></span><br><span class=\"line\">      <span class=\"comment\"># - UI_ENABLE_SORT_CLIENTS=true</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_ENABLE_EXPIRES_TIME=true</span></span><br><span class=\"line\">      <span class=\"comment\"># - ENABLE_PROMETHEUS_METRICS=false</span></span><br><span class=\"line\">      <span class=\"comment\"># - PROMETHEUS_METRICS_PASSWORD=$$2a$$12$$vkvKpeEAHD78gasyawIod.1leBMKg8sBwKW.pQyNsq78bXV3INf2G # (needs double $$, hash of &#x27;prometheus_password&#x27;; see &quot;How_to_generate_an_bcrypt_hash.md&quot; for generate the hash)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">ghcr.io/wg-easy/wg-easy</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">wg-easy</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">etc_wireguard:/etc/wireguard</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;51820:51820/udp&quot;</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;51821:51821/tcp&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">unless-stopped</span></span><br><span class=\"line\">    <span class=\"attr\">cap_add:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">NET_ADMIN</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">SYS_MODULE</span></span><br><span class=\"line\">      <span class=\"comment\"># - NET_RAW # Uncomment if using Podman</span></span><br><span class=\"line\">    <span class=\"attr\">sysctls:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">net.ipv4.ip_forward=1</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">net.ipv4.conf.all.src_valid_mark=1</span></span><br></pre></td></tr></table></figure>\n\n<p>如本文第一章照片所示, 这个工具很人性化, 整个设置非常简便, 节省时间.</p>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p><a href=\"https://www.ioiox.com/archives/143.html\">https://www.ioiox.com/archives/143.html</a></p>\n<p><a href=\"https://github.com/wg-easy/wg-easy\">https://github.com/wg-easy/wg-easy</a></p>\n<p><a href=\"https://www.wireguard.com/install/\">https://www.wireguard.com/install/</a></p>\n","more":"<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.top:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n\n\n<h1 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h1><p><code>WireGuard</code> 是一种现代、快速且安全的虚拟专用网络 (VPN) 通信协议和免费开源软件。</p>\n<p><code>WireGuard</code> 的设计目标在于易于使用、高速性能和低攻击面。它利用了最新的加密技术，旨在提供比 <code>IPsec</code> 和 <code>OpenVPN</code> 等传统 VPN 协议更好的性能和更强大的功能。<code>WireGuard</code> 的核心代码相对精简，被 <code>Linux</code> 之父 <code>Linus Torvalds</code> 称为 <code>艺术品</code>，其核心代码只有四千多行。</p>\n<p>此外，<code>WireGuard</code> 协议通过 <code>UDP</code> 传递流量，使其在速度和安全性方面具有显著优势。它被设计为简单、高效，并适用于从低端设备如树莓派到高端服务器的广泛环境。</p>\n<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>Wireguard 回家</p>\n<p>学会配置WireGuard这种VPN‘回家’的方式, </p>\n<p>主要用于在外办公方便VPN 回家的使用场景. 下一步博主就要在 macOS, Android 和 K2P 上体验</p>\n<p>公网服务器上部署一个Wireguard 服务器，然后让<em>Openwrt</em> 通过Wireguard 连接到公网服务器，然后客户端可以通过Wireguard 访问<em>Openwrt</em> 的内网设备。</p>\n<h1 id=\"硬件\"><a href=\"#硬件\" class=\"headerlink\" title=\"硬件\"></a>硬件</h1><p>本例子中使用了</p>\n<ol>\n<li><p>[done] NAS中docker一个WireGuard Easy服务端</p>\n<ol>\n<li><a href=\"https://github.com/wg-easy/wg-easy\">The easiest way to run WireGuard VPN + Web-based Admin UI.</a></li>\n</ol>\n</li>\n<li><p>主路由为OpenWrt的情况, 作为远程VPN的服务端</p>\n<ol>\n<li>这样外出的电脑和手机等就可以通过这个WireGuard将数据VPN回主路由OpenWrt的物理位置</li>\n<li>设置繁琐, 放弃该方案</li>\n</ol>\n</li>\n<li><p>[done]客户端一: MAC OS 电脑作为一个WireGuard客户端接入VPN网络</p>\n<ol>\n<li>成功</li>\n</ol>\n</li>\n<li><p>客户端二: K2P作为一个WireGuard客户端接入VPN网络</p>\n<ol>\n<li>待续, 需要特定的固件</li>\n</ol>\n</li>\n<li><p>[done]客户端三: 安卓手机作为WireGuard客户端接入VPN网络</p>\n<ol>\n<li>成功</li>\n</ol>\n</li>\n<li><p>客户端四: OpenWrt作为WireGuard客户端接入VPN网络</p>\n</li>\n</ol>\n<p>未完待续….</p>\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=vpn\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h1><h2 id=\"OpenWRT创建公钥私钥\"><a href=\"#OpenWRT创建公钥私钥\" class=\"headerlink\" title=\"OpenWRT创建公钥私钥\"></a>OpenWRT创建公钥私钥</h2><h3 id=\"预共享密钥\"><a href=\"#预共享密钥\" class=\"headerlink\" title=\"预共享密钥\"></a>预共享密钥</h3><p>通过<code>SSH</code>登陆到 OpenWRT 后台.</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> wg</span><br><span class=\"line\"><span class=\"comment\"># 创建目录存放公钥私钥</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> wg</span><br><span class=\"line\"><span class=\"comment\"># 进入文件夹</span></span><br><span class=\"line\"><span class=\"built_in\">umask</span> 077</span><br><span class=\"line\"><span class=\"comment\"># 配置创建密钥的权限</span></span><br><span class=\"line\">wg genpsk &gt; sharekey</span><br><span class=\"line\"><span class=\"comment\"># 创建预共享密钥</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> sharekey</span><br><span class=\"line\"><span class=\"comment\"># 获取密钥复制保存: vcjUaJ8laSu11QOwYbeSQoVbyMjzLRxzDZGb1OQiAcI=</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"服务端公钥私钥\"><a href=\"#服务端公钥私钥\" class=\"headerlink\" title=\"服务端公钥私钥\"></a>服务端公钥私钥</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wg genkey | <span class=\"built_in\">tee</span> server_privatekey | wg pubkey &gt; server_publickey</span><br><span class=\"line\"><span class=\"comment\"># 创建服务端公钥和私钥</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> server_privatekey</span><br><span class=\"line\"><span class=\"comment\"># 获取服务端私钥复制保存</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> server_publickey</span><br><span class=\"line\"><span class=\"comment\"># 获取服务端公钥复制保存</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"MacOS-客户端公钥\"><a href=\"#MacOS-客户端公钥\" class=\"headerlink\" title=\"MacOS 客户端公钥\"></a>MacOS 客户端公钥</h3><p>客户端公钥私钥 ( macOS )</p>\n<p>重复此操作创建每个客户端的公钥和私钥,请注意修改以下命令中的文件名,本文以 macOS 为例:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wg genkey | <span class=\"built_in\">tee</span> macos_privatekey | wg pubkey &gt; macos_publickey</span><br><span class=\"line\"><span class=\"comment\"># 创建 macOS 客户端公钥和私钥</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> macos_privatekey</span><br><span class=\"line\"><span class=\"comment\"># 获取 macOS 客户端私钥复制保存</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> macos_publickey</span><br><span class=\"line\"><span class=\"comment\"># 获取 macOS 客户端公钥复制保存</span></span><br></pre></td></tr></table></figure>\n\n<p>运行发现报错:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">zsh: command not found: wg </span><br></pre></td></tr></table></figure>\n\n<p>解决:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 在线安装wireguard</span><br><span class=\"line\">brew install wireguard-tools</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<h3 id=\"配置-OpenWRT-UI\"><a href=\"#配置-OpenWRT-UI\" class=\"headerlink\" title=\"配置 OpenWRT UI\"></a>配置 OpenWRT UI</h3><h4 id=\"服务端相关配置\"><a href=\"#服务端相关配置\" class=\"headerlink\" title=\"服务端相关配置\"></a>服务端相关配置</h4><p>登陆 OpenWRT - 网络 - 接口 - 添加新接口</p>\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/09/10/66dfb579be8f8.png\" alt=\"image-20240910105651263\"></p>\n<p>基本设置 - 填写上文获取的服务端私钥<br>自行填写一个端口号 - 并且在路由器映射该端口的 UDP 协议<br>IP 地址填写一个 VPN 专用的网段 IP - 本文以192.168.100.X为 WireGuard 的专用网段为例,则本 WG 服务器 IP 为192.168.100.1&#x2F;24</p>\n<p>防火墙设置 - 选择 vpn</p>\n<h4 id=\"客户端-Peers-区域为每个客户端添加配置\"><a href=\"#客户端-Peers-区域为每个客户端添加配置\" class=\"headerlink\" title=\"客户端 Peers 区域为每个客户端添加配置\"></a>客户端 Peers 区域为每个客户端添加配置</h4><p><img data-src=\"https://img.carlzeng.top:3/i/2024/08/20/66c462c99f24b.png\" alt=\"image-20240820173253322\"></p>\n<p>选择<code>预共享密钥</code> - 添加</p>\n<p>公钥 - 填写上文获取的macOS 客户端公钥; </p>\n<p>​\t- 新的客户端, 正在尝试, 直接点击 “生成新的密钥对”进行新的客户端Peer的公钥和私钥生成. </p>\n<p>预共享密钥 - 填写上文获取的预共享密钥</p>\n<p>允许的 IP - 即表示为此 macOS 客户端分配固定 IP , 本文示例为 192.168.100.2&#x2F;32 , 注意各客户端 IP 不能冲突.<br>持续 Keep-Alive - 填写 25</p>\n<h4 id=\"防火墙\"><a href=\"#防火墙\" class=\"headerlink\" title=\"防火墙\"></a>防火墙</h4><p>网络 - 防火墙 - 自定义防火墙 - 添加以下防火墙 - 重启防火墙</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iptables -t nat -A POSTROUTING -s 192.168.100.0/24 -o br-lan -j MASQUERADE</span><br><span class=\"line\"><span class=\"comment\"># 注意此条防火墙网段 192.168.100.0/24 需和上文服务端 IP 网段保持一致.</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>再次声明博主的 OpenWRT 是作为旁路由接入</strong>,此条防火墙不确定适用于主路由部署 WireGuard 使用.主路由用户可以尝试无需设置防火墙(经朋友测试)</p>\n<p><u>配置了一圈防火墙的规则, 还是卡死</u></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -vz wg.carlzeng.top 51820                                                  </span><br><span class=\"line\">nc: connectx to wg.carlzeng.top port 51820 (tcp) failed: Connection refused </span><br></pre></td></tr></table></figure>\n\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/08/19/66c2b714b67d2.png\" alt=\"image-20240819110758717\"></p>\n<p>好像又有在OpenWrt的远程服务端收到数据包, 可是又不知道最终效果是如何的?</p>\n<p>比如从什么应用出发? 连接了WireGuard VPN以后效果是如何的?</p>\n<blockquote>\n<p>是可以直接ping通的, 比如 ping 10.8.0.5</p>\n</blockquote>\n<h4 id=\"重启-WireGuard\"><a href=\"#重启-WireGuard\" class=\"headerlink\" title=\"重启 WireGuard\"></a>重启 WireGuard</h4><p>返回网络 - 接口 - 关闭 - 连接<br>或者直接重启整个 OpenWRT 最为稳妥.</p>\n<hr>\n<h2 id=\"客户端-MAC\"><a href=\"#客户端-MAC\" class=\"headerlink\" title=\"客户端(MAC)\"></a>客户端(MAC)</h2><h3 id=\"创建客户端配置文件\"><a href=\"#创建客户端配置文件\" class=\"headerlink\" title=\"创建客户端配置文件\"></a>创建客户端配置文件</h3><p>创建后缀为<code>.conf</code>的配置文件,例如<code>macos_wireguard.conf</code>,复制以下信息,并且修改对应的公私钥信息:</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Interface]</span><br><span class=\"line\"><span class=\"attribute\">Address</span> = <span class=\"number\">192.168.100.2</span>/<span class=\"number\">32</span></span><br><span class=\"line\"><span class=\"comment\"># 对应 macOS 客户段分配的 IP</span></span><br><span class=\"line\">PrivateKey = qJHywBpl27Ao/TRse85DQ/f+kwfNGRmPDYCq0OC6uUY=</span><br><span class=\"line\"><span class=\"comment\"># 此时的配置文件是用于客户端的,所以PrivateKey则为 macOS 客户端的私钥</span></span><br><span class=\"line\">DNS = <span class=\"number\">192.168.1.3</span></span><br><span class=\"line\"><span class=\"comment\"># 本地的 DNS 服务器或者公有 DNS 服务器,例如: 114.114.114.114</span></span><br><span class=\"line\">[Peer]</span><br><span class=\"line\">PublicKey = u7vjXN90uJt7pRjG8tR7hb25ssYOi7PRzJ5h9Diy02I=</span><br><span class=\"line\">AllowedIPs = <span class=\"number\">192.168.1.0</span>/<span class=\"number\">24</span>, <span class=\"number\">192.168.100.0</span>/<span class=\"number\">24</span></span><br><span class=\"line\"><span class=\"comment\"># macOS 如上设置可与 ClashX Pro 共存仅代理局域网,互联网走本地网络.</span></span><br><span class=\"line\"><span class=\"comment\"># iPhone iPad 设置为 0.0.0.0/0 全局则模式.</span></span><br><span class=\"line\">PresharedKey = Pu5xBEBmz9ghhUMNp5o72s+w7nuLwxJJUgNk3EljFVo=</span><br><span class=\"line\"><span class=\"comment\"># 预共享密钥</span></span><br><span class=\"line\">Endpoint = ddns.xxxxx.com:<span class=\"number\">12345</span></span><br><span class=\"line\">PersistentKeepalive = <span class=\"number\">25</span></span><br></pre></td></tr></table></figure>\n\n<p>此时的配置文件是用于客户端的,所以<code>PrivateKey</code>则为 macOS 客户端的私钥,而<code>Peer</code>中的<code>PublicKey</code>则为 OpenWRT 的公钥.<strong>请注意反向思考</strong>,<code>Endpoint</code>填写家中的 IP 或者 DDNS 域名和端口.</p>\n<h4 id=\"AllowedIPs\"><a href=\"#AllowedIPs\" class=\"headerlink\" title=\"AllowedIPs\"></a>AllowedIPs</h4><p>值得注意的是<code>AllowedIPs</code>参数.针对不同场景和需求,此处可以配置不用的路由.<br>当此处为<code>0.0.0.0/0</code>时表示任意网络请求都经过 VPN 俗称全局 VPN , 由于 iPhone 同时只能有 1 个 VPN 软件在线,所以当 <code>WireGuard</code> 启动时,其他类似<code>Quanx</code>,<code>小火箭</code>等软件则无法使用,此时 iPhone 可以全局 VPN 使用家中的网络来访问一些外网.</p>\n<p>如果是 macOS 或 Windows 客户端,<code>WireGuard</code>和<code>Clash</code>等软件可以共存,此处可以设置为<code>AllowedIPs = 192.168.1.0/24, 192.168.100.0/24</code>,表示访问内网网段才会走 VPN .而其他互联网,外网等访问还是走当前网络来利用<code>Clash</code>分流.</p>\n<p>macOS<br>在 macOS App Store 下载 WireGuard,从文件导入隧道.</p>\n<p>在 OpenWRT 状态页面能够看到连接成功的状态信息</p>\n<h4 id=\"其他命令\"><a href=\"#其他命令\" class=\"headerlink\" title=\"其他命令\"></a>其他命令</h4><p>wg-quick down wg0 #停止服务<br>wg-quick strip wg0 #查看配置<br>wg-quick #查看所有支持的命令</p>\n<hr>\n<h2 id=\"群晖安装-WireGuard-客户端\"><a href=\"#群晖安装-WireGuard-客户端\" class=\"headerlink\" title=\"群晖安装 WireGuard 客户端\"></a>群晖安装 WireGuard 客户端</h2><p>WireGuard 官方提供了很多系统的客户端，但是群晖暂时还没有，有开发者打包了对应的安装包，但是 DSM 7.0 中，群晖插件机制有改动，造成无法简单安装使用。</p>\n<p>一、在套件中心添加“我不是矿神”套件源</p>\n<p>名称随意，位置填  <a href=\"https://spk7.imnks.com/\">https://spk7.imnks.com/</a>  然后确定</p>\n<p>二、安装Wireguard套件</p>\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/08/20/66c45bee8098e.png\" alt=\"image-20240820170337632\"></p>\n<pre><code>1、切换到root用户\n\n    sudo -i\n\n2、赋予Wireguard套件权限（执行该命令后启动Wireguard套件已经不会自动停用）\n\n    sudo sed -i &#39;s/package/root/g&#39; /var/packages/WireGuard/conf/privilege\n\n3、在etc目录下创建wireguard文件夹\n\n    mkdir /etc/wireguard/\n\n4、编辑Wireguard配置文件\n\n    vi /etc/wireguard/wg0.conf\n\n5、进行相关配置\n\n    （1）、按下” i “键进行编辑，复制本地编辑好的配置文件内容，鼠标右键直接粘贴  \n\n          注意：要将DNS那行删掉\n</code></pre>\n<p>实例的NAS中wg0.conf配置文件</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[Interface]</span></span><br><span class=\"line\"><span class=\"attr\">Address</span> = <span class=\"number\">192.168</span>.<span class=\"number\">100.203</span>/<span class=\"number\">32</span></span><br><span class=\"line\"><span class=\"attr\">PrivateKey</span> = <span class=\"number\">6</span>ANjSDBrOa+hymme+Ive8Fd1GbqOHPosSEQwDNy0x3s=</span><br><span class=\"line\"><span class=\"comment\"># 此时的配置文件是用于客户端的,所以PrivateKey则为 NAS 客户端的私钥</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[Peer]</span></span><br><span class=\"line\"><span class=\"attr\">PublicKey</span> = G22pgmNqDPGAYg5+bHdMRrxhPQ3HABRla/yZAj0Tu0I=</span><br><span class=\"line\"><span class=\"comment\"># 而`Peer`中的`PublicKey`则为 OpenWRT 的公钥</span></span><br><span class=\"line\"><span class=\"attr\">PresharedKey</span> = vcjUaJ8laSu11QOwYbeSQoVbyMjzLRxzDZGb1OQiAcI=</span><br><span class=\"line\"><span class=\"attr\">Endpoint</span> = wg.carlzeng.top:<span class=\"number\">51820</span></span><br><span class=\"line\"><span class=\"attr\">AllowedIPs</span> = <span class=\"number\">192.168</span>.<span class=\"number\">100.0</span>/<span class=\"number\">24</span></span><br><span class=\"line\"><span class=\"attr\">PersistentKeepalive</span> = <span class=\"number\">25</span></span><br></pre></td></tr></table></figure>\n\n<p>要小心,这个地方配置文件中的设置; </p>\n<p>要和OpenWrt中的Peer设置不一样的, OpenWrt中的Peer设置要填写下吗这些wg genkey 生成的NAS中的公钥和私钥.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wg genkey | tee nas_privatekey | wg pubkey &gt; nas_publickey</span><br><span class=\"line\"># 创建 NAS 客户端公钥和私钥</span><br><span class=\"line\">cat nas_privatekey</span><br><span class=\"line\"># 获取 NAS 客户端私钥复制保存</span><br><span class=\"line\">cat nas_publickey</span><br><span class=\"line\"># 获取 NAS 客户端公钥复制保存</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<p>[已解决]故障: MAC端的peer ( sudo wg show wg0) 可以看到输出; 但是 NAS这样的配置 同样运行( sudo wg show wg0)是无法看到peer的输出的</p>\n<p>一顿操作, 修改了配置文件后: 主要是</p>\n<ol>\n<li>ssh中的vi wg0.conf </li>\n<li>OpenWrt中设置&#x2F;添加相应的Peer</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@DS918:/etc/wireguard# wg show wg0                                                                        </span><br><span class=\"line\">interface: wg0                                                                                                </span><br><span class=\"line\">  public key: 6WNPlSVqB6FfpkHGNDXljl9+SdbAfW2/yTxd+iI7t1A=                                                    </span><br><span class=\"line\">  private key: (hidden)                                                                                       </span><br><span class=\"line\">  listening port: 38586                                                                                       </span><br><span class=\"line\">                                                                                                              </span><br><span class=\"line\">peer: g0ZlzyRHEIOYtxbFtUHTnGATSzRdrB7k1vJzYH+CJWA=                                                            </span><br><span class=\"line\">  preshared key: (hidden)                                                                                     </span><br><span class=\"line\">  endpoint: 221.218.233.216:51820                                                                             </span><br><span class=\"line\">  allowed ips: 192.168.100.0/24                                                                               </span><br><span class=\"line\">  transfer: 0 B received, 2.89 KiB sent                                                                       </span><br><span class=\"line\">  persistent keepalive: every 25 seconds </span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">carlzeng@Carls-MBP AppTesting % sudo wg show                                                                  </span><br><span class=\"line\">interface: utun3                                                                                              </span><br><span class=\"line\">  public key: g0ZlzyRHEIOYtxbFtUHTnGATSzRdrB7k1vJzYH+CJWA=                                                    </span><br><span class=\"line\">  private key: (hidden)                                                                                       </span><br><span class=\"line\">  listening port: 52623                                                                                       </span><br><span class=\"line\">                                                                                                              </span><br><span class=\"line\">peer: G22pgmNqDPGAYg5+bHdMRrxhPQ3HABRla/yZAj0Tu0I=                                                            </span><br><span class=\"line\">  endpoint: 221.218.233.216:51820                                                                             </span><br><span class=\"line\">  allowed ips: 192.168.100.0/24                                                                               </span><br><span class=\"line\">  transfer: 0 B received, 5.64 KiB sent                                                                       </span><br><span class=\"line\">  persistent keepalive: every 25 seconds </span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"K2P作为一个WireGuard客户端接入VPN网络\"><a href=\"#K2P作为一个WireGuard客户端接入VPN网络\" class=\"headerlink\" title=\"K2P作为一个WireGuard客户端接入VPN网络\"></a>K2P作为一个WireGuard客户端接入VPN网络</h2><p>固件: <a href=\"https://www.right.com.cn/FORUM/thread-8001722-1-1.html\">https://www.right.com.cn/FORUM/thread-8001722-1-1.html</a></p>\n<p><a href=\"https://github.com/shvchk/padavan-wireguard-client\">WireGuard client for routers with Padavan based firmware</a></p>\n<h2 id=\"OpenWrt作为WireGuard客户端接入VPN网络\"><a href=\"#OpenWrt作为WireGuard客户端接入VPN网络\" class=\"headerlink\" title=\"OpenWrt作为WireGuard客户端接入VPN网络\"></a>OpenWrt作为WireGuard客户端接入VPN网络</h2><p>OpenWrt安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wg-quick                                                                  </span><br><span class=\"line\">-bash: wg-quick: command not found </span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">opkg install wireguard-tools                                              </span><br><span class=\"line\">Package wireguard-tools (1.0.20210914-2) installed in root is up to date. </span><br></pre></td></tr></table></figure>\n\n<p>原来直接在UI上可以直接设置(导入配置文件), 不需要使用wg-quick命令</p>\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/09/10/66e037359aea9.png\" alt=\"image-20240910201027853\"></p>\n<p>抱歉我目前无法做这个测试, 我不能把当前的主路由OpenWrt拿来配置WG 客户端 否者担心流量会走入一个错误的循环, 具体参考:</p>\n<p><a href=\"https://www.youtube.com/watch?v=0_zQAp3V18c\">https://www.youtube.com/watch?v=0_zQAp3V18c</a></p>\n\n<div style=\"position: relative; width: 100%; height: 0; padding-bottom: 75%;\">\n<iframe src=\"https://www.youtube.com/watch?v=0_zQAp3V18c\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"position: absolute; width: 100%; height: 100%; Left: 0; top: 0;\" ></iframe></div> \n\n\n\n\n\n\n\n<hr>\n<h1 id=\"故障及排查解决\"><a href=\"#故障及排查解决\" class=\"headerlink\" title=\"故障及排查解决\"></a>故障及排查解决</h1><p>mac端也是; transfer: 0 B received, 有 sent </p>\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/08/20/66c4bb3886c11.png\" alt=\"image-20240820235014056\"></p>\n<p>6、启动刚才编辑好的配置(启动Wireguard套件后在执行)</p>\n<p>​\tsudo wg-quick up wg0</p>\n<p>7、查看连接状态</p>\n<p>​    sudo wg show wg0</p>\n<p>解决思路: 切换OpenWrt的服务端 到 docker服务器中, 这样简化了整个设置&#x2F;配置过程.</p>\n<h2 id=\"NAS中运行wg-quick错误\"><a href=\"#NAS中运行wg-quick错误\" class=\"headerlink\" title=\"NAS中运行wg-quick错误\"></a>NAS中运行wg-quick错误</h2><p>&#x2F;usr&#x2F;local&#x2F;bin&#x2F;wg-quick: line 32: resolvconf: command not found</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wg-quick up HBY_NAS</span><br><span class=\"line\">[#] ip link add HBY_NAS type wireguard</span><br><span class=\"line\">[#] wg setconf HBY_NAS /dev/fd/63</span><br><span class=\"line\">[#] ip -4 address add 10.8.0.4/24 dev HBY_NAS</span><br><span class=\"line\">[#] ip link set mtu 1420 up dev HBY_NAS</span><br><span class=\"line\">[#] resolvconf -a HBY_NAS -m 0 -x</span><br><span class=\"line\">/usr/local/bin/wg-quick: line 32: resolvconf: command not found</span><br><span class=\"line\">[#] ip link delete dev HBY_NAS</span><br></pre></td></tr></table></figure>\n\n\n\n<p>just install it with <code>apt-get install resolvconf</code> and reboot, or comment out all DNS fields in configuration file</p>\n<p>本章节参考: <a href=\"https://superuser.com/questions/1500691/usr-bin-wg-quick-line-31-resolvconf-command-not-found-wireguard-debian\">https://superuser.com/questions/1500691/usr-bin-wg-quick-line-31-resolvconf-command-not-found-wireguard-debian</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo wg-quick up HBY_NAS                                                   </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip <span class=\"built_in\">link</span> add HBY_NAS <span class=\"built_in\">type</span> wireguard</span>                                                                </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] wg setconf HBY_NAS /dev/fd/63</span>                                                                     </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -4 address add 10.8.0.4/24 dev HBY_NAS</span>                                                         </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip <span class=\"built_in\">link</span> <span class=\"built_in\">set</span> mtu 1420 up dev HBY_NAS</span>                                                               </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] wg <span class=\"built_in\">set</span> HBY_NAS fwmark 51820</span>                                                                       </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -6 route add ::/0 dev HBY_NAS table 51820</span>                                                      </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -6 rule add not fwmark 51820 table 51820</span>                                                       </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -6 rule add table main suppress_prefixlength 0</span>                                                 </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip6tables-restore -n</span>                                                                              </span><br><span class=\"line\">ip6tables-restore v1.8.3 (legacy): ip6tables-restore: unable to initialize table &#x27;raw&#x27;                </span><br><span class=\"line\">                                                                                                      </span><br><span class=\"line\">Error occurred at line: 1                                                                             </span><br><span class=\"line\">Try `ip6tables-restore -h&#x27; or &#x27;ip6tables-restore --help&#x27; for more information.                        </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -6 rule delete table 51820</span>                                                                     </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -6 rule delete table main suppress_prefixlength 0</span>                                              </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip <span class=\"built_in\">link</span> delete dev HBY_NAS</span> </span><br></pre></td></tr></table></figure>\n\n\n\n<p>通过如下设置, 关闭NAS的IPv6</p>\n<p><img data-src=\"https://img.carlzeng.top:3/i/2024/09/10/66e007f785cb2.png\" alt=\"image-20240910164851768\"></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wg-quick up HBY_NAS                                                                     </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip <span class=\"built_in\">link</span> add HBY_NAS <span class=\"built_in\">type</span> wireguard</span>                                                                </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] wg setconf HBY_NAS /dev/fd/63</span>                                                                     </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -4 address add 10.8.0.4/24 dev HBY_NAS</span>                                                         </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip <span class=\"built_in\">link</span> <span class=\"built_in\">set</span> mtu 1420 up dev HBY_NAS</span>                                                               </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] wg <span class=\"built_in\">set</span> HBY_NAS fwmark 51820</span>                                                                       </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -4 route add 0.0.0.0/0 dev HBY_NAS table 51820</span>                                                 </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -4 rule add not fwmark 51820 table 51820</span>                                                       </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -4 rule add table main suppress_prefixlength 0</span>                                                 </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] sysctl -q net.ipv4.conf.all.src_valid_mark=1</span>                                                      </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] iptables-restore -n</span>                                                                               </span><br><span class=\"line\">iptables-restore v1.8.3 (legacy): iptables-restore: unable to initialize table &#x27;raw&#x27;                  </span><br><span class=\"line\">                                                                                                      </span><br><span class=\"line\">Error occurred at line: 1                                                                             </span><br><span class=\"line\">Try `iptables-restore -h&#x27; or &#x27;iptables-restore --help&#x27; for more information.                          </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -4 rule delete table 51820</span>                                                                     </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip -4 rule delete table main suppress_prefixlength 0</span>                                              </span><br><span class=\"line\"><span class=\"meta prompt_\">[#</span><span class=\"language-bash\">] ip <span class=\"built_in\">link</span> delete dev HBY_NAS</span>  </span><br></pre></td></tr></table></figure>\n\n<p>截至目前, 仍然无法给NAS开启WireGuard客户端, 暂时放弃, 因为它也是WireGuard服务器所在的docker容器也在NAS中.</p>\n<hr>\n<h1 id=\"docker搭建WireGuard服务端\"><a href=\"#docker搭建WireGuard服务端\" class=\"headerlink\" title=\"docker搭建WireGuard服务端\"></a>docker搭建WireGuard服务端</h1><p>状态实时查看界面: <a href=\"http://192.168.6.203:51821/\">http://192.168.6.203:51821/</a></p>\n<p>docker-compose.yml</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">volumes:</span></span><br><span class=\"line\">  <span class=\"attr\">etc_wireguard:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">wg-easy:</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"comment\"># Change Language:</span></span><br><span class=\"line\">      <span class=\"comment\"># (Supports: en, ua, ru, tr, no, pl, fr, de, ca, es, ko, vi, nl, is, pt, chs, cht, it, th, hi)</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">LANG=en</span></span><br><span class=\"line\">      <span class=\"comment\">#  Required:</span></span><br><span class=\"line\">      <span class=\"comment\"># Change this to your host&#x27;s public address</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">WG_HOST=raspberrypi.local</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\"># Optional:</span></span><br><span class=\"line\">      <span class=\"comment\"># - PASSWORD_HASH=$$2y$$10$$hBCoykrB95WSzuV4fafBzOHWKu9sbyVa34GJr8VV5R/pIelfEMYyG (needs double $$, hash of &#x27;foobar123&#x27;; see &quot;How_to_generate_an_bcrypt_hash.md&quot; for generate the hash)</span></span><br><span class=\"line\">      <span class=\"comment\"># - PORT=51821</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_PORT=51820</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_CONFIG_PORT=92820</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_DEFAULT_ADDRESS=10.8.0.x</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_DEFAULT_DNS=1.1.1.1</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_MTU=1420</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_ALLOWED_IPS=192.168.15.0/24, 10.0.1.0/24</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_PERSISTENT_KEEPALIVE=25</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_PRE_UP=echo &quot;Pre Up&quot; &gt; /etc/wireguard/pre-up.txt</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_POST_UP=echo &quot;Post Up&quot; &gt; /etc/wireguard/post-up.txt</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_PRE_DOWN=echo &quot;Pre Down&quot; &gt; /etc/wireguard/pre-down.txt</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_POST_DOWN=echo &quot;Post Down&quot; &gt; /etc/wireguard/post-down.txt</span></span><br><span class=\"line\">      <span class=\"comment\"># - UI_TRAFFIC_STATS=true</span></span><br><span class=\"line\">      <span class=\"comment\"># - UI_CHART_TYPE=0 # (0 Charts disabled, 1 # Line chart, 2 # Area chart, 3 # Bar chart)</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_ENABLE_ONE_TIME_LINKS=true</span></span><br><span class=\"line\">      <span class=\"comment\"># - UI_ENABLE_SORT_CLIENTS=true</span></span><br><span class=\"line\">      <span class=\"comment\"># - WG_ENABLE_EXPIRES_TIME=true</span></span><br><span class=\"line\">      <span class=\"comment\"># - ENABLE_PROMETHEUS_METRICS=false</span></span><br><span class=\"line\">      <span class=\"comment\"># - PROMETHEUS_METRICS_PASSWORD=$$2a$$12$$vkvKpeEAHD78gasyawIod.1leBMKg8sBwKW.pQyNsq78bXV3INf2G # (needs double $$, hash of &#x27;prometheus_password&#x27;; see &quot;How_to_generate_an_bcrypt_hash.md&quot; for generate the hash)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">ghcr.io/wg-easy/wg-easy</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">wg-easy</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">etc_wireguard:/etc/wireguard</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;51820:51820/udp&quot;</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;51821:51821/tcp&quot;</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">unless-stopped</span></span><br><span class=\"line\">    <span class=\"attr\">cap_add:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">NET_ADMIN</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">SYS_MODULE</span></span><br><span class=\"line\">      <span class=\"comment\"># - NET_RAW # Uncomment if using Podman</span></span><br><span class=\"line\">    <span class=\"attr\">sysctls:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">net.ipv4.ip_forward=1</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">net.ipv4.conf.all.src_valid_mark=1</span></span><br></pre></td></tr></table></figure>\n\n<p>如本文第一章照片所示, 这个工具很人性化, 整个设置非常简便, 节省时间.</p>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p><a href=\"https://www.ioiox.com/archives/143.html\">https://www.ioiox.com/archives/143.html</a></p>\n<p><a href=\"https://github.com/wg-easy/wg-easy\">https://github.com/wg-easy/wg-easy</a></p>\n<p><a href=\"https://www.wireguard.com/install/\">https://www.wireguard.com/install/</a></p>","categories":[{"name":"WireGuard","path":"api/categories/WireGuard.json"}],"tags":[{"name":"OpenWrt","path":"api/tags/OpenWrt.json"},{"name":"linux","path":"api/tags/linux.json"},{"name":"K2P","path":"api/tags/K2P.json"},{"name":"WireGuard","path":"api/tags/WireGuard.json"}]}