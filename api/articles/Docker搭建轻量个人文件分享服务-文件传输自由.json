{"title":"Docker搭建轻量个人文件分享服务-文件传输自由","slug":"Docker搭建轻量个人文件分享服务-文件传输自由","date":"2023-12-23T01:40:00.000Z","updated":"2025-09-17T08:00:24.205Z","comments":true,"path":"api/articles/Docker搭建轻量个人文件分享服务-文件传输自由.json","excerpt":" [Figure] 临时小文件分享，远程文件传输，自建网盘开放文件临时分享以及大宝学校的学习资料：https://file.carlzeng.com:32024.1.2 转化方案到Alist2024.1.30 Aria2离线下载到该Alist目录教程","covers":["https://www.evernote.com/shard/s122/sh/282e6c4a-96bf-487c-8c13-de2490aad98f/hd1eQ2hQGc0nQ66_VPAxTK3L1-BWabISsM4akODccA6Qu6RYWhMc8ANbFg/deep/0/image.png","https://img.carlzeng.com:3/i/2025/06/10/6847efd177486.png"],"content":"<img class=\"lozad\" data-src=\"https://www.evernote.com/shard/s122/sh/282e6c4a-96bf-487c-8c13-de2490aad98f/hd1eQ2hQGc0nQ66_VPAxTK3L1-BWabISsM4akODccA6Qu6RYWhMc8ANbFg/deep/0/image.png\">\n\n<p>临时小文件分享，远程文件传输，自建网盘</p>\n<p>开放文件临时分享以及大宝学校的学习资料：<a href=\"https://file.carlzeng.com:3/\">https://file.carlzeng.com:3</a></p>\n<blockquote>\n<p>2024.1.2 转化方案到Alist</p>\n<p>2024.1.30 Aria2离线下载到该Alist目录教程</p>\n</blockquote>\n<span id=\"more\"></span>\n\n<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.com:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n\n<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>临时文件分享，远程文件传输，网盘平替</p>\n<p>Docker搭建轻量个人文件分享服务-文件传输自由</p>\n<p>专注于文件分享的高颜值轻量小工具<br>A self-hosted file sharing platform that combines lightness and beauty, perfect for seamless and efficient file sharing.</p>\n<h1 id=\"预览\"><a href=\"#预览\" class=\"headerlink\" title=\"预览\"></a>预览</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://c.carlzeng.com:4443/fileupd\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.com:3/appsearch?q=网盘\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"实现方法-pingvin-share已弃用\"><a href=\"#实现方法-pingvin-share已弃用\" class=\"headerlink\" title=\"实现方法(pingvin-share已弃用)\"></a>实现方法(pingvin-share已弃用)</h1><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&#x27;3.8&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">pingvin-share:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">stonith404/pingvin-share</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">unless-stopped</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"number\">6000</span><span class=\"string\">:3000</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"number\">6001</span><span class=\"string\">:3333</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;./data:/opt/app/backend/data&quot;</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;./data/images:/opt/app/frontend/public/img&quot;</span></span><br><span class=\"line\">      <span class=\"comment\"># - &quot;./data/framework-0c7baedefba6b077.js:/opt/app/frontend/.next/static/chunks/framework-0c7baedefba6b077.js&quot; #个人用于添加matomo统计JS</span></span><br></pre></td></tr></table></figure>\n\n<p>上面完成端口映射，不知道怎么回事8080端口映射出来是无法访问的。(原来文档有误，看日志，应该是3333端口); 后来又发现只有这个6001也是能正常能使用的（符合日志内容）</p>\n<p>开放防火墙允许访问映射出来的端口。</p>\n<p>部分日志：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Attaching to pingvin-share_pingvin-share_1</span><br><span class=\"line\">pingvin-share_1  | </span><br><span class=\"line\">pingvin-share_1  | &gt; pingvin-share-backend@0.21.1 prod</span><br><span class=\"line\">pingvin-share_1  | &gt; prisma migrate deploy &amp;&amp; prisma db seed &amp;&amp; node dist/src/main</span><br><span class=\"line\">pingvin-share_1  | </span><br><span class=\"line\">pingvin-share_1  | Environment variables loaded from prisma/.env</span><br><span class=\"line\">pingvin-share_1  | Prisma schema loaded from prisma/schema.prisma</span><br><span class=\"line\">pingvin-share_1  | Datasource &quot;db&quot;: SQLite database &quot;pingvin-share.db&quot; at &quot;file:../data/pingvin-share.db&quot;</span><br><span class=\"line\">pingvin-share_1  | </span><br><span class=\"line\">pingvin-share_1  | 17 migrations found in prisma/migrations</span><br><span class=\"line\">pingvin-share_1  | </span><br><span class=\"line\">pingvin-share_1  | </span><br><span class=\"line\">pingvin-share_1  | No pending migrations to apply.</span><br><span class=\"line\">pingvin-share_1  |   ▲ Next.js 13.5.6</span><br><span class=\"line\">pingvin-share_1  |   - Local:        http://localhost:3333</span><br><span class=\"line\">pingvin-share_1  |   - Network:      http://0.0.0.0:3333</span><br><span class=\"line\">pingvin-share_1  | </span><br><span class=\"line\">pingvin-share_1  |  ✓ Ready in 3.9s</span><br><span class=\"line\">pingvin-share_1  | Environment variables loaded from prisma/.env</span><br><span class=\"line\">pingvin-share_1  | Running seed command `ts-node prisma/seed/config.seed.ts` ...</span><br><span class=\"line\">pingvin-share_1  | </span><br><span class=\"line\">pingvin-share_1  | 🌱  The seed command has been executed.</span><br><span class=\"line\">pingvin-share_1  | ┌─────────────────────────────────────────────────────────┐</span><br><span class=\"line\">pingvin-share_1  | │  Update available 5.0.0 -&gt; 5.7.1                        │</span><br><span class=\"line\">pingvin-share_1  | │  Run the following to update                            │</span><br><span class=\"line\">pingvin-share_1  | │    npm i --save-dev prisma@latest                       │</span><br><span class=\"line\">pingvin-share_1  | │    npm i @prisma/client@latest                          │</span><br><span class=\"line\">pingvin-share_1  | └─────────────────────────────────────────────────────────┘</span><br><span class=\"line\">pingvin-share_1  | [Nest] 34  - 12/23/2023, 3:03:35 AM     LOG [NestFactory] Starting Nest application...</span><br><span class=\"line\">pingvin-share_1  | [Nest] 34  - 12/23/2023, 3:03:35 AM     LOG [InstanceLoader] PrismaModule dependencies initialized +230ms</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"发布到NAS中\"><a href=\"#发布到NAS中\" class=\"headerlink\" title=\"发布到NAS中\"></a>发布到NAS中</h2><p>思路是：NAS中硬盘比较大，方便直接做分享，也不用太担心磁盘轻易被塞满的问题。</p>\n<p>ssh shell进群晖NAS，想要找到docker的类似于BT中的预览Docker Container文件目录的办法，一直找不到具体文件路径。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">root@DS918:/var/packages/Docker/var/docker/containers<span class=\"comment\"># ls</span></span>                                        </span><br><span class=\"line\">086decff0f0ff981d6458d792b6d4f2efe96a0a16cc339b0963c8e319c8917b5                                 </span><br><span class=\"line\">2ea60beefe6d9bab1a3910785a310bac528723055c7004f3d15eb55a07abfd70</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">root@DS918:/var/packages/Docker/var/docker/</span></span><br></pre></td></tr></table></figure>\n\n<p>暂时没办法，只能在BT中配置好，测试好以后，把映射的文件都挪到群晖NAS中去.</p>\n<ol>\n<li><p>先将映射出来的文件都复制到NAS的个人特定文件夹下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">scp -r /www/server/panel/data/compose/pingvin-share/data/ CarlNote@192.168.6.203:/volume2/KingchuxingSSD512G/docker/pingvin-share/data</span></span><br><span class=\"line\">CarlNote@192.168.6.203&#x27;s password: </span><br><span class=\"line\">pingvin-share.db                                        100%  140KB   9.2MB/s   00:00    </span><br><span class=\"line\">logo.png                                                100%  526KB  34.5MB/s   00:00    </span><br><span class=\"line\">favicon.ico                                             100%  675   857.4KB/s   00:00    </span><br><span class=\"line\">framework-0c7baedefba6b077.js                           100%  138KB  46.7MB/s   00:00 </span><br></pre></td></tr></table></figure>\n\n<p>这是方便得登录Debian的ssh，然后把文件夹（或文件，&#x2F;data目录）批量的传输给NAS的特定文件夹（&#x2F;volume2&#x2F;KingchuxingSSD512G&#x2F;docker&#x2F;pingvin-share&#x2F;）。下次可以更简便的把上级目录一次性传输过去(适用于首次迁移文件)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">从Debian中传输单个文件到NAS，更新情况，单个单个文件同步</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">scp docker-compose.yml root@192.168.6.203:/volume2/KingchuxingSSD512G/docker/pingvin-share/</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>同理，把NPM修改到NAS对应的这个6000端口（根据docker-compose中的配置）</p>\n</li>\n</ol>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p><a href=\"https://github.com/stonith404/pingvin-share\">pingvin-share</a></p>\n<p><a href=\"https://cloud.tencent.com/developer/article/2211677\">【好玩儿的Docker项目】Pingvin Share——一个专注于文件分享的高颜值轻量小工具！原创</a></p>\n<hr>\n<h1 id=\"Alist方案\"><a href=\"#Alist方案\" class=\"headerlink\" title=\"Alist方案\"></a>Alist方案</h1><p>alist, 替换file share方案</p>\n<p><a href=\"https://v3u.cn/a_id_277\">影片自由,丝滑流畅,Docker容器基于WebDav协议通过Alist挂载(百度网盘&#x2F;阿里云盘)Python3.10接入</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name=&quot;alist&quot;</span><br><span class=\"line\">-v /volume2/KingchuxingSSD512G/Download:/opt/alist/data</span><br><span class=\"line\">-v /volume2/KingchuxingSSD512G/Download:/myfiles/sdb1/aria2</span><br><span class=\"line\">#-v /mnt/sdb1/Tube:/myfiles/sdb1/Tube</span><br><span class=\"line\">#-v /mnt/sdb1/qbit:/myfiles/sdb1/qbit</span><br><span class=\"line\">-p 5244:5244</span><br><span class=\"line\">--restart=always</span><br><span class=\"line\">xhofe/alist:latest</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &quot;3&quot;</span><br><span class=\"line\">services:</span><br><span class=\"line\">    alist:</span><br><span class=\"line\">        container_name: alist</span><br><span class=\"line\">        volumes:</span><br><span class=\"line\">            - ./data:/opt/alist/data</span><br><span class=\"line\">            - /volume2/KingchuxingSSD512G/Download:/myfiles/sdb1/aria2</span><br><span class=\"line\">        ports:</span><br><span class=\"line\">            - 5244:5244</span><br><span class=\"line\">        restart: always</span><br><span class=\"line\">        image: xhofe/alist:latest</span><br></pre></td></tr></table></figure>\n\n<p>配置本地的storage</p>\n<p>Mount Path： &#x2F;aria2</p>\n<p>Root folder pah：&#x2F;myfiles&#x2F;sdb1&#x2F;aria2</p>\n<p>这样aria2下载的文件，都会放到aria2的文件夹下了。 下一步打算公开配置好的私人aria2的本地工具，然后aria2下载后，可以方便用户来下载（或webdav加载到本地）</p>\n<p>等待映射出来 &#x2F;assets&#x2F;index-legacy.2629d851.js</p>\n<h2 id=\"如何让Docker中的alist映射出更多目录\"><a href=\"#如何让Docker中的alist映射出更多目录\" class=\"headerlink\" title=\"如何让Docker中的alist映射出更多目录\"></a>如何让Docker中的alist映射出更多目录</h2><p>用于分享NAS中的更多文件夹</p>\n<ul>\n<li>&#x2F;volume2&#x2F;KingchuxingSSD512G&#x2F;SWITCH:&#x2F;home&#x2F;share1</li>\n<li>&#x2F;volume2&#x2F;KingchuxingSSD512G&#x2F;passwordDict:&#x2F;home&#x2F;share2</li>\n<li>&#x2F;volume2&#x2F;KingchuxingSSD512G&#x2F;dockerEmbyMedia:&#x2F;home&#x2F;share3</li>\n<li>&#x2F;volume2&#x2F;KingchuxingSSD512G&#x2F;docker&#x2F;zlib-searcher:&#x2F;home&#x2F;share4</li>\n<li>&#x2F;volume2&#x2F;KingchuxingSSD512G&#x2F;docker&#x2F;compose:&#x2F;home&#x2F;share5</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&quot;3&quot;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">    <span class=\"attr\">alist:</span></span><br><span class=\"line\">        <span class=\"attr\">container_name:</span> <span class=\"string\">alist</span></span><br><span class=\"line\">        <span class=\"attr\">volumes:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">./data:/opt/alist/data</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">/volume2/KingchuxingSSD512G/Download:/myfiles/sdb1/aria2</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">/volume2/KingchuxingSSD512G/SWITCH:/home/share1</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">/volume2/KingchuxingSSD512G/passwordDict:/home/share2</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">/volume2/KingchuxingSSD512G/dockerEmbyMedia:/home/share3</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">/volume2/KingchuxingSSD512G/docker/zlib-searcher:/home/share4</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">/volume2/KingchuxingSSD512G/docker/compose:/home/share5</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"number\">5244</span><span class=\"string\">:5244</span></span><br><span class=\"line\">        <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">xhofe/alist:latest</span></span><br></pre></td></tr></table></figure>\n\n<p>步骤：</p>\n<p>原来是需要docker-compose down, 然后重新docker-compose up 才能映射成功(docker-compose restart是不行的)<br>    1. 先到 alist的管理界面 添加这些本机存储<br>    2. docker-compose up -d<br>    3. docker exec -it alist &#x2F;bin&#x2F;bash<br>        进去新建这些对应的share文件夹<br>    4. 返回\talist的管理界面 编辑&amp;保存 这些本机存储<br>        状态变为 work<br>        然后在alist的guest页面点击这些新建的存储是没有内容的（但至少不报错了）<br>    5. docker-compose down &amp;&amp; docker-compose up -d</p>\n<h2 id=\"远程新增或修改文件分享\"><a href=\"#远程新增或修改文件分享\" class=\"headerlink\" title=\"远程新增或修改文件分享\"></a>远程新增或修改文件分享</h2><ol>\n<li><p>打开frpc</p>\n<ol>\n<li>命令如下： frp %  <em>frpc -c frpc.ini</em></li>\n<li>具体请参见本站文章：<a href=\"https://query.carlzeng.com:3/appsearch?q=FRP%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%9C%8D%E5%8A%A1\">Docker搭建FRP内网穿透服务(花生壳、Ngrok平替)</a></li>\n</ol>\n</li>\n<li><p>用ssh连接NAS的终端</p>\n<ol>\n<li>命令如下：ssh 127.0.0.1 -p 22223</li>\n</ol>\n</li>\n<li><p>切换到相应目录：&#x2F;volume2&#x2F;KingchuxingSSD512G&#x2F;docker&#x2F;compose&#x2F;alist</p>\n</li>\n<li><p>编辑docker-compose.yml文件，将相应的目录映射上（具体入上个章节所示）</p>\n</li>\n<li><p>docker-compose down</p>\n</li>\n<li><p>docker-compose up -d</p>\n</li>\n<li><p>登录并设置 <a href=\"https://file.carlzeng.com:3/@manage/storages\">Alist 的管理后台</a> 映射相应目录</p>\n</li>\n<li><p>效果：<a href=\"https://file.carlzeng.com:3/%E5%A4%A7%E5%AE%9D%E5%AD%A6%E6%A0%A1%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99\">大宝学校学习资料</a></p>\n</li>\n</ol>\n<h2 id=\"设置页面加载后自动切换到图片模式\"><a href=\"#设置页面加载后自动切换到图片模式\" class=\"headerlink\" title=\"设置页面加载后自动切换到图片模式\"></a>设置页面加载后自动切换到图片模式</h2><p><img data-src=\"https://img.carlzeng.com:3/i/2025/06/10/6847efd177486.png\" alt=\"image-20250610164151079\"></p>\n<p>自定义内容</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>((<span class=\"string\">&quot;document.getElementById(&#x27;hope-menu-cl-32-trigger&#x27;).click(); document.getElementById(&#x27;hope-menu-cl-32-item-2&#x27;).click()&quot;</span>), <span class=\"number\">2000</span>)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>20250610: 从原来的2秒,变成4秒. 为了远程用户可正常加载页面</p>\n<p>等待客户进一步反馈</p>\n<h1 id=\"Aria2离线下载到该Alist目录教程\"><a href=\"#Aria2离线下载到该Alist目录教程\" class=\"headerlink\" title=\"Aria2离线下载到该Alist目录教程\"></a>Aria2离线下载到该Alist目录教程</h1><p>作为代理（远程+离线+无人值守）下载网盘大文件的方式，大致步骤如下：</p>\n<ol>\n<li>打开Aria2的终端UI：<a href=\"https://aria2.carlzeng.com:4443/#!/downloading\">AriaNg</a></li>\n<li>点击 “新建”</li>\n<li>粘贴网盘页面中，通过插件获取的某度或某克网盘链接<ol>\n<li>选择需要下载的大文件</li>\n<li>点击 “下载助手” 》 “API下载”</li>\n<li>复制API下载弹窗中的链接地址</li>\n</ol>\n</li>\n<li>点击 “立即下载”</li>\n<li>下载可实时查看下载百分比，待下载完成</li>\n<li>浏览下载所得的文件，在Alist的目录下：<a href=\"https://file.carlzeng.com:3/Aria2%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%E5%A4%B9\">Aria2下载文件夹</a></li>\n<li>选中文件点击下载，即可下载到本地磁盘（此时下载速度在3MB&#x2F;s左右）</li>\n</ol>\n<p>具体过程详见: <a href=\"https://www.carlzeng.com/202308262104.html#%E8%BF%9C%E7%A8%8B%E6%8F%90%E4%BA%A4%E4%B8%8B%E8%BD%BD%E4%BB%BB%E5%8A%A1%E8%87%B3NAS\">云盘转NAS，云盘转化为本地磁盘，跨平台跨设备同步-CarlZeng</a></p>\n<h1 id=\"其他方案\"><a href=\"#其他方案\" class=\"headerlink\" title=\"其他方案\"></a>其他方案</h1><p>piwigo docker</p>\n<p><a href=\"https://docs.linuxserver.io/images/docker-piwigo/?h=piwigo\">https://docs.linuxserver.io/images/docker-piwigo/?h=piwigo</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=kjCF3FNbTDw\">https://www.youtube.com/watch?v=kjCF3FNbTDw</a></p>\n<p>Demo: <a href=\"https://demo2.piwigo.com/index?/categories\">https://demo2.piwigo.com/index?/categories</a></p>\n<p>filebrowser</p>\n<p><a href=\"https://hub.docker.com/r/filebrowser/filebrowser\">https://hub.docker.com/r/filebrowser/filebrowser</a></p>\n<p>docker filebrowser read only access</p>\n","more":"<div> \n<button onclick=\"synthesizeSpeech()\">朗读全文</button>\n</div>\n<audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio>      \n<script>\n  function synthesizeSpeech() { \n    var inputText = document.getElementsByClassName('post-block')[0].innerText;\n    var voice = \"ZH\";\n    var url = 'https://tts.carlzeng.com:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice;\n    var audioPlayer = document.getElementById('audioPlayer');          \n    audioPlayer.src = url;\n    audioPlayer.load();\n    audioPlayer.play();\n  }\n</script>\n\n<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>临时文件分享，远程文件传输，网盘平替</p>\n<p>Docker搭建轻量个人文件分享服务-文件传输自由</p>\n<p>专注于文件分享的高颜值轻量小工具<br>A self-hosted file sharing platform that combines lightness and beauty, perfect for seamless and efficient file sharing.</p>\n<h1 id=\"预览\"><a href=\"#预览\" class=\"headerlink\" title=\"预览\"></a>预览</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://c.carlzeng.com:4443/fileupd\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.com:3/appsearch?q=网盘\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"实现方法-pingvin-share已弃用\"><a href=\"#实现方法-pingvin-share已弃用\" class=\"headerlink\" title=\"实现方法(pingvin-share已弃用)\"></a>实现方法(pingvin-share已弃用)</h1><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&#x27;3.8&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">pingvin-share:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">stonith404/pingvin-share</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">unless-stopped</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"number\">6000</span><span class=\"string\">:3000</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"number\">6001</span><span class=\"string\">:3333</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;./data:/opt/app/backend/data&quot;</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;./data/images:/opt/app/frontend/public/img&quot;</span></span><br><span class=\"line\">      <span class=\"comment\"># - &quot;./data/framework-0c7baedefba6b077.js:/opt/app/frontend/.next/static/chunks/framework-0c7baedefba6b077.js&quot; #个人用于添加matomo统计JS</span></span><br></pre></td></tr></table></figure>\n\n<p>上面完成端口映射，不知道怎么回事8080端口映射出来是无法访问的。(原来文档有误，看日志，应该是3333端口); 后来又发现只有这个6001也是能正常能使用的（符合日志内容）</p>\n<p>开放防火墙允许访问映射出来的端口。</p>\n<p>部分日志：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Attaching to pingvin-share_pingvin-share_1</span><br><span class=\"line\">pingvin-share_1  | </span><br><span class=\"line\">pingvin-share_1  | &gt; pingvin-share-backend@0.21.1 prod</span><br><span class=\"line\">pingvin-share_1  | &gt; prisma migrate deploy &amp;&amp; prisma db seed &amp;&amp; node dist/src/main</span><br><span class=\"line\">pingvin-share_1  | </span><br><span class=\"line\">pingvin-share_1  | Environment variables loaded from prisma/.env</span><br><span class=\"line\">pingvin-share_1  | Prisma schema loaded from prisma/schema.prisma</span><br><span class=\"line\">pingvin-share_1  | Datasource &quot;db&quot;: SQLite database &quot;pingvin-share.db&quot; at &quot;file:../data/pingvin-share.db&quot;</span><br><span class=\"line\">pingvin-share_1  | </span><br><span class=\"line\">pingvin-share_1  | 17 migrations found in prisma/migrations</span><br><span class=\"line\">pingvin-share_1  | </span><br><span class=\"line\">pingvin-share_1  | </span><br><span class=\"line\">pingvin-share_1  | No pending migrations to apply.</span><br><span class=\"line\">pingvin-share_1  |   ▲ Next.js 13.5.6</span><br><span class=\"line\">pingvin-share_1  |   - Local:        http://localhost:3333</span><br><span class=\"line\">pingvin-share_1  |   - Network:      http://0.0.0.0:3333</span><br><span class=\"line\">pingvin-share_1  | </span><br><span class=\"line\">pingvin-share_1  |  ✓ Ready in 3.9s</span><br><span class=\"line\">pingvin-share_1  | Environment variables loaded from prisma/.env</span><br><span class=\"line\">pingvin-share_1  | Running seed command `ts-node prisma/seed/config.seed.ts` ...</span><br><span class=\"line\">pingvin-share_1  | </span><br><span class=\"line\">pingvin-share_1  | 🌱  The seed command has been executed.</span><br><span class=\"line\">pingvin-share_1  | ┌─────────────────────────────────────────────────────────┐</span><br><span class=\"line\">pingvin-share_1  | │  Update available 5.0.0 -&gt; 5.7.1                        │</span><br><span class=\"line\">pingvin-share_1  | │  Run the following to update                            │</span><br><span class=\"line\">pingvin-share_1  | │    npm i --save-dev prisma@latest                       │</span><br><span class=\"line\">pingvin-share_1  | │    npm i @prisma/client@latest                          │</span><br><span class=\"line\">pingvin-share_1  | └─────────────────────────────────────────────────────────┘</span><br><span class=\"line\">pingvin-share_1  | [Nest] 34  - 12/23/2023, 3:03:35 AM     LOG [NestFactory] Starting Nest application...</span><br><span class=\"line\">pingvin-share_1  | [Nest] 34  - 12/23/2023, 3:03:35 AM     LOG [InstanceLoader] PrismaModule dependencies initialized +230ms</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"发布到NAS中\"><a href=\"#发布到NAS中\" class=\"headerlink\" title=\"发布到NAS中\"></a>发布到NAS中</h2><p>思路是：NAS中硬盘比较大，方便直接做分享，也不用太担心磁盘轻易被塞满的问题。</p>\n<p>ssh shell进群晖NAS，想要找到docker的类似于BT中的预览Docker Container文件目录的办法，一直找不到具体文件路径。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">root@DS918:/var/packages/Docker/var/docker/containers<span class=\"comment\"># ls</span></span>                                        </span><br><span class=\"line\">086decff0f0ff981d6458d792b6d4f2efe96a0a16cc339b0963c8e319c8917b5                                 </span><br><span class=\"line\">2ea60beefe6d9bab1a3910785a310bac528723055c7004f3d15eb55a07abfd70</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">root@DS918:/var/packages/Docker/var/docker/</span></span><br></pre></td></tr></table></figure>\n\n<p>暂时没办法，只能在BT中配置好，测试好以后，把映射的文件都挪到群晖NAS中去.</p>\n<ol>\n<li><p>先将映射出来的文件都复制到NAS的个人特定文件夹下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">scp -r /www/server/panel/data/compose/pingvin-share/data/ CarlNote@192.168.6.203:/volume2/KingchuxingSSD512G/docker/pingvin-share/data</span></span><br><span class=\"line\">CarlNote@192.168.6.203&#x27;s password: </span><br><span class=\"line\">pingvin-share.db                                        100%  140KB   9.2MB/s   00:00    </span><br><span class=\"line\">logo.png                                                100%  526KB  34.5MB/s   00:00    </span><br><span class=\"line\">favicon.ico                                             100%  675   857.4KB/s   00:00    </span><br><span class=\"line\">framework-0c7baedefba6b077.js                           100%  138KB  46.7MB/s   00:00 </span><br></pre></td></tr></table></figure>\n\n<p>这是方便得登录Debian的ssh，然后把文件夹（或文件，&#x2F;data目录）批量的传输给NAS的特定文件夹（&#x2F;volume2&#x2F;KingchuxingSSD512G&#x2F;docker&#x2F;pingvin-share&#x2F;）。下次可以更简便的把上级目录一次性传输过去(适用于首次迁移文件)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">从Debian中传输单个文件到NAS，更新情况，单个单个文件同步</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">scp docker-compose.yml root@192.168.6.203:/volume2/KingchuxingSSD512G/docker/pingvin-share/</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>同理，把NPM修改到NAS对应的这个6000端口（根据docker-compose中的配置）</p>\n</li>\n</ol>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p><a href=\"https://github.com/stonith404/pingvin-share\">pingvin-share</a></p>\n<p><a href=\"https://cloud.tencent.com/developer/article/2211677\">【好玩儿的Docker项目】Pingvin Share——一个专注于文件分享的高颜值轻量小工具！原创</a></p>\n<hr>\n<h1 id=\"Alist方案\"><a href=\"#Alist方案\" class=\"headerlink\" title=\"Alist方案\"></a>Alist方案</h1><p>alist, 替换file share方案</p>\n<p><a href=\"https://v3u.cn/a_id_277\">影片自由,丝滑流畅,Docker容器基于WebDav协议通过Alist挂载(百度网盘&#x2F;阿里云盘)Python3.10接入</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run -d --name=&quot;alist&quot;</span><br><span class=\"line\">-v /volume2/KingchuxingSSD512G/Download:/opt/alist/data</span><br><span class=\"line\">-v /volume2/KingchuxingSSD512G/Download:/myfiles/sdb1/aria2</span><br><span class=\"line\">#-v /mnt/sdb1/Tube:/myfiles/sdb1/Tube</span><br><span class=\"line\">#-v /mnt/sdb1/qbit:/myfiles/sdb1/qbit</span><br><span class=\"line\">-p 5244:5244</span><br><span class=\"line\">--restart=always</span><br><span class=\"line\">xhofe/alist:latest</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">version: &quot;3&quot;</span><br><span class=\"line\">services:</span><br><span class=\"line\">    alist:</span><br><span class=\"line\">        container_name: alist</span><br><span class=\"line\">        volumes:</span><br><span class=\"line\">            - ./data:/opt/alist/data</span><br><span class=\"line\">            - /volume2/KingchuxingSSD512G/Download:/myfiles/sdb1/aria2</span><br><span class=\"line\">        ports:</span><br><span class=\"line\">            - 5244:5244</span><br><span class=\"line\">        restart: always</span><br><span class=\"line\">        image: xhofe/alist:latest</span><br></pre></td></tr></table></figure>\n\n<p>配置本地的storage</p>\n<p>Mount Path： &#x2F;aria2</p>\n<p>Root folder pah：&#x2F;myfiles&#x2F;sdb1&#x2F;aria2</p>\n<p>这样aria2下载的文件，都会放到aria2的文件夹下了。 下一步打算公开配置好的私人aria2的本地工具，然后aria2下载后，可以方便用户来下载（或webdav加载到本地）</p>\n<p>等待映射出来 &#x2F;assets&#x2F;index-legacy.2629d851.js</p>\n<h2 id=\"如何让Docker中的alist映射出更多目录\"><a href=\"#如何让Docker中的alist映射出更多目录\" class=\"headerlink\" title=\"如何让Docker中的alist映射出更多目录\"></a>如何让Docker中的alist映射出更多目录</h2><p>用于分享NAS中的更多文件夹</p>\n<ul>\n<li>&#x2F;volume2&#x2F;KingchuxingSSD512G&#x2F;SWITCH:&#x2F;home&#x2F;share1</li>\n<li>&#x2F;volume2&#x2F;KingchuxingSSD512G&#x2F;passwordDict:&#x2F;home&#x2F;share2</li>\n<li>&#x2F;volume2&#x2F;KingchuxingSSD512G&#x2F;dockerEmbyMedia:&#x2F;home&#x2F;share3</li>\n<li>&#x2F;volume2&#x2F;KingchuxingSSD512G&#x2F;docker&#x2F;zlib-searcher:&#x2F;home&#x2F;share4</li>\n<li>&#x2F;volume2&#x2F;KingchuxingSSD512G&#x2F;docker&#x2F;compose:&#x2F;home&#x2F;share5</li>\n</ul>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&quot;3&quot;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">    <span class=\"attr\">alist:</span></span><br><span class=\"line\">        <span class=\"attr\">container_name:</span> <span class=\"string\">alist</span></span><br><span class=\"line\">        <span class=\"attr\">volumes:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">./data:/opt/alist/data</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">/volume2/KingchuxingSSD512G/Download:/myfiles/sdb1/aria2</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">/volume2/KingchuxingSSD512G/SWITCH:/home/share1</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">/volume2/KingchuxingSSD512G/passwordDict:/home/share2</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">/volume2/KingchuxingSSD512G/dockerEmbyMedia:/home/share3</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">/volume2/KingchuxingSSD512G/docker/zlib-searcher:/home/share4</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">/volume2/KingchuxingSSD512G/docker/compose:/home/share5</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"number\">5244</span><span class=\"string\">:5244</span></span><br><span class=\"line\">        <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">xhofe/alist:latest</span></span><br></pre></td></tr></table></figure>\n\n<p>步骤：</p>\n<p>原来是需要docker-compose down, 然后重新docker-compose up 才能映射成功(docker-compose restart是不行的)<br>    1. 先到 alist的管理界面 添加这些本机存储<br>    2. docker-compose up -d<br>    3. docker exec -it alist &#x2F;bin&#x2F;bash<br>        进去新建这些对应的share文件夹<br>    4. 返回\talist的管理界面 编辑&amp;保存 这些本机存储<br>        状态变为 work<br>        然后在alist的guest页面点击这些新建的存储是没有内容的（但至少不报错了）<br>    5. docker-compose down &amp;&amp; docker-compose up -d</p>\n<h2 id=\"远程新增或修改文件分享\"><a href=\"#远程新增或修改文件分享\" class=\"headerlink\" title=\"远程新增或修改文件分享\"></a>远程新增或修改文件分享</h2><ol>\n<li><p>打开frpc</p>\n<ol>\n<li>命令如下： frp %  <em>frpc -c frpc.ini</em></li>\n<li>具体请参见本站文章：<a href=\"https://query.carlzeng.com:3/appsearch?q=FRP%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%9C%8D%E5%8A%A1\">Docker搭建FRP内网穿透服务(花生壳、Ngrok平替)</a></li>\n</ol>\n</li>\n<li><p>用ssh连接NAS的终端</p>\n<ol>\n<li>命令如下：ssh 127.0.0.1 -p 22223</li>\n</ol>\n</li>\n<li><p>切换到相应目录：&#x2F;volume2&#x2F;KingchuxingSSD512G&#x2F;docker&#x2F;compose&#x2F;alist</p>\n</li>\n<li><p>编辑docker-compose.yml文件，将相应的目录映射上（具体入上个章节所示）</p>\n</li>\n<li><p>docker-compose down</p>\n</li>\n<li><p>docker-compose up -d</p>\n</li>\n<li><p>登录并设置 <a href=\"https://file.carlzeng.com:3/@manage/storages\">Alist 的管理后台</a> 映射相应目录</p>\n</li>\n<li><p>效果：<a href=\"https://file.carlzeng.com:3/%E5%A4%A7%E5%AE%9D%E5%AD%A6%E6%A0%A1%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99\">大宝学校学习资料</a></p>\n</li>\n</ol>\n<h2 id=\"设置页面加载后自动切换到图片模式\"><a href=\"#设置页面加载后自动切换到图片模式\" class=\"headerlink\" title=\"设置页面加载后自动切换到图片模式\"></a>设置页面加载后自动切换到图片模式</h2><p><img data-src=\"https://img.carlzeng.com:3/i/2025/06/10/6847efd177486.png\" alt=\"image-20250610164151079\"></p>\n<p>自定义内容</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"built_in\">setTimeout</span>((<span class=\"string\">&quot;document.getElementById(&#x27;hope-menu-cl-32-trigger&#x27;).click(); document.getElementById(&#x27;hope-menu-cl-32-item-2&#x27;).click()&quot;</span>), <span class=\"number\">2000</span>)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>20250610: 从原来的2秒,变成4秒. 为了远程用户可正常加载页面</p>\n<p>等待客户进一步反馈</p>\n<h1 id=\"Aria2离线下载到该Alist目录教程\"><a href=\"#Aria2离线下载到该Alist目录教程\" class=\"headerlink\" title=\"Aria2离线下载到该Alist目录教程\"></a>Aria2离线下载到该Alist目录教程</h1><p>作为代理（远程+离线+无人值守）下载网盘大文件的方式，大致步骤如下：</p>\n<ol>\n<li>打开Aria2的终端UI：<a href=\"https://aria2.carlzeng.com:4443/#!/downloading\">AriaNg</a></li>\n<li>点击 “新建”</li>\n<li>粘贴网盘页面中，通过插件获取的某度或某克网盘链接<ol>\n<li>选择需要下载的大文件</li>\n<li>点击 “下载助手” 》 “API下载”</li>\n<li>复制API下载弹窗中的链接地址</li>\n</ol>\n</li>\n<li>点击 “立即下载”</li>\n<li>下载可实时查看下载百分比，待下载完成</li>\n<li>浏览下载所得的文件，在Alist的目录下：<a href=\"https://file.carlzeng.com:3/Aria2%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6%E5%A4%B9\">Aria2下载文件夹</a></li>\n<li>选中文件点击下载，即可下载到本地磁盘（此时下载速度在3MB&#x2F;s左右）</li>\n</ol>\n<p>具体过程详见: <a href=\"https://www.carlzeng.com/202308262104.html#%E8%BF%9C%E7%A8%8B%E6%8F%90%E4%BA%A4%E4%B8%8B%E8%BD%BD%E4%BB%BB%E5%8A%A1%E8%87%B3NAS\">云盘转NAS，云盘转化为本地磁盘，跨平台跨设备同步-CarlZeng</a></p>\n<h1 id=\"其他方案\"><a href=\"#其他方案\" class=\"headerlink\" title=\"其他方案\"></a>其他方案</h1><p>piwigo docker</p>\n<p><a href=\"https://docs.linuxserver.io/images/docker-piwigo/?h=piwigo\">https://docs.linuxserver.io/images/docker-piwigo/?h=piwigo</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=kjCF3FNbTDw\">https://www.youtube.com/watch?v=kjCF3FNbTDw</a></p>\n<p>Demo: <a href=\"https://demo2.piwigo.com/index?/categories\">https://demo2.piwigo.com/index?/categories</a></p>\n<p>filebrowser</p>\n<p><a href=\"https://hub.docker.com/r/filebrowser/filebrowser\">https://hub.docker.com/r/filebrowser/filebrowser</a></p>\n<p>docker filebrowser read only access</p>","categories":[{"name":"Docker","path":"api/categories/Docker.json"}],"tags":[{"name":"Docker","path":"api/tags/Docker.json"},{"name":"NAS","path":"api/tags/NAS.json"},{"name":"文件分享","path":"api/tags/文件分享.json"},{"name":"下载","path":"api/tags/下载.json"},{"name":"分享","path":"api/tags/分享.json"},{"name":"网盘","path":"api/tags/网盘.json"},{"name":"Pingvin Share","path":"api/tags/Pingvin Share.json"},{"name":"Alist","path":"api/tags/Alist.json"}]}