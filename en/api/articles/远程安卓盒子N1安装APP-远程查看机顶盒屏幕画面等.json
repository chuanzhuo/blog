{"title":"Remote Installation of IPTV App on Android TV Box N1 - Remote Viewing of Set-Top Box Screen, and More","slug":"远程安卓盒子N1安装APP-远程查看机顶盒屏幕画面等","date":"2023-12-12T04:25:00.008Z","updated":"2023-12-30T14:00:11.816Z","comments":true,"path":"api/articles/远程安卓盒子N1安装APP-远程查看机顶盒屏幕画面等.json","excerpt":" [Figure] Practical test of remote assistance for an Android TV box, remote control of a set-top box (remote control of an Android TV), remote assistance in installing apps on a family member’s set-top box (including deletion, app management, etc.), and remote operation of the N1 TV box.","covers":["https://www.evernote.com/shard/s122/sh/730fc3eb-98b3-4cde-ab03-ff536d849762/cm5hCYYFRDdasMsamfd90jrI6Z1o_by7-z3SHX2OxujZN5bs1tYHmYExTw/deep/0/image.png","https://www.evernote.com/shard/s122/sh/3e5002dc-29d3-4798-9afe-35c866fd1f44/dD8Wf6kSoMKVd4xGx3Dosd6cvB0qdU1-rUJaG3s9HNW0UI6r310tqvkE8A/deep/0/image.png"],"content":"<p><img data-src=\"https://www.evernote.com/shard/s122/sh/730fc3eb-98b3-4cde-ab03-ff536d849762/cm5hCYYFRDdasMsamfd90jrI6Z1o_by7-z3SHX2OxujZN5bs1tYHmYExTw/deep/0/image.png\" alt=\"N1RemoteControl\"></p>\n<p>Practical test of remote assistance for an Android TV box, remote control of a set-top box (remote control of an Android TV), remote assistance in installing apps on a family member’s set-top box (including deletion, app management, etc.), and remote operation of the N1 TV box.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"What’s-the-Use\"><a href=\"#What’s-the-Use\" class=\"headerlink\" title=\"What’s the Use\"></a>What’s the Use</h1><p>Remote control of a set-top box, installing IPTV apps on smart Android set-top boxes (or Android TVs) for the elderly.</p>\n<p>Remote installation of apps on a family member’s set-top box, remote operation of the N1 TV box.</p>\n<p>Acts as a remote controller, realizing most remote control functions.</p>\n<p>Remote assistance for operating Android TV boxes.</p>\n<h1 id=\"How-to-Use\"><a href=\"#How-to-Use\" class=\"headerlink\" title=\"How to Use\"></a>How to Use</h1><h2 id=\"Steps\"><a href=\"#Steps\" class=\"headerlink\" title=\"Steps\"></a>Steps</h2><p>(Provided you have already configured remote access to your router, I have set up a remote penetration connection using frps and frpc, and then used NPM to reverse proxy the router’s web control page, this series of operations makes subsequent implementations much smoother)</p>\n<ol>\n<li><p>Activate the N1 Android TV box, turn it on, or use the set-top box remote control</p>\n<ol>\n<li>Find the IP address of the Android box (or Android TV) in the router</li>\n<li>Method to check if the device is activated, ping the box’s IP. If the box’s IP is pingable, skip this step.</li>\n</ol>\n</li>\n<li><p>Set up the remote FRP server (server-side)</p>\n<ol>\n<li>See the specific article: <a href=\"http://www.carlzeng.top/202312031926.html?highlight=docker%E6%90%AD%E5%BB%BAfrp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%9C%8D%E5%8A%A1\">Setting up FRP Intranet Penetration Service with Docker</a>. Skip this step if you already have a usable frps server.</li>\n</ol>\n</li>\n<li><p>Set up the frpc client on the router where the controlled-end set-top box is located</p>\n<ol>\n<li>See the specific article: <a href=\"http://www.carlzeng.top/202312031926.html?highlight=docker%E6%90%AD%E5%BB%BAfrp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%9C%8D%E5%8A%A1#%E8%AE%BE%E7%BD%AE%E5%BA%94%E7%94%A84\">Setting up FRP Intranet Penetration Service&gt;Setting Application 4</a></li>\n</ol>\n</li>\n<li><p>ADB connection command: <code>adb connect 192.168.6.216:5555</code></p>\n<ol>\n<li>To check if it’s connected: <code>adb devices</code>, see if the device IP and port are listed</li>\n</ol>\n</li>\n<li><p>[Optional] ADB installation command: <code>adb -s 192.168.6.216:5555 install ***.apk</code></p>\n<blockquote>\n<p>Example installation of Perfect Player (Note: Use double quotes if the apk file and path are complex)</p>\n<p><code>adb -s 192.168.6.216:5555 install &quot;~/Downloads/com.niklabs.pp_1.6.0.1-60105_minAPI16(arm64-v8a)(nodpi)_apkmirror.com.apk&quot;</code></p>\n</blockquote>\n</li>\n<li><p>Remote viewing of the screen and control: <code>scrcpy --tcpip=192.168.6.216:5555</code></p>\n<ol>\n<li>See the specific article: <a href=\"http://localhost:4000/202309190928.html?highlight=%EF%BF%BDAE%EF%BF%BD%E5%8D%93%E6%89%8B%E6%9C%BA%E6%8A%95%E5%B1%8F%E8%87%B3%E7%94%B5%E8%84%91,+%E7%94%B5%E8%84%91%E6%98%BE%E7%A4%BA%E5%92%8C%E6%8E%A7%E5%88%B6%EF%BF%BDAE%EF%BF%BD%E5%8D%93%E6%89%8B%E6%9C%BA,+%E6%89%8B%E6%9C%BA%E7%94%B5%E8%84%91%E5%90%8C%E5%B1%8F%E8%BD%AF%E4%BB%B6scrcpy%5D\">Screen Mirroring from Android Phone to Computer, Controlling and Displaying Android Phone on Computer, Scrcpy Software for Phone and Computer Synchronization</a></li>\n<li>The goal of control is to operate the set-top box or TV with a mouse and keyboard. Click to open the app, click settings, and use the keyboard to input IPTV live sources.</li>\n<li>[Optional] Any other actions that can be performed locally with a remote control</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"Related-Content\"><a href=\"#Related-Content\" class=\"headerlink\" title=\"Related Content\"></a>Related Content</h1><p>If you are interested in related topics such as <a href=\"https://www.carlzeng.top/search?q=安卓\">Android</a> <a href=\"https://www.carlzeng.top/search?q=盒子\">TV boxes</a>, the following content may be helpful:</p>\n<iframe src=\"https://www.carlzeng.top/search?q=安卓\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"Implementation-Method\"><a href=\"#Implementation-Method\" class=\"headerlink\" title=\"Implementation Method\"></a>Implementation Method</h1><h2 id=\"Real-Problems\"><a href=\"#Real-Problems\" class=\"headerlink\" title=\"Real Problems\"></a>Real Problems</h2><ol>\n<li>To resolve the issue of connecting the set-top box to a secondary router on the second floor, while the smartphone for remote assistance is connected to the primary router on the first floor.</li>\n<li>How to determine the open ports for remote control?<ol>\n<li>This needs to be open to scan the set-top box properly.</li>\n</ol>\n</li>\n</ol>\n<p>This issue cannot be resolved. The approach needs to be reconsidered (the strategy of not using remote control).</p>\n<p>The principle is similar to remote controlling a smartphone, but it’s a bit more challenging. Too many security settings present obstacles to effective remote assistance for the elderly at home.</p>\n<h2 id=\"Steps-Methods-Complex-Process\"><a href=\"#Steps-Methods-Complex-Process\" class=\"headerlink\" title=\"Steps&#x2F;Methods&#x2F;Complex Process\"></a>Steps&#x2F;Methods&#x2F;Complex Process</h2><p>[Optional Step] Use QtScrcpy to activate the device:</p>\n<ol>\n<li><p>In QtScrcpy, set the wireless 192.168.6.216, port 5555, click “wireless connection”</p>\n<ol>\n<li>In the left-hand list, such as: Phone-192.168.6.216:5555; there should be an ADB run command; what exactly is it?<ol>\n<li><code>adb run AdbProcessImpl::out:connected to 192.168.6.216:5555</code></li>\n<li>It’s actually equivalent to the adb command: <code>adb connect 192.168.6.216:5555</code></li>\n</ol>\n</li>\n<li>Click: Install sndcpy</li>\n<li>Click: Start Service</li>\n</ol>\n</li>\n<li><p>Enter</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scrcpy -e</span><br></pre></td></tr></table></figure>\n\n<p>in Terminal</p>\n<ol>\n<li>The newly added device will be the device connected in the previous step (it will display the IP:port)</li>\n</ol>\n</li>\n</ol>\n<p>Indeed, the Android N1 set-top box can also be connected using <code>scrcpy -e</code>, enabling remote control. This allows remote configuration of apps on the N1 set-top box, preventing the elderly from struggling with the remote control (complex operations, such as configuring DIY sources using the virtual keyboard on the remote control).</p>\n<h2 id=\"Shortcomings-Flaws\"><a href=\"#Shortcomings-Flaws\" class=\"headerlink\" title=\"Shortcomings&#x2F;Flaws\"></a>Shortcomings&#x2F;Flaws</h2><ol>\n<li><p>Sound does not transmit, but it doesn’t matter as it’s not intended for remote TV watching. Moreover, this N1 serves as a service that allows remote connection to watch IPTV and movies.</p>\n<ol>\n<li><p>The issue was due to the outdated version of the Android system on the box.</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[server]</span> INFO: Device: <span class=\"section\">[Phicomm]</span> Phicomm p230 (Android 7.1.2)                                                       </span><br><span class=\"line\"><span class=\"section\">[server]</span> WARN: Audio disabled: it is not supported before Android 11                                                </span><br><span class=\"line\">INFO: Renderer: metal                                                                                               </span><br><span class=\"line\">WARN: Demuxer &#x27;audio&#x27;: stream explicitly disabled by the device   </span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>The menu button on the box remote control cannot be used; only left-click is possible.</p>\n<ol>\n<li>This is not an issue; it’s sufficient. It only means the menu cannot be operated remotely, nothing more.</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"Next-Step-FRP-Mapping-Penetration\"><a href=\"#Next-Step-FRP-Mapping-Penetration\" class=\"headerlink\" title=\"Next Step: FRP Mapping&#x2F;Penetration\"></a>Next Step: FRP Mapping&#x2F;Penetration</h2><p>The next step is the prerequisite of FRP mapping out the 5555 port and configuring the frpc client; it’s also a form of penetration.</p>\n<p>Faced with the inability to locate the IP of the set-top box on the Padavan, as it is not in the WIFI network (connected via a wired connection), how to find the IP of the N1 box?</p>\n<p>Through the Padavan UI query: Network Information &gt; Traffic Monitoring <a href=\"https://k2pzl.carlzeng.top:4443/Main_BWMon.asp\">https://k2pzl.carlzeng.top:4443/Main_BWMon.asp</a></p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Found the FRPS server at 192.168.6.116:6006, and frpc was port-mapped to 192.168.123.189:5555</span><br></pre></td></tr></table></figure>\n\n<p>By binding the set-top box’s IP to the MAC address in the DHCP on the router, the box’s IP won’t change, and frpc will always find the correct box IP when running (accurate positioning).</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">This way, `scrcpy -e` will display two clients!</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Next-Step-Remote-Control-with-Scrcpy\"><a href=\"#Next-Step-Remote-Control-with-Scrcpy\" class=\"headerlink\" title=\"Next Step: Remote Control with Scrcpy\"></a>Next Step: Remote Control with Scrcpy</h2><p>How to install an app on the Android N1 set-top box using ADB commands</p>\n<p>In theory, the ADB command can easily accomplish the goal of installing an app (I believe I wrote a method before: <a href=\"http://www.carlzeng.top/202304131802.html?highlight=adb\">The Only Available Android Emulator on Apple M1</a>)</p>\n<ol>\n<li>Place the app to be installed in a local directory on your computer (e.g., ~&#x2F;Downloads)</li>\n<li>Use the command <code>adb install /*.apk</code></li>\n<li>Specific process:</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- adb devices                                                                               </span><br><span class=\"line\">List of devices attached                                                                                            </span><br><span class=\"line\">192.168.6.116:6006      offline</span><br><span class=\"line\">192.168.6.216:5555      device  </span><br></pre></td></tr></table></figure>\n\n<p>At this point, it’s possible to manually select one of the devices from the list, as the next commands need a specific device to interact with.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- adb -s 7f1c864e shell</span><br></pre></td></tr></table></figure>\n\n<p>After executing the command, we can obtain shell execution permission for the Android device.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- adb -s 192.168.6.216:5555 install /Users/carlzeng/Downloads/Love\\ TV\\ 20231127/Love\\ TV\\  简约版.apk</span><br></pre></td></tr></table></figure>\n\n<p>This way, the desired app is successfully installed on the Android N1 set-top box.</p>\n<h1 id=\"Troubleshooting-and-Solutions\"><a href=\"#Troubleshooting-and-Solutions\" class=\"headerlink\" title=\"Troubleshooting and Solutions\"></a>Troubleshooting and Solutions</h1><p>Inability to connect to the FRP-mapped SSH service</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh admin@192.168.6.116 -p 6008                                                     </span><br><span class=\"line\">Unable to negotiate with 192.168.6.116 port 6008: no matching key exchange method found. Their offer: diffie-hellman-group14-sha1,diffie-hellman-group1-sha1,kexguess2@matt.ucc.asn.au  </span><br></pre></td></tr></table></figure>\n\n<p>After modifying <code>~/.ssh/config</code>:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">KexAlgorithms +diffie-hellman-group1-sha1                                                                         </span><br><span class=\"line\">Ciphers 3des-cbc</span><br></pre></td></tr></table></figure>\n\n<p>After the modification, the error became:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Unable to negotiate with 192.168.6.116 port 6008: no matching host key type found. Their offer: ssh-rsa,ssh-dss     </span><br></pre></td></tr></table></figure>\n\n<p>Finally, the resolution employed was:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa root@192.168.6.116 -p 6008</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">The default password <span class=\"keyword\">for</span> K2P SSH is admin</span></span><br></pre></td></tr></table></figure>\n\n<p>This SSH error was inspired by: <a href=\"https://support.genymotion.com/hc/en-us/articles/9500420360093-I-get-the-error-no-matching-host-key-type-found-Their-offer-ssh-rsa-when-trying-to-connect-with-SSH\">I get the error “no matching host key type found. Their offer: ssh-rsa” when trying to connect with SSH</a></p>\n<p>The SSH password for K2P is the default admin (different from the password for logging into the web page), a risky backdoor action (it is advisable to disable the SSH service by default on the K2P device)</p>\n<h2 id=\"ADB-Shell-Shutdown\"><a href=\"#ADB-Shell-Shutdown\" class=\"headerlink\" title=\"ADB Shell Shutdown\"></a>ADB Shell Shutdown</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adb -s 192.168.6.216:5555 shell</span><br></pre></td></tr></table></figure>\n\n<p>After entering the shell, use the command:</p>\n<p>To shut down: <code>reboot -p</code></p>\n<p>After shutdown, network wake cannot be used, is there a solution?</p>\n<p>To restart: <code>reboot</code></p>\n<h2 id=\"K2P-Original-Version-and-Flashing-Note\"><a href=\"#K2P-Original-Version-and-Flashing-Note\" class=\"headerlink\" title=\"K2P Original Version and Flashing Note\"></a>K2P Original Version and Flashing Note</h2><p>The original K2P version is the most stable for wireless relay. The original version of the K2P system has a feature called “wireless expansion.” In other words, if you want to use the K2P for wireless relay, flash it back to the original version.</p>\n<p><img data-src=\"https://www.evernote.com/shard/s122/sh/3e5002dc-29d3-4798-9afe-35c866fd1f44/dD8Wf6kSoMKVd4xGx3Dosd6cvB0qdU1-rUJaG3s9HNW0UI6r310tqvkE8A/deep/0/image.png\" alt=\"K2P Wireless Expansion\"></p>\n<p>I used this original version but could not smoothly capture IPTV packets, it caught the tcpdump command tcpdump -i any -w &#x2F;tmp&#x2F;iptv.cap. I also downloaded Wireshark, but couldn’t download the iptv.cap from &#x2F;tmp, and I found a solution (moved the file to or mounted it in the web’s static directory): <code>mv /tmp/iptv.cap /www/luci-static/fonts/iptv.cap</code>. However, I encountered <code>mv: write error: No space left on device</code>.</p>\n<p>I also tried <code>mount --bind /tmp/iptv.cap /www/web-static/fonts/iptv.cap</code>, but encountered errors due to space constraints.</p>\n<p>Thanks for the solution source: <a href=\"https://www.diygogogo.com/article/item/3989.html\">Backup Method for Phicomm K2P B1 Version (Broadcom Solution) 5Gbps Wireless Gigabit Router Original Firmware</a></p>\n<p>Basically, what I’m looking for is packet capture.</p>\n<h1 id=\"Inspirations\"><a href=\"#Inspirations\" class=\"headerlink\" title=\"Inspirations\"></a>Inspirations</h1><p><a href=\"http://www.carlzeng.top/202309190928.html?highlight=%EF%BF%BDAE%EF%BF%BD%E5%8D%93%E6%89%8B%E6%9C%BA%E6%8A%95%E5%B1%8F%E8%87%B3%E7%94%B5%E8%84%91,+%E7%94%B5%E8%84%91%E6%98%BE%E7%A4%BA%E5%92%8C%E6%8E%A7%E5%88%B6%EF%BF%BDAE%EF%BF%BD%E5%8D%93%E6%89%8B%E6%9C%BA,+%E6%89%8B%E6%9C%BA%E7%94%B5%E8%84%91%E5%90%8C%E5%B1%8F%E8%BD%AF%E4%BB%B6scrcpy%5D\">Screen Mirroring from Android Phone to Computer, Controlling and Displaying Android Phone on Computer, Scrcpy Software for Phone and Computer Synchronization</a></p>\n<p><a href=\"http://www.carlzeng.top/202312031926.html?highlight=docker%E6%90%AD%E5%BB%BAfrp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%9C%8D%E5%8A%A1\">Setting up FRP Intranet Penetration Service with Docker</a></p>\n<p><a href=\"http://www.carlzeng.top/202311032202.html?highlight=nginx+proxy+manager%E4%BF%AE%E5%A4%8D%E7%AC%94%E8%AE%B0\">Nginx Proxy Manager Repair Notes</a></p>\n<p><a href=\"http://www.carlzeng.top/202308242111.html?highlight=nginx+proxy+manager%E4%BF%AE%E5%A4%8D%E7%AC%94%E8%AE%B0\">How to Change the Default 80 Management Port of LEDE and X86_64 OpenWrt</a></p>\n<p><a href=\"http://www.carlzeng.top/202310051529.html?highlight=nginx+proxy+manager%E4%BF%AE%E5%A4%8D%E7%AC%94%E8%AE%B0\">Internet TV Resources - IPTV Live TV Station Sources</a></p>\n<p><a href=\"http://www.carlzeng.top/202304131802.html?highlight=%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E6%8A%95%E5%B1%8F%E8%87%B3%E7%94%B5%E8%84%91,+%E7%94%B5%E8%84%91%E6%98%BE%E7%A4%BA%E5%92%8C%E6%8E%A7%E5%88%B6%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA,+%E6%89%8B%E6%9C%BA%E7%94%B5%E8%84%91%E5%90%8C%E5%B1%8F%E8%BD%AF%E4%BB%B6scrcpy%5D\">The Only Available Android Emulator on Apple M1</a></p>\n<h1 id=\"Further-Reading-and-Application\"><a href=\"#Further-Reading-and-Application\" class=\"headerlink\" title=\"Further Reading and Application\"></a>Further Reading and Application</h1><p>Just now, I thought about sharing the set-top box and considered making scrcpy web-based. Then I searched and found that:</p>\n<ol>\n<li>Original: Smartphones can also be dockerized, creating a virtual smartphone in a webpage. But what are the applications of this? (What’s the use?)</li>\n<li>There is also ws-scrcpy, a scrcpy web prototype, a web client for Genymobile&#x2F;scrcpy, and more.<ol>\n<li>With this tool, the screen of the set-top box can be displayed in real-time on the Web (it’s just the basic application to watch TV and movies).</li>\n<li>Additionally, it allows for real-time remote viewing and control of Android system devices (such as: Android phones, Android TVs, Android set-top boxes…)</li>\n</ol>\n</li>\n</ol>\n<p><a href=\"https://github.com/NetrisTV/ws-scrcpy\">Web client prototype for scrcpy</a></p>\n<p><a href=\"https://hostloc.com/thread-1067531-1-1.html\">Dockerizing Android Web Remote Desktop, Access through Browser</a></p>\n<p>[Using Docker to Run ws-scrcpy: Realizing</p>\n","more":"<h1 id=\"What’s-the-Use\"><a href=\"#What’s-the-Use\" class=\"headerlink\" title=\"What’s the Use\"></a>What’s the Use</h1><p>Remote control of a set-top box, installing IPTV apps on smart Android set-top boxes (or Android TVs) for the elderly.</p>\n<p>Remote installation of apps on a family member’s set-top box, remote operation of the N1 TV box.</p>\n<p>Acts as a remote controller, realizing most remote control functions.</p>\n<p>Remote assistance for operating Android TV boxes.</p>\n<h1 id=\"How-to-Use\"><a href=\"#How-to-Use\" class=\"headerlink\" title=\"How to Use\"></a>How to Use</h1><h2 id=\"Steps\"><a href=\"#Steps\" class=\"headerlink\" title=\"Steps\"></a>Steps</h2><p>(Provided you have already configured remote access to your router, I have set up a remote penetration connection using frps and frpc, and then used NPM to reverse proxy the router’s web control page, this series of operations makes subsequent implementations much smoother)</p>\n<ol>\n<li><p>Activate the N1 Android TV box, turn it on, or use the set-top box remote control</p>\n<ol>\n<li>Find the IP address of the Android box (or Android TV) in the router</li>\n<li>Method to check if the device is activated, ping the box’s IP. If the box’s IP is pingable, skip this step.</li>\n</ol>\n</li>\n<li><p>Set up the remote FRP server (server-side)</p>\n<ol>\n<li>See the specific article: <a href=\"http://www.carlzeng.top/202312031926.html?highlight=docker%E6%90%AD%E5%BB%BAfrp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%9C%8D%E5%8A%A1\">Setting up FRP Intranet Penetration Service with Docker</a>. Skip this step if you already have a usable frps server.</li>\n</ol>\n</li>\n<li><p>Set up the frpc client on the router where the controlled-end set-top box is located</p>\n<ol>\n<li>See the specific article: <a href=\"http://www.carlzeng.top/202312031926.html?highlight=docker%E6%90%AD%E5%BB%BAfrp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%9C%8D%E5%8A%A1#%E8%AE%BE%E7%BD%AE%E5%BA%94%E7%94%A84\">Setting up FRP Intranet Penetration Service&gt;Setting Application 4</a></li>\n</ol>\n</li>\n<li><p>ADB connection command: <code>adb connect 192.168.6.216:5555</code></p>\n<ol>\n<li>To check if it’s connected: <code>adb devices</code>, see if the device IP and port are listed</li>\n</ol>\n</li>\n<li><p>[Optional] ADB installation command: <code>adb -s 192.168.6.216:5555 install ***.apk</code></p>\n<blockquote>\n<p>Example installation of Perfect Player (Note: Use double quotes if the apk file and path are complex)</p>\n<p><code>adb -s 192.168.6.216:5555 install &quot;~/Downloads/com.niklabs.pp_1.6.0.1-60105_minAPI16(arm64-v8a)(nodpi)_apkmirror.com.apk&quot;</code></p>\n</blockquote>\n</li>\n<li><p>Remote viewing of the screen and control: <code>scrcpy --tcpip=192.168.6.216:5555</code></p>\n<ol>\n<li>See the specific article: <a href=\"http://localhost:4000/202309190928.html?highlight=%EF%BF%BDAE%EF%BF%BD%E5%8D%93%E6%89%8B%E6%9C%BA%E6%8A%95%E5%B1%8F%E8%87%B3%E7%94%B5%E8%84%91,+%E7%94%B5%E8%84%91%E6%98%BE%E7%A4%BA%E5%92%8C%E6%8E%A7%E5%88%B6%EF%BF%BDAE%EF%BF%BD%E5%8D%93%E6%89%8B%E6%9C%BA,+%E6%89%8B%E6%9C%BA%E7%94%B5%E8%84%91%E5%90%8C%E5%B1%8F%E8%BD%AF%E4%BB%B6scrcpy%5D\">Screen Mirroring from Android Phone to Computer, Controlling and Displaying Android Phone on Computer, Scrcpy Software for Phone and Computer Synchronization</a></li>\n<li>The goal of control is to operate the set-top box or TV with a mouse and keyboard. Click to open the app, click settings, and use the keyboard to input IPTV live sources.</li>\n<li>[Optional] Any other actions that can be performed locally with a remote control</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"Related-Content\"><a href=\"#Related-Content\" class=\"headerlink\" title=\"Related Content\"></a>Related Content</h1><p>If you are interested in related topics such as <a href=\"https://www.carlzeng.top/search?q=安卓\">Android</a> <a href=\"https://www.carlzeng.top/search?q=盒子\">TV boxes</a>, the following content may be helpful:</p>\n<iframe src=\"https://www.carlzeng.top/search?q=安卓\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"Implementation-Method\"><a href=\"#Implementation-Method\" class=\"headerlink\" title=\"Implementation Method\"></a>Implementation Method</h1><h2 id=\"Real-Problems\"><a href=\"#Real-Problems\" class=\"headerlink\" title=\"Real Problems\"></a>Real Problems</h2><ol>\n<li>To resolve the issue of connecting the set-top box to a secondary router on the second floor, while the smartphone for remote assistance is connected to the primary router on the first floor.</li>\n<li>How to determine the open ports for remote control?<ol>\n<li>This needs to be open to scan the set-top box properly.</li>\n</ol>\n</li>\n</ol>\n<p>This issue cannot be resolved. The approach needs to be reconsidered (the strategy of not using remote control).</p>\n<p>The principle is similar to remote controlling a smartphone, but it’s a bit more challenging. Too many security settings present obstacles to effective remote assistance for the elderly at home.</p>\n<h2 id=\"Steps-Methods-Complex-Process\"><a href=\"#Steps-Methods-Complex-Process\" class=\"headerlink\" title=\"Steps&#x2F;Methods&#x2F;Complex Process\"></a>Steps&#x2F;Methods&#x2F;Complex Process</h2><p>[Optional Step] Use QtScrcpy to activate the device:</p>\n<ol>\n<li><p>In QtScrcpy, set the wireless 192.168.6.216, port 5555, click “wireless connection”</p>\n<ol>\n<li>In the left-hand list, such as: Phone-192.168.6.216:5555; there should be an ADB run command; what exactly is it?<ol>\n<li><code>adb run AdbProcessImpl::out:connected to 192.168.6.216:5555</code></li>\n<li>It’s actually equivalent to the adb command: <code>adb connect 192.168.6.216:5555</code></li>\n</ol>\n</li>\n<li>Click: Install sndcpy</li>\n<li>Click: Start Service</li>\n</ol>\n</li>\n<li><p>Enter</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scrcpy -e</span><br></pre></td></tr></table></figure>\n\n<p>in Terminal</p>\n<ol>\n<li>The newly added device will be the device connected in the previous step (it will display the IP:port)</li>\n</ol>\n</li>\n</ol>\n<p>Indeed, the Android N1 set-top box can also be connected using <code>scrcpy -e</code>, enabling remote control. This allows remote configuration of apps on the N1 set-top box, preventing the elderly from struggling with the remote control (complex operations, such as configuring DIY sources using the virtual keyboard on the remote control).</p>\n<h2 id=\"Shortcomings-Flaws\"><a href=\"#Shortcomings-Flaws\" class=\"headerlink\" title=\"Shortcomings&#x2F;Flaws\"></a>Shortcomings&#x2F;Flaws</h2><ol>\n<li><p>Sound does not transmit, but it doesn’t matter as it’s not intended for remote TV watching. Moreover, this N1 serves as a service that allows remote connection to watch IPTV and movies.</p>\n<ol>\n<li><p>The issue was due to the outdated version of the Android system on the box.</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">[server]</span> INFO: Device: <span class=\"section\">[Phicomm]</span> Phicomm p230 (Android 7.1.2)                                                       </span><br><span class=\"line\"><span class=\"section\">[server]</span> WARN: Audio disabled: it is not supported before Android 11                                                </span><br><span class=\"line\">INFO: Renderer: metal                                                                                               </span><br><span class=\"line\">WARN: Demuxer &#x27;audio&#x27;: stream explicitly disabled by the device   </span><br></pre></td></tr></table></figure></li>\n</ol>\n</li>\n<li><p>The menu button on the box remote control cannot be used; only left-click is possible.</p>\n<ol>\n<li>This is not an issue; it’s sufficient. It only means the menu cannot be operated remotely, nothing more.</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"Next-Step-FRP-Mapping-Penetration\"><a href=\"#Next-Step-FRP-Mapping-Penetration\" class=\"headerlink\" title=\"Next Step: FRP Mapping&#x2F;Penetration\"></a>Next Step: FRP Mapping&#x2F;Penetration</h2><p>The next step is the prerequisite of FRP mapping out the 5555 port and configuring the frpc client; it’s also a form of penetration.</p>\n<p>Faced with the inability to locate the IP of the set-top box on the Padavan, as it is not in the WIFI network (connected via a wired connection), how to find the IP of the N1 box?</p>\n<p>Through the Padavan UI query: Network Information &gt; Traffic Monitoring <a href=\"https://k2pzl.carlzeng.top:4443/Main_BWMon.asp\">https://k2pzl.carlzeng.top:4443/Main_BWMon.asp</a></p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Found the FRPS server at 192.168.6.116:6006, and frpc was port-mapped to 192.168.123.189:5555</span><br></pre></td></tr></table></figure>\n\n<p>By binding the set-top box’s IP to the MAC address in the DHCP on the router, the box’s IP won’t change, and frpc will always find the correct box IP when running (accurate positioning).</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">This way, `scrcpy -e` will display two clients!</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Next-Step-Remote-Control-with-Scrcpy\"><a href=\"#Next-Step-Remote-Control-with-Scrcpy\" class=\"headerlink\" title=\"Next Step: Remote Control with Scrcpy\"></a>Next Step: Remote Control with Scrcpy</h2><p>How to install an app on the Android N1 set-top box using ADB commands</p>\n<p>In theory, the ADB command can easily accomplish the goal of installing an app (I believe I wrote a method before: <a href=\"http://www.carlzeng.top/202304131802.html?highlight=adb\">The Only Available Android Emulator on Apple M1</a>)</p>\n<ol>\n<li>Place the app to be installed in a local directory on your computer (e.g., ~&#x2F;Downloads)</li>\n<li>Use the command <code>adb install /*.apk</code></li>\n<li>Specific process:</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- adb devices                                                                               </span><br><span class=\"line\">List of devices attached                                                                                            </span><br><span class=\"line\">192.168.6.116:6006      offline</span><br><span class=\"line\">192.168.6.216:5555      device  </span><br></pre></td></tr></table></figure>\n\n<p>At this point, it’s possible to manually select one of the devices from the list, as the next commands need a specific device to interact with.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- adb -s 7f1c864e shell</span><br></pre></td></tr></table></figure>\n\n<p>After executing the command, we can obtain shell execution permission for the Android device.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- adb -s 192.168.6.216:5555 install /Users/carlzeng/Downloads/Love\\ TV\\ 20231127/Love\\ TV\\  简约版.apk</span><br></pre></td></tr></table></figure>\n\n<p>This way, the desired app is successfully installed on the Android N1 set-top box.</p>\n<h1 id=\"Troubleshooting-and-Solutions\"><a href=\"#Troubleshooting-and-Solutions\" class=\"headerlink\" title=\"Troubleshooting and Solutions\"></a>Troubleshooting and Solutions</h1><p>Inability to connect to the FRP-mapped SSH service</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh admin@192.168.6.116 -p 6008                                                     </span><br><span class=\"line\">Unable to negotiate with 192.168.6.116 port 6008: no matching key exchange method found. Their offer: diffie-hellman-group14-sha1,diffie-hellman-group1-sha1,kexguess2@matt.ucc.asn.au  </span><br></pre></td></tr></table></figure>\n\n<p>After modifying <code>~/.ssh/config</code>:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">KexAlgorithms +diffie-hellman-group1-sha1                                                                         </span><br><span class=\"line\">Ciphers 3des-cbc</span><br></pre></td></tr></table></figure>\n\n<p>After the modification, the error became:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Unable to negotiate with 192.168.6.116 port 6008: no matching host key type found. Their offer: ssh-rsa,ssh-dss     </span><br></pre></td></tr></table></figure>\n\n<p>Finally, the resolution employed was:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedAlgorithms=+ssh-rsa root@192.168.6.116 -p 6008</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">The default password <span class=\"keyword\">for</span> K2P SSH is admin</span></span><br></pre></td></tr></table></figure>\n\n<p>This SSH error was inspired by: <a href=\"https://support.genymotion.com/hc/en-us/articles/9500420360093-I-get-the-error-no-matching-host-key-type-found-Their-offer-ssh-rsa-when-trying-to-connect-with-SSH\">I get the error “no matching host key type found. Their offer: ssh-rsa” when trying to connect with SSH</a></p>\n<p>The SSH password for K2P is the default admin (different from the password for logging into the web page), a risky backdoor action (it is advisable to disable the SSH service by default on the K2P device)</p>\n<h2 id=\"ADB-Shell-Shutdown\"><a href=\"#ADB-Shell-Shutdown\" class=\"headerlink\" title=\"ADB Shell Shutdown\"></a>ADB Shell Shutdown</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adb -s 192.168.6.216:5555 shell</span><br></pre></td></tr></table></figure>\n\n<p>After entering the shell, use the command:</p>\n<p>To shut down: <code>reboot -p</code></p>\n<p>After shutdown, network wake cannot be used, is there a solution?</p>\n<p>To restart: <code>reboot</code></p>\n<h2 id=\"K2P-Original-Version-and-Flashing-Note\"><a href=\"#K2P-Original-Version-and-Flashing-Note\" class=\"headerlink\" title=\"K2P Original Version and Flashing Note\"></a>K2P Original Version and Flashing Note</h2><p>The original K2P version is the most stable for wireless relay. The original version of the K2P system has a feature called “wireless expansion.” In other words, if you want to use the K2P for wireless relay, flash it back to the original version.</p>\n<p><img data-src=\"https://www.evernote.com/shard/s122/sh/3e5002dc-29d3-4798-9afe-35c866fd1f44/dD8Wf6kSoMKVd4xGx3Dosd6cvB0qdU1-rUJaG3s9HNW0UI6r310tqvkE8A/deep/0/image.png\" alt=\"K2P Wireless Expansion\"></p>\n<p>I used this original version but could not smoothly capture IPTV packets, it caught the tcpdump command tcpdump -i any -w &#x2F;tmp&#x2F;iptv.cap. I also downloaded Wireshark, but couldn’t download the iptv.cap from &#x2F;tmp, and I found a solution (moved the file to or mounted it in the web’s static directory): <code>mv /tmp/iptv.cap /www/luci-static/fonts/iptv.cap</code>. However, I encountered <code>mv: write error: No space left on device</code>.</p>\n<p>I also tried <code>mount --bind /tmp/iptv.cap /www/web-static/fonts/iptv.cap</code>, but encountered errors due to space constraints.</p>\n<p>Thanks for the solution source: <a href=\"https://www.diygogogo.com/article/item/3989.html\">Backup Method for Phicomm K2P B1 Version (Broadcom Solution) 5Gbps Wireless Gigabit Router Original Firmware</a></p>\n<p>Basically, what I’m looking for is packet capture.</p>\n<h1 id=\"Inspirations\"><a href=\"#Inspirations\" class=\"headerlink\" title=\"Inspirations\"></a>Inspirations</h1><p><a href=\"http://www.carlzeng.top/202309190928.html?highlight=%EF%BF%BDAE%EF%BF%BD%E5%8D%93%E6%89%8B%E6%9C%BA%E6%8A%95%E5%B1%8F%E8%87%B3%E7%94%B5%E8%84%91,+%E7%94%B5%E8%84%91%E6%98%BE%E7%A4%BA%E5%92%8C%E6%8E%A7%E5%88%B6%EF%BF%BDAE%EF%BF%BD%E5%8D%93%E6%89%8B%E6%9C%BA,+%E6%89%8B%E6%9C%BA%E7%94%B5%E8%84%91%E5%90%8C%E5%B1%8F%E8%BD%AF%E4%BB%B6scrcpy%5D\">Screen Mirroring from Android Phone to Computer, Controlling and Displaying Android Phone on Computer, Scrcpy Software for Phone and Computer Synchronization</a></p>\n<p><a href=\"http://www.carlzeng.top/202312031926.html?highlight=docker%E6%90%AD%E5%BB%BAfrp%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E6%9C%8D%E5%8A%A1\">Setting up FRP Intranet Penetration Service with Docker</a></p>\n<p><a href=\"http://www.carlzeng.top/202311032202.html?highlight=nginx+proxy+manager%E4%BF%AE%E5%A4%8D%E7%AC%94%E8%AE%B0\">Nginx Proxy Manager Repair Notes</a></p>\n<p><a href=\"http://www.carlzeng.top/202308242111.html?highlight=nginx+proxy+manager%E4%BF%AE%E5%A4%8D%E7%AC%94%E8%AE%B0\">How to Change the Default 80 Management Port of LEDE and X86_64 OpenWrt</a></p>\n<p><a href=\"http://www.carlzeng.top/202310051529.html?highlight=nginx+proxy+manager%E4%BF%AE%E5%A4%8D%E7%AC%94%E8%AE%B0\">Internet TV Resources - IPTV Live TV Station Sources</a></p>\n<p><a href=\"http://www.carlzeng.top/202304131802.html?highlight=%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA%E6%8A%95%E5%B1%8F%E8%87%B3%E7%94%B5%E8%84%91,+%E7%94%B5%E8%84%91%E6%98%BE%E7%A4%BA%E5%92%8C%E6%8E%A7%E5%88%B6%E5%AE%89%E5%8D%93%E6%89%8B%E6%9C%BA,+%E6%89%8B%E6%9C%BA%E7%94%B5%E8%84%91%E5%90%8C%E5%B1%8F%E8%BD%AF%E4%BB%B6scrcpy%5D\">The Only Available Android Emulator on Apple M1</a></p>\n<h1 id=\"Further-Reading-and-Application\"><a href=\"#Further-Reading-and-Application\" class=\"headerlink\" title=\"Further Reading and Application\"></a>Further Reading and Application</h1><p>Just now, I thought about sharing the set-top box and considered making scrcpy web-based. Then I searched and found that:</p>\n<ol>\n<li>Original: Smartphones can also be dockerized, creating a virtual smartphone in a webpage. But what are the applications of this? (What’s the use?)</li>\n<li>There is also ws-scrcpy, a scrcpy web prototype, a web client for Genymobile&#x2F;scrcpy, and more.<ol>\n<li>With this tool, the screen of the set-top box can be displayed in real-time on the Web (it’s just the basic application to watch TV and movies).</li>\n<li>Additionally, it allows for real-time remote viewing and control of Android system devices (such as: Android phones, Android TVs, Android set-top boxes…)</li>\n</ol>\n</li>\n</ol>\n<p><a href=\"https://github.com/NetrisTV/ws-scrcpy\">Web client prototype for scrcpy</a></p>\n<p><a href=\"https://hostloc.com/thread-1067531-1-1.html\">Dockerizing Android Web Remote Desktop, Access through Browser</a></p>\n<p>[Using Docker to Run ws-scrcpy: Realizing</p>","categories":[],"tags":[{"name":"frpc","path":"api/tags/frpc.json"},{"name":"frps","path":"api/tags/frps.json"},{"name":"Android","path":"api/tags/Android.json"},{"name":"IPTV","path":"api/tags/IPTV.json"},{"name":"Set-Top Box","path":"api/tags/Set-Top Box.json"},{"name":"N1","path":"api/tags/N1.json"},{"name":"Home Network","path":"api/tags/Home Network.json"},{"name":"Remote Control","path":"api/tags/Remote Control.json"},{"name":"frp","path":"api/tags/frp.json"}]}