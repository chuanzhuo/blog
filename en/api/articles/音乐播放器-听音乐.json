{"title":"Listening to Music (Music Player)","slug":"音乐播放器-听音乐","date":"2023-02-20T03:39:00.000Z","updated":"2023-12-30T13:47:04.317Z","comments":true,"path":"api/articles/音乐播放器-听音乐.json","excerpt":"BackgroundDownload, listen to music, personal use app sharing, etc.December 2023 Update: One-line command to set up the online music player mmplayer using DockerOpen and use mmPlayer Online Music Player","covers":null,"content":"<h1 id=\"Background\"><a href=\"#Background\" class=\"headerlink\" title=\"Background\"></a>Background</h1><p>Download, listen to music, personal use app sharing, etc.</p>\n<div class=\"note success\"><p>December 2023 Update: One-line command to set up the online music player mmplayer using Docker</p>\n<p>Open and use <a href=\"https://c.carlzeng.top:4443/mp3\">mmPlayer Online Music Player</a></p>\n</div>\n\n<span id=\"more\"></span>\n\n<h1 id=\"Online-Player-Preview\"><a href=\"#Online-Player-Preview\" class=\"headerlink\" title=\"Online Player Preview\"></a>Online Player Preview</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://c.carlzeng.top:3/mp3\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h2 id=\"Conversion-to-mp3-after-downloading\"><a href=\"#Conversion-to-mp3-after-downloading\" class=\"headerlink\" title=\"Conversion to mp3 after downloading\"></a>Conversion to mp3 after downloading</h2><p>For more efficient audio downloads: <a href=\"https://www.carlzeng.top/202211220913.html\">How to download audio and video from YouTube using youtube-dl</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ffmpeg -i &quot;file1.mp4&quot; &quot;file2.mp3&quot;</span><br></pre></td></tr></table></figure>\n\n<p>Experiment:</p>\n<p>There is an interesting project:<br><a href=\"https://github.com/injahow/meting-api\">https://github.com/injahow/meting-api</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">API-Demo:</span><br><span class=\"line\"></span><br><span class=\"line\">https://api.injahow.cn/meting/?type=url&amp;id=416892104</span><br><span class=\"line\">https://api.injahow.cn/meting/?type=song&amp;id=591321</span><br><span class=\"line\">https://api.injahow.cn/meting/?type=playlist&amp;id=2619366284</span><br><span class=\"line\">APlayer-Demo:</span><br><span class=\"line\"></span><br><span class=\"line\">https://injahow.github.io/meting-api/</span><br><span class=\"line\">https://injahow.github.io/meting-api/?id=2904749230</span><br></pre></td></tr></table></figure>\n\n<p>Input the NetEase music ID directly to obtain the MP3 file, ready for direct playback;<br><a href=\"https://api.injahow.cn/meting/?type=url&id=30841838\">https://api.injahow.cn/meting/?type=url&amp;id=30841838</a><br>Free song<br><a href=\"https://api.injahow.cn/meting/?type=url&id=157101\">https://api.injahow.cn/meting/?type=url&amp;id=157101</a><br>30 seconds of free play for paid songs</p>\n<hr>\n<p>August 2023 Update</p>\n<p>For Android phone users, there is still a very good app available: <a href=\"https://bodian.kuwo.cn/\">Bodio Music</a></p>\n<p>bodian.kuwo.com - Impressive work, Kuwo! It’s rumored to evade certain music copyrights by using a video format, etc.<br>Status: Tested and used</p>\n<hr>\n<h1 id=\"Adding-Download-Function-to-Listen-1-Chrome-Edition-Version-2-27-0\"><a href=\"#Adding-Download-Function-to-Listen-1-Chrome-Edition-Version-2-27-0\" class=\"headerlink\" title=\"Adding Download Function to Listen 1 Chrome Edition Version 2.27.0\"></a>Adding Download Function to Listen 1 Chrome Edition Version 2.27.0</h1><p>Listen 1 is an extremely powerful open-source music player. As the author says, the hassle of switching between different players due to copyright issues can be frustrating. Listen 1 can perfectly solve this problem.<br>GitHub page <a href=\"https://chat.carlzeng.top:4443/github.com/listen1\">github.com&#x2F;listen1</a><br>Download link <a href=\"https://chat.carlzeng.top:4443/listen1.github.io/listen1/\">listen1.github.io&#x2F;listen1&#x2F;</a><br>The software provides installation versions for multiple platforms, and here we explain the process for Chrome.</p>\n<h2 id=\"Specific-Steps\"><a href=\"#Specific-Steps\" class=\"headerlink\" title=\"Specific Steps\"></a>Specific Steps</h2><p>There are two specific modifications to make. The first one is in listen1.html, at line #1906:</p>\n<p>Modify</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">ng</span>\\<span class=\"attr\">-if</span>\\=<span class=\"string\">&quot;currentPlaying.source === &#x27;xiami&#x27;&quot;</span> <span class=\"attr\">style</span>\\=<span class=\"string\">&quot;color: orange; font-size: medium&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>⚠️ &lt;/span</span><br><span class=\"line\">    &gt;&#123;&#123; currentPlaying.title &#125;&#125;</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">to</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">ng</span>\\<span class=\"attr\">-if</span>\\=<span class=\"string\">&quot;currentPlaying.source === &#x27;xiami&#x27;&quot;</span> <span class=\"attr\">style</span>\\=<span class=\"string\">&quot;color: orange; font-size: medium&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>⚠️ &lt;/span</span><br><span class=\"line\">    &gt;&#123;&#123; currentPlaying.title &#125;&#125; <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;download\\_music&quot;</span> <span class=\"attr\">download</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;title ng-binding&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;\\_blank&quot;</span>&gt;</span>Download<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Here, I added opening in a new window and set the original author’s download to an empty value due to security reasons. Thus, cross-domain issues remain unresolved. The downside of this setting is the manual renaming of saved song titles.</p>\n<p>The second modification is in js&#x2F;loweb.js at line #396:</p>\n<p>Change</p>\n<p>Promise.all(getUrlPromises)<br>.then(playerFailCallback)<br>.catch((response) &#x3D;&gt; {<br>playerSuccessCallback(response);<br>});</p>\n<p>to</p>\n<p>Promise.all(getUrlPromises)<br>.then(playerFailCallback)<br>.catch((response) &#x3D;&gt; {<br>button &#x3D; document.getElementById(‘download_music’);<br>button.href &#x3D; sound.url;<br>playerSuccessCallback(response);<br>});</p>\n<p>Once these two changes are made, the installation is complete.</p>\n<p>How to install: Due to security reasons, Chrome prohibits installation from non-Chrome Web Store links. Therefore, download the listen1_chrome_extension-2.27.0.zip file to your local machine, then complete the above two-step process. Open the chrome:&#x2F;&#x2F;extensions&#x2F; page, and directly drag the .crx file into the browser to install.</p>\n<h3 id=\"Specific-Steps-to-Generate-Chrome-crx\"><a href=\"#Specific-Steps-to-Generate-Chrome-crx\" class=\"headerlink\" title=\"Specific Steps to Generate Chrome .crx\"></a>Specific Steps to Generate Chrome .crx</h3><ol>\n<li>Open the Chrome browser and go to chrome:&#x2F;&#x2F;extensions&#x2F;</li>\n<li>On the top right, enable Developer mode</li>\n<li>Click the button in the middle of the three dots: Pack extension</li>\n<li>Choose the folder where you unzipped the file (default folder name: listen1_chrome_extension-2.27.0) and make the two aforementioned file modifications in this folder</li>\n<li>Click Pack extension, which will generate two files: listen1_chrome_extension-2.27.0.crx and listen1_chrome_extension-2.27.0.pem</li>\n<li>Drag the .crx file into the browser (chrome:&#x2F;&#x2F;extensions&#x2F;) for installation.</li>\n</ol>\n<h3 id=\"Steps-to-Create-the-Firefox-Plug-in-Version\"><a href=\"#Steps-to-Create-the-Firefox-Plug-in-Version\" class=\"headerlink\" title=\"Steps to Create the Firefox Plug-in Version\"></a>Steps to Create the Firefox Plug-in Version</h3><p>(1) First, download the relevant code from github: <a href=\"https://github.com/listen1/listen1/_chrome/_extension\">https://github.com/listen1/listen1\\_chrome\\_extension</a><br>(2) After downloading and unzipping the folder, delete the manifest.json file and rename manifest_firefox.json to manifest.json<br>(3) Enter the command line interface (shortcut keys: win+r, Mac: terminal), navigate to the unzipped directory: cd listen1_chrome_extension-2.10.0 , execute zip -r ..&#x2F;listen1.xpi * , and then find the listen1.xpi file in the parent directory.</p>\n<p>zip -r ..&#x2F;listen1.xpi *</p>\n<p>(4) (Requires <a href=\"https://www.mozilla.org/en-US/firefox/developer/\">Firefox’s development version Firefox Browser Developer Edition</a>, tested in February 2023) Enter about:config in the Firefox address bar and, regardless of the prompts, click OK. Then search for the preference name xpinstall.signatures.required and switch this option to false.</p>\n<p>(5) Go to Add-ons &gt; Extensions &gt; Manage Your Extensions &gt; Settings &gt; Install Add-on from file, and select the newly packaged .xpi file (default name: listen1.xpi) to add.</p>\n<p>After installation, the downloading function is still under testing and will hopefully be further improved.</p>\n<p>After installing this Chrome or Firefox extension, we can use the browser’s debugging tool’s Network tab to view the media files being played (MP3, FLAC, etc.)</p>\n<p>Adding Download Function to Listen 1 Chrome Edition Version 2.27.0<br>Reference document:</p>\n<p>Author: ttys000<br>Link: <a href=\"https://juejin.cn/post/6878428772249370631\">https://juejin.cn/post/6878428772249370631</a><br>Source: Rare Earth Gold<br>All rights to the article belong to the author. For commercial reprint, please contact the author for permission. For non-commercial reprint, please indicate the source.<br>Original link: <a href=\"https://blog.csdn.net/weixin/_40562999/article/details/108943445\">https://blog.csdn.net/weixin\\_40562999/article/details/108943445</a></p>\n<hr>\n<h1 id=\"One-line-Command-to-Set-Up-the-Online-Music-Player-mmplayer-using-Docker\"><a href=\"#One-line-Command-to-Set-Up-the-Online-Music-Player-mmplayer-using-Docker\" class=\"headerlink\" title=\"One-line Command to Set Up the Online Music Player mmplayer using Docker\"></a>One-line Command to Set Up the Online Music Player mmplayer using Docker</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name mmPlayer --restart always -dit -p 8300:80 yaonew/mmplayer</span><br></pre></td></tr></table></figure>\n\n<p>Trial access: <a href=\"https://c.carlzeng.top:4443/mp3\">https://c.carlzeng.top:4443/mp3</a></p>\n<ol>\n<li>Open <a href=\"https://c.carlzeng.top:4443/mp3\">mmPlayer Online Music Player</a></li>\n<li>Click the “Search” button</li>\n<li>Input the music name or artist you want to search for</li>\n<li>Hover over the search results, where a play button will appear. Click to play, or download</li>\n</ol>\n<p>Source: <a href=\"https://hub.docker.com/r/yaonew/mmplayer\">https://hub.docker.com/r/yaonew/mmplayer</a></p>\n<h2 id=\"Configuration-Optional\"><a href=\"#Configuration-Optional\" class=\"headerlink\" title=\"Configuration [Optional]\"></a>Configuration [Optional]</h2><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name mmPlayer --restart always -dit -p 8300:80 -v ./index.html:/app/dist/index.html -v ./prompt.html:/app/dist/prompt.html yaonew/mmplayer</span><br></pre></td></tr></table></figure>\n\n<p>Switch to docker-compose</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&quot;3&quot;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">    <span class=\"attr\">mmplayer:</span></span><br><span class=\"line\">        <span class=\"attr\">container_name:</span> <span class=\"string\">mmPlayer</span></span><br><span class=\"line\">        <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">        <span class=\"attr\">stdin_open:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">tty:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"number\">8300</span><span class=\"string\">:80</span></span><br><span class=\"line\">        <span class=\"attr\">volumes:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">./index.html:/app/dist/index.html</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">./prompt.html:/app/dist/prompt.html</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">./favicon.ico:/app/dist/favicon.ico</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">yaonew/mmplayer</span></span><br></pre></td></tr></table></figure>\n\n<p>After starting docker-compose, initially, the local port 8300 cannot be accessed.</p>\n<p>docker stop mmPlayer</p>\n<p>docker rm mmPlayer</p>\n<p>Then try a few times again, and it should work :-)</p>\n<p>Open firewall port, and map the homepage</p>\n<h1 id=\"TODO-Next-Step\"><a href=\"#TODO-Next-Step\" class=\"headerlink\" title=\"TODO Next Step\"></a>TODO Next Step</h1><p>Integrate into the node.js appsearch</p>\n<p>Instead of creating a new docker container, integrate it together, and open the sh script to automatically execute. It’s just too great.</p>\n<h2 id=\"Acknowledgments\"><a href=\"#Acknowledgments\" class=\"headerlink\" title=\"Acknowledgments\"></a>Acknowledgments</h2><p><a href=\"https://panda995.xyz/network/3878.html\">NAS-usable music player! Online playback, lyric display, playlist synchronization, this container is too powerful</a></p>\n<h2 id=\"Regret\"><a href=\"#Regret\" class=\"headerlink\" title=\"Regret\"></a>Regret</h2><p>This is designed for PC-based music listening. It cannot share music, such as sharing a specific favorite song with friends, or generate a long-lasting link.</p>\n<p>Do any of you know of a docker-deployed web version music player similar to the NeteaseCloudMusicApi, which can share a link (with picture and playback functionality)? Leave a comment and let me know if it’s good or not.</p>\n","more":"<h1 id=\"Online-Player-Preview\"><a href=\"#Online-Player-Preview\" class=\"headerlink\" title=\"Online Player Preview\"></a>Online Player Preview</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://c.carlzeng.top:3/mp3\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h2 id=\"Conversion-to-mp3-after-downloading\"><a href=\"#Conversion-to-mp3-after-downloading\" class=\"headerlink\" title=\"Conversion to mp3 after downloading\"></a>Conversion to mp3 after downloading</h2><p>For more efficient audio downloads: <a href=\"https://www.carlzeng.top/202211220913.html\">How to download audio and video from YouTube using youtube-dl</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ffmpeg -i &quot;file1.mp4&quot; &quot;file2.mp3&quot;</span><br></pre></td></tr></table></figure>\n\n<p>Experiment:</p>\n<p>There is an interesting project:<br><a href=\"https://github.com/injahow/meting-api\">https://github.com/injahow/meting-api</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">API-Demo:</span><br><span class=\"line\"></span><br><span class=\"line\">https://api.injahow.cn/meting/?type=url&amp;id=416892104</span><br><span class=\"line\">https://api.injahow.cn/meting/?type=song&amp;id=591321</span><br><span class=\"line\">https://api.injahow.cn/meting/?type=playlist&amp;id=2619366284</span><br><span class=\"line\">APlayer-Demo:</span><br><span class=\"line\"></span><br><span class=\"line\">https://injahow.github.io/meting-api/</span><br><span class=\"line\">https://injahow.github.io/meting-api/?id=2904749230</span><br></pre></td></tr></table></figure>\n\n<p>Input the NetEase music ID directly to obtain the MP3 file, ready for direct playback;<br><a href=\"https://api.injahow.cn/meting/?type=url&id=30841838\">https://api.injahow.cn/meting/?type=url&amp;id=30841838</a><br>Free song<br><a href=\"https://api.injahow.cn/meting/?type=url&id=157101\">https://api.injahow.cn/meting/?type=url&amp;id=157101</a><br>30 seconds of free play for paid songs</p>\n<hr>\n<p>August 2023 Update</p>\n<p>For Android phone users, there is still a very good app available: <a href=\"https://bodian.kuwo.cn/\">Bodio Music</a></p>\n<p>bodian.kuwo.com - Impressive work, Kuwo! It’s rumored to evade certain music copyrights by using a video format, etc.<br>Status: Tested and used</p>\n<hr>\n<h1 id=\"Adding-Download-Function-to-Listen-1-Chrome-Edition-Version-2-27-0\"><a href=\"#Adding-Download-Function-to-Listen-1-Chrome-Edition-Version-2-27-0\" class=\"headerlink\" title=\"Adding Download Function to Listen 1 Chrome Edition Version 2.27.0\"></a>Adding Download Function to Listen 1 Chrome Edition Version 2.27.0</h1><p>Listen 1 is an extremely powerful open-source music player. As the author says, the hassle of switching between different players due to copyright issues can be frustrating. Listen 1 can perfectly solve this problem.<br>GitHub page <a href=\"https://chat.carlzeng.top:4443/github.com/listen1\">github.com&#x2F;listen1</a><br>Download link <a href=\"https://chat.carlzeng.top:4443/listen1.github.io/listen1/\">listen1.github.io&#x2F;listen1&#x2F;</a><br>The software provides installation versions for multiple platforms, and here we explain the process for Chrome.</p>\n<h2 id=\"Specific-Steps\"><a href=\"#Specific-Steps\" class=\"headerlink\" title=\"Specific Steps\"></a>Specific Steps</h2><p>There are two specific modifications to make. The first one is in listen1.html, at line #1906:</p>\n<p>Modify</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">ng</span>\\<span class=\"attr\">-if</span>\\=<span class=\"string\">&quot;currentPlaying.source === &#x27;xiami&#x27;&quot;</span> <span class=\"attr\">style</span>\\=<span class=\"string\">&quot;color: orange; font-size: medium&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>⚠️ &lt;/span</span><br><span class=\"line\">    &gt;&#123;&#123; currentPlaying.title &#125;&#125;</span><br><span class=\"line\">                            <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">to</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;title&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">span</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">ng</span>\\<span class=\"attr\">-if</span>\\=<span class=\"string\">&quot;currentPlaying.source === &#x27;xiami&#x27;&quot;</span> <span class=\"attr\">style</span>\\=<span class=\"string\">&quot;color: orange; font-size: medium&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    &gt;</span>⚠️ &lt;/span</span><br><span class=\"line\">    &gt;&#123;&#123; currentPlaying.title &#125;&#125; <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;download\\_music&quot;</span> <span class=\"attr\">download</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;title ng-binding&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;\\_blank&quot;</span>&gt;</span>Download<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Here, I added opening in a new window and set the original author’s download to an empty value due to security reasons. Thus, cross-domain issues remain unresolved. The downside of this setting is the manual renaming of saved song titles.</p>\n<p>The second modification is in js&#x2F;loweb.js at line #396:</p>\n<p>Change</p>\n<p>Promise.all(getUrlPromises)<br>.then(playerFailCallback)<br>.catch((response) &#x3D;&gt; {<br>playerSuccessCallback(response);<br>});</p>\n<p>to</p>\n<p>Promise.all(getUrlPromises)<br>.then(playerFailCallback)<br>.catch((response) &#x3D;&gt; {<br>button &#x3D; document.getElementById(‘download_music’);<br>button.href &#x3D; sound.url;<br>playerSuccessCallback(response);<br>});</p>\n<p>Once these two changes are made, the installation is complete.</p>\n<p>How to install: Due to security reasons, Chrome prohibits installation from non-Chrome Web Store links. Therefore, download the listen1_chrome_extension-2.27.0.zip file to your local machine, then complete the above two-step process. Open the chrome:&#x2F;&#x2F;extensions&#x2F; page, and directly drag the .crx file into the browser to install.</p>\n<h3 id=\"Specific-Steps-to-Generate-Chrome-crx\"><a href=\"#Specific-Steps-to-Generate-Chrome-crx\" class=\"headerlink\" title=\"Specific Steps to Generate Chrome .crx\"></a>Specific Steps to Generate Chrome .crx</h3><ol>\n<li>Open the Chrome browser and go to chrome:&#x2F;&#x2F;extensions&#x2F;</li>\n<li>On the top right, enable Developer mode</li>\n<li>Click the button in the middle of the three dots: Pack extension</li>\n<li>Choose the folder where you unzipped the file (default folder name: listen1_chrome_extension-2.27.0) and make the two aforementioned file modifications in this folder</li>\n<li>Click Pack extension, which will generate two files: listen1_chrome_extension-2.27.0.crx and listen1_chrome_extension-2.27.0.pem</li>\n<li>Drag the .crx file into the browser (chrome:&#x2F;&#x2F;extensions&#x2F;) for installation.</li>\n</ol>\n<h3 id=\"Steps-to-Create-the-Firefox-Plug-in-Version\"><a href=\"#Steps-to-Create-the-Firefox-Plug-in-Version\" class=\"headerlink\" title=\"Steps to Create the Firefox Plug-in Version\"></a>Steps to Create the Firefox Plug-in Version</h3><p>(1) First, download the relevant code from github: <a href=\"https://github.com/listen1/listen1/_chrome/_extension\">https://github.com/listen1/listen1\\_chrome\\_extension</a><br>(2) After downloading and unzipping the folder, delete the manifest.json file and rename manifest_firefox.json to manifest.json<br>(3) Enter the command line interface (shortcut keys: win+r, Mac: terminal), navigate to the unzipped directory: cd listen1_chrome_extension-2.10.0 , execute zip -r ..&#x2F;listen1.xpi * , and then find the listen1.xpi file in the parent directory.</p>\n<p>zip -r ..&#x2F;listen1.xpi *</p>\n<p>(4) (Requires <a href=\"https://www.mozilla.org/en-US/firefox/developer/\">Firefox’s development version Firefox Browser Developer Edition</a>, tested in February 2023) Enter about:config in the Firefox address bar and, regardless of the prompts, click OK. Then search for the preference name xpinstall.signatures.required and switch this option to false.</p>\n<p>(5) Go to Add-ons &gt; Extensions &gt; Manage Your Extensions &gt; Settings &gt; Install Add-on from file, and select the newly packaged .xpi file (default name: listen1.xpi) to add.</p>\n<p>After installation, the downloading function is still under testing and will hopefully be further improved.</p>\n<p>After installing this Chrome or Firefox extension, we can use the browser’s debugging tool’s Network tab to view the media files being played (MP3, FLAC, etc.)</p>\n<p>Adding Download Function to Listen 1 Chrome Edition Version 2.27.0<br>Reference document:</p>\n<p>Author: ttys000<br>Link: <a href=\"https://juejin.cn/post/6878428772249370631\">https://juejin.cn/post/6878428772249370631</a><br>Source: Rare Earth Gold<br>All rights to the article belong to the author. For commercial reprint, please contact the author for permission. For non-commercial reprint, please indicate the source.<br>Original link: <a href=\"https://blog.csdn.net/weixin/_40562999/article/details/108943445\">https://blog.csdn.net/weixin\\_40562999/article/details/108943445</a></p>\n<hr>\n<h1 id=\"One-line-Command-to-Set-Up-the-Online-Music-Player-mmplayer-using-Docker\"><a href=\"#One-line-Command-to-Set-Up-the-Online-Music-Player-mmplayer-using-Docker\" class=\"headerlink\" title=\"One-line Command to Set Up the Online Music Player mmplayer using Docker\"></a>One-line Command to Set Up the Online Music Player mmplayer using Docker</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name mmPlayer --restart always -dit -p 8300:80 yaonew/mmplayer</span><br></pre></td></tr></table></figure>\n\n<p>Trial access: <a href=\"https://c.carlzeng.top:4443/mp3\">https://c.carlzeng.top:4443/mp3</a></p>\n<ol>\n<li>Open <a href=\"https://c.carlzeng.top:4443/mp3\">mmPlayer Online Music Player</a></li>\n<li>Click the “Search” button</li>\n<li>Input the music name or artist you want to search for</li>\n<li>Hover over the search results, where a play button will appear. Click to play, or download</li>\n</ol>\n<p>Source: <a href=\"https://hub.docker.com/r/yaonew/mmplayer\">https://hub.docker.com/r/yaonew/mmplayer</a></p>\n<h2 id=\"Configuration-Optional\"><a href=\"#Configuration-Optional\" class=\"headerlink\" title=\"Configuration [Optional]\"></a>Configuration [Optional]</h2><figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name mmPlayer --restart always -dit -p 8300:80 -v ./index.html:/app/dist/index.html -v ./prompt.html:/app/dist/prompt.html yaonew/mmplayer</span><br></pre></td></tr></table></figure>\n\n<p>Switch to docker-compose</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&quot;3&quot;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">    <span class=\"attr\">mmplayer:</span></span><br><span class=\"line\">        <span class=\"attr\">container_name:</span> <span class=\"string\">mmPlayer</span></span><br><span class=\"line\">        <span class=\"attr\">restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\">        <span class=\"attr\">stdin_open:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">tty:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"attr\">ports:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"number\">8300</span><span class=\"string\">:80</span></span><br><span class=\"line\">        <span class=\"attr\">volumes:</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">./index.html:/app/dist/index.html</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">./prompt.html:/app/dist/prompt.html</span></span><br><span class=\"line\">            <span class=\"bullet\">-</span> <span class=\"string\">./favicon.ico:/app/dist/favicon.ico</span></span><br><span class=\"line\">        <span class=\"attr\">image:</span> <span class=\"string\">yaonew/mmplayer</span></span><br></pre></td></tr></table></figure>\n\n<p>After starting docker-compose, initially, the local port 8300 cannot be accessed.</p>\n<p>docker stop mmPlayer</p>\n<p>docker rm mmPlayer</p>\n<p>Then try a few times again, and it should work :-)</p>\n<p>Open firewall port, and map the homepage</p>\n<h1 id=\"TODO-Next-Step\"><a href=\"#TODO-Next-Step\" class=\"headerlink\" title=\"TODO Next Step\"></a>TODO Next Step</h1><p>Integrate into the node.js appsearch</p>\n<p>Instead of creating a new docker container, integrate it together, and open the sh script to automatically execute. It’s just too great.</p>\n<h2 id=\"Acknowledgments\"><a href=\"#Acknowledgments\" class=\"headerlink\" title=\"Acknowledgments\"></a>Acknowledgments</h2><p><a href=\"https://panda995.xyz/network/3878.html\">NAS-usable music player! Online playback, lyric display, playlist synchronization, this container is too powerful</a></p>\n<h2 id=\"Regret\"><a href=\"#Regret\" class=\"headerlink\" title=\"Regret\"></a>Regret</h2><p>This is designed for PC-based music listening. It cannot share music, such as sharing a specific favorite song with friends, or generate a long-lasting link.</p>\n<p>Do any of you know of a docker-deployed web version music player similar to the NeteaseCloudMusicApi, which can share a link (with picture and playback functionality)? Leave a comment and let me know if it’s good or not.</p>","categories":[{"name":"Music","path":"api/categories/Music.json"}],"tags":[{"name":"Music","path":"api/tags/Music.json"},{"name":"Music Download","path":"api/tags/Music Download.json"},{"name":"Music Player","path":"api/tags/Music Player.json"},{"name":"Android Phone","path":"api/tags/Android Phone.json"}]}