{"title":"Child's Phone Anti-Addiction - Router Scheduled Network Disconnection","slug":"孩子手机防沉迷之定时路由器端断网","date":"2023-12-07T08:25:36.000Z","updated":"2024-10-25T14:42:55.706Z","comments":true,"path":"api/articles/孩子手机防沉迷之定时路由器端断网.json","excerpt":" [Figure] Learn how to promptly schedule a network disconnection for a child’s phone (set-top box, iPad, electronic learning devices, and other similar devices).Enable control from another smartphone with just 1-2 buttons to schedule automatic network disconnection for a child’s phone (electronic device anti-addiction).","covers":["https://www.evernote.com/shard/s122/sh/4b7d3a56-0a2d-4487-9f08-e6c43e555709/86GFchghtZNA_PORS9sjFaFm4lBQDuNRqyRMRJbnN2OWDYt5HVmMjmh8Eg/deep/0/image.png"],"content":"<img class=\"lozad\" data-src=\"https://www.evernote.com/shard/s122/sh/4b7d3a56-0a2d-4487-9f08-e6c43e555709/86GFchghtZNA_PORS9sjFaFm4lBQDuNRqyRMRJbnN2OWDYt5HVmMjmh8Eg/deep/0/image.png\">\n\n<p>Learn how to promptly schedule a network disconnection for a child’s phone (set-top box, iPad, electronic learning devices, and other similar devices).</p>\n<p>Enable control from another smartphone with just 1-2 buttons to schedule automatic network disconnection for a child’s phone (electronic device anti-addiction).</p>\n<span id=\"more\"></span>\n\n<h1 id=\"What’s-the-Use\"><a href=\"#What’s-the-Use\" class=\"headerlink\" title=\"What’s the Use\"></a>What’s the Use</h1><p>Enable the phone with scheduled network disconnection using just 1-2 buttons from another smartphone.</p>\n<p>Advantages: Single-button operation without the need for subsequent actions; no need to touch the child’s phone. Since, under normal circumstances, the Wi-Fi and data networks of the phone are concurrently open, in this disconnection, the Wi-Fi connection remains intact (only the router discards the internet’s data packets). The phone continues to automatically send data to the Wi-Fi (router), yet it doesn’t receive the return data packets.</p>\n<p>Disadvantages: Deployment requires some computer knowledge, and the steps are a bit cumbersome.</p>\n<h2 id=\"Background-and-Personal-Application\"><a href=\"#Background-and-Personal-Application\" class=\"headerlink\" title=\"Background and Personal Application\"></a>Background and Personal Application</h2><p>Indeed, we have a “poop incentive” mechanism, where using the restroom allows for phone use.</p>\n<p>“Don’t laugh, this method is extremely effective, much more effective than modern hospital medical treatments for conditions caused by delayed bowel movements.”</p>\n<p>“We discovered that guidance with children is still primarily at the mental level and is quite critical and urgent.”</p>\n<p>However, the problem arises when children, enticed by prolonged phone use, spend an extended period (over half an hour) in the restroom. While it serves the purpose of using the restroom, it also comes with side effects. After several attempts with verbal reminders, the desired impact wasn’t achieved, causing frustration and tense atmospheres.</p>\n<p>Suddenly, the idea emerged that iPads use the OP’s iptables command to discard data packets (restricting external internet access). So why not automatically remind children to end “restroom” time by timely or scheduled limitations on their device’s internet access? How convenient would it be for parents to quickly schedule the closure of network access and then automatically restore the device’s internet access 10 minutes later? This functionality could be easily achieved using shell or python.</p>\n<p>For areas where assistance is needed, don’t hesitate to inquire online at <a href=\"https://c.carlzeng.com:3/chat\">ChatGPT</a>.</p>\n<h1 id=\"How-to-Use\"><a href=\"#How-to-Use\" class=\"headerlink\" title=\"How to Use\"></a>How to Use</h1><p>Current prerequisite conditions: Your home router needs to be able to install Python (this requirement is relatively high).</p>\n<p>One could modify the script to a shell version. This way, even low-cost routers such as the K2P or similar (with a flashed system) could support it.</p>\n<ol>\n<li>When the child needs to use the electronic device, inform them in advance: they can only use it for 15 minutes (the specific time can be adjusted according to individual circumstances). After the time is up, the device will automatically disconnect from the network.<ol>\n<li>After obtaining their consent, unlock the phone (or set-top box, etc.) for the child to use.</li>\n</ol>\n</li>\n<li>Open the parent’s phone, log in to ConnectBot (or any other SSH tool on Android or iOS), and simply run the Python command.<ol>\n<li>With one command, the parent doesn’t need to take any further action. The program will automatically disconnect the specific electronic device from the network at the designated time and then restore it after a certain period (at which point, the phone is already locked).</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"Related-Content\"><a href=\"#Related-Content\" class=\"headerlink\" title=\"Related Content\"></a>Related Content</h1><p>If you are interested in <a href=\"https://www.carlzeng.com/search?q=openwrt\">OpenWrt</a> or related content, the following information may be helpful for you:</p>\n<iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.com:3/appsearch?q=openwrt\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"Implementation-Method\"><a href=\"#Implementation-Method\" class=\"headerlink\" title=\"Implementation Method\"></a>Implementation Method</h1><p>Below is an example using routers with an OpenWrt system (hosting a Python environment) and an Android phone:</p>\n<p>The following two aspects are needed; no other settings are required, and no apps need to be installed.</p>\n<h2 id=\"Setting-Up-the-Router-Side\"><a href=\"#Setting-Up-the-Router-Side\" class=\"headerlink\" title=\"Setting Up the Router Side\"></a>Setting Up the Router Side</h2><p>Log into the router’s SSH from a computer or phone,</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /root</span><br><span class=\"line\"></span><br><span class=\"line\">vi laShiPhone.py</span><br><span class=\"line\"></span><br><span class=\"line\">Paste the following code (adjust as necessary) and complete:</span><br><span class=\"line\">esc</span><br><span class=\"line\">:wq</span><br><span class=\"line\">import subprocess</span><br><span class=\"line\">import time</span><br><span class=\"line\">import sys</span><br><span class=\"line\"></span><br><span class=\"line\">def disable_network(mac_address):</span><br><span class=\"line\">    subprocess.run([&#x27;iptables&#x27;, &#x27;-I&#x27;, &#x27;FORWARD&#x27;, &#x27;-m&#x27;, &#x27;mac&#x27;, &#x27;--mac-source&#x27;, mac_address, &#x27;-j&#x27;, &#x27;DROP&#x27;])</span><br><span class=\"line\"></span><br><span class=\"line\">def enable_network(mac_address):</span><br><span class=\"line\">    subprocess.run([&#x27;iptables&#x27;, &#x27;-D&#x27;, &#x27;FORWARD&#x27;, &#x27;-m&#x27;, &#x27;mac&#x27;, &#x27;--mac-source&#x27;, mac_address, &#x27;-j&#x27;, &#x27;DROP&#x27;])</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">MAC address, modify to the MAC address of the child<span class=\"string\">&#x27;s phone (can be checked in the router)</span></span></span><br><span class=\"line\">mac_address = &#x27;1E:2B:D2:A8:D1:AA&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">enable_network(mac_address)</span><br><span class=\"line\">print(&#x27;1. Open Network 15min for &#x27; + mac_address + &#x27;. Time: &#x27; + time.ctime())</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Wait for 15 minutes</span></span></span><br><span class=\"line\">time.sleep(15 * 60)</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Close the network connection</span></span></span><br><span class=\"line\">disable_network(mac_address)</span><br><span class=\"line\">print(&#x27;2. Done CLOSED Network, will open it 15min later. Time: &#x27; + time.ctime())</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Wait for another 15 minutes</span></span></span><br><span class=\"line\">time.sleep(15 * 60)</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Open the network connection</span></span></span><br><span class=\"line\">enable_network(mac_address)</span><br><span class=\"line\">print(&#x27;3. Done Open Network, exit()&#x27;)</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Exit the script</span></span></span><br><span class=\"line\">sys.exit(0)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"How-to-Find-the-MAC-Address-of-Devices-such-as-Phones\"><a href=\"#How-to-Find-the-MAC-Address-of-Devices-such-as-Phones\" class=\"headerlink\" title=\"How to Find the MAC Address of Devices such as Phones\"></a>How to Find the MAC Address of Devices such as Phones</h3><p>Open the OpenWrt web interface and check the connected devices.</p>\n<p>Here is my personal <a href=\"http://192.168.6.1:8080/cgi-bin/luci/admin/status/overview\">URL for checking</a>.</p>\n<h2 id=\"Setting-Up-the-Controlling-Smartphone\"><a href=\"#Setting-Up-the-Controlling-Smartphone\" class=\"headerlink\" title=\"Setting Up the Controlling Smartphone\"></a>Setting Up the Controlling Smartphone</h2><p>(Example using an Android phone)</p>\n<ol>\n<li>Download and install the open-source SSH client: ConnectBot.<ol>\n<li>Download link: download ConnectBot from our <a href=\"https://github.com/connectbot/connectbot/releases\">releases page</a> <a href=\"https://github.com/connectbot/connectbot/releases/\">https://github.com/connectbot/connectbot/releases/</a></li>\n</ol>\n</li>\n<li>(One-time setup) Generate a key using ConnectBot.<ol>\n<li>Select the top right corner (three dots).</li>\n<li>Manage Keys.</li>\n<li>Top right corner (plus sign).<ol>\n<li>Enter a key name (for self-identification).</li>\n<li>Default RSA type.</li>\n<li>1024 bits is sufficient.</li>\n<li>Password: can be left empty for use within a home LAN.</li>\n<li>Generate.</li>\n<li>Follow the guide: randomly swipe the screen until the key is fully generated (100% progress).</li>\n<li>Top right corner (three dots) “Copy Public Key” (use it later in step three for pasting).</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>(One-time setup) Set up a new host connection.<ol>\n<li>Plus sign at the bottom right.</li>\n<li>Enter (with SSH enabled): username@router’s IP address, e.g., <a href=\"mailto:&#114;&#x6f;&#x6f;&#116;&#x40;&#x31;&#57;&#x32;&#x2e;&#49;&#x36;&#x38;&#x2e;&#x31;&#50;&#x33;&#46;&#49;\">&#114;&#x6f;&#x6f;&#116;&#x40;&#x31;&#57;&#x32;&#x2e;&#49;&#x36;&#x38;&#x2e;&#x31;&#50;&#x33;&#46;&#49;</a>.</li>\n<li>Click “Use Authentication Key.”<ol>\n<li>Choose the previously saved key.</li>\n</ol>\n</li>\n<li>“Post-login automation”<ol>\n<li>Write: python &#x2F;root&#x2F;laShiPhone.py.</li>\n</ol>\n</li>\n<li>Save</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"Returning-to-the-Router-Settings-for-Passwordless-Login\"><a href=\"#Returning-to-the-Router-Settings-for-Passwordless-Login\" class=\"headerlink\" title=\"Returning to the Router Settings for Passwordless Login\"></a>Returning to the Router Settings for Passwordless Login</h2><p>Refer to <a href=\"http://doc.aiwaly.com/docs/arm/arm-1eub39jsnsnvm\">Passwordless Login to OpenWrt via SSH</a></p>\n<ol>\n<li>SSH into the router and either create or edit (&#x2F;if already exists authorized_keys file)</li>\n<li>Paste the content from the step 2 (Setup Controlling Smartphone &gt; Operation ConnectBot Generate Key &gt; Copy Public Key).</li>\n<li>Save authorized_keys. After copying is complete, log in normally once to the target host.</li>\n<li>After logout, log in once more. At this point, the SSH key should automatically log into the target host (without needing to enter a password).</li>\n</ol>\n<h1 id=\"Practice-Operational\"><a href=\"#Practice-Operational\" class=\"headerlink\" title=\"Practice Operational\"></a>Practice Operational</h1><ol>\n<li>Open the controlling smartphone.</li>\n<li>Tap the saved hostname (it will log in automatically).</li>\n<li>Press Enter to start the one-click process (the command set in “Post-login automation” will run automatically after login).</li>\n</ol>\n<h1 id=\"Other-Situations\"><a href=\"#Other-Situations\" class=\"headerlink\" title=\"Other Situations\"></a>Other Situations</h1><p>You might say, “What if my router doesn’t have a Python environment, and it’s one of those simple OpenWrt systems?”</p>\n<p>In that case, you can inquire from <a href=\"https://c.carlzeng.com:3/chat\">ChatGPT</a> and convert the script to a shell version. The only difference will be to execute using chmod and then run: . &#x2F;XXX.sh. If you need more instructions, I can convert it into a shell version.</p>\n<h1 id=\"Inspiration-Sources\"><a href=\"#Inspiration-Sources\" class=\"headerlink\" title=\"Inspiration Sources\"></a>Inspiration Sources</h1><p><a href=\"https://www.carlzeng.com/202311042118.html\">iPad Activation Lock Bypass Experience</a></p>\n<p><a href=\"https://www.etaozj.com/info/723.html\">ConnectBot Passwordless Login</a></p>\n<p><a href=\"https://3mile.github.io/archives/2020/0312120820/\">SSH Key Login with OpenWrt</a></p>\n<h2 id=\"Circumventing-a-Roundabout-Process\"><a href=\"#Circumventing-a-Roundabout-Process\" class=\"headerlink\" title=\"Circumventing a Roundabout Process\"></a>Circumventing a Roundabout Process</h2><p>【Optional Step】For safety reasons, to create a new user on OpenWrt:</p>\n<p>SSH into the router<br>vim to open the passwd file, command: vim &#x2F;etc&#x2F;passwd<br>Insert at the end: (enter i in vim to enable editing)</p>\n<p>Username:*:UserID:GroupID:Three commas:&#x2F;home&#x2F;username:&#x2F;bin&#x2F;bash</p>\n<p>Example: user123:*:1000:1000:,,,:&#x2F;home&#x2F;user123:&#x2F;bin&#x2F;bash</p>\n<p>Be sure to use all English, and it’s recommended that the ID be above 1000, not below 100. Check for accuracy and save (press esc to exit editing, then :wq to save and exit).</p>\n<p>Then edit the group file, command: vim &#x2F;etc&#x2F;group<br>Similarly, insert at the end:</p>\n<p>Groupname:*:GroupID:</p>\n<p>Example: user123:*:1000:</p>\n<p>I found some downsides of Termius,<br>it has many limitations, after all, it’s a paid software</p>\n<p>Switching back to ConnectBot, I realized that passwordless login was just as easy and even more secure.</p>\n<h1 id=\"Improvement\"><a href=\"#Improvement\" class=\"headerlink\" title=\"Improvement\"></a>Improvement</h1><p>Upon accessing ConnectBot on the mobile device, configured for automatic router login and preset default commands, the process becomes quite convenient. It enables selective temporary disabling of specific electronic devices’ internet access via maintaining different clients.</p>\n<p>However, upon discovering that once the mobile device exits ConnectBot, the command ceases to execute—regardless of whether it was in the midst of a 15-minute wait period or just idling.</p>\n<h2 id=\"Enabling-Python-Program-to-Run-in-the-Background\"><a href=\"#Enabling-Python-Program-to-Run-in-the-Background\" class=\"headerlink\" title=\"Enabling Python Program to Run in the Background\"></a>Enabling Python Program to Run in the Background</h2><p>Utilize “nohup” (no hand up). By prefixing a command with “nohup,” the program will execute in the background. Subsequently, we can review “nohup.out” afterwards to glimpse certain information or use “ps” to verify whether the command “python &#x2F;root&#x2F;laShiPhone.py” exists (it disappears after approximately 30 minutes).</p>\n<p>The default execution has transformed to: “nohup python &#x2F;root&#x2F;laShiPhone.py”</p>\n<h1 id=\"Next-Steps\"><a href=\"#Next-Steps\" class=\"headerlink\" title=\"Next Steps\"></a>Next Steps</h1><p>Currently seeking a solution, contemplating:</p>\n<p>Embedding an anti-addiction system into the mobile device</p>\n<p>Xiaomi K40</p>\n<p>Android screen time management application</p>\n<p>Mobile device’s adolescent mode</p>\n<p>Child space feature</p>\n<p>Having attempted to install the child space feature from Oppo on my OnePlus device, an error message appeared: “Unable to parse package.”</p>\n<p>Returning to the original solution, given the device is already rooted, directly <strong>deleting system’s pre-installed browser, app store,</strong> and other default applications.</p>\n<h1 id=\"Removing-the-App-Store\"><a href=\"#Removing-the-App-Store\" class=\"headerlink\" title=\"Removing the App Store\"></a>Removing the App Store</h1><p>Within &#x2F;system&#x2F;app, I located OnePlus’ modified system pre-installed browser derived from Tencent’s. It was removed.</p>\n<p>Unable to locate “App Store,” the solution lay in leveraging the adb tool:</p>\n<ol>\n<li>Connect OnePlus 5T to the computer</li>\n<li>Manage apps using adb (Android system package):</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.ssh % adb -s 5d817fad shell pm list packages | grep market                 </span><br><span class=\"line\">package:com.oppo.market  </span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">The <span class=\"built_in\">command</span> to use should be: adb -s 5d817fad shell pm uninstall -k --user 0 com.oppo.market</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">adb -s 5d817fad shell pm uninstall -k --user 0 com.oppo.market</span></span><br><span class=\"line\">Success</span><br></pre></td></tr></table></figure>\n\n<p>Later, it was discovered that some applications were installed in: &#x2F;system&#x2F;reserve.</p>\n<p>This “pm uninstall” command works universally on all Android devices and can be utilized on any Android system.</p>\n<p>This section is indebted to:</p>\n<p><a href=\"https://www.v2ex.com/t/699878\">https://www.v2ex.com/t/699878</a></p>\n<p><a href=\"https://bbs.oneplus.com/thread/6003405\">精简oppo系统 coloros13 adb停用删除自带app，卸载快应用</a></p>\n","more":"<h1 id=\"What’s-the-Use\"><a href=\"#What’s-the-Use\" class=\"headerlink\" title=\"What’s the Use\"></a>What’s the Use</h1><p>Enable the phone with scheduled network disconnection using just 1-2 buttons from another smartphone.</p>\n<p>Advantages: Single-button operation without the need for subsequent actions; no need to touch the child’s phone. Since, under normal circumstances, the Wi-Fi and data networks of the phone are concurrently open, in this disconnection, the Wi-Fi connection remains intact (only the router discards the internet’s data packets). The phone continues to automatically send data to the Wi-Fi (router), yet it doesn’t receive the return data packets.</p>\n<p>Disadvantages: Deployment requires some computer knowledge, and the steps are a bit cumbersome.</p>\n<h2 id=\"Background-and-Personal-Application\"><a href=\"#Background-and-Personal-Application\" class=\"headerlink\" title=\"Background and Personal Application\"></a>Background and Personal Application</h2><p>Indeed, we have a “poop incentive” mechanism, where using the restroom allows for phone use.</p>\n<p>“Don’t laugh, this method is extremely effective, much more effective than modern hospital medical treatments for conditions caused by delayed bowel movements.”</p>\n<p>“We discovered that guidance with children is still primarily at the mental level and is quite critical and urgent.”</p>\n<p>However, the problem arises when children, enticed by prolonged phone use, spend an extended period (over half an hour) in the restroom. While it serves the purpose of using the restroom, it also comes with side effects. After several attempts with verbal reminders, the desired impact wasn’t achieved, causing frustration and tense atmospheres.</p>\n<p>Suddenly, the idea emerged that iPads use the OP’s iptables command to discard data packets (restricting external internet access). So why not automatically remind children to end “restroom” time by timely or scheduled limitations on their device’s internet access? How convenient would it be for parents to quickly schedule the closure of network access and then automatically restore the device’s internet access 10 minutes later? This functionality could be easily achieved using shell or python.</p>\n<p>For areas where assistance is needed, don’t hesitate to inquire online at <a href=\"https://c.carlzeng.com:3/chat\">ChatGPT</a>.</p>\n<h1 id=\"How-to-Use\"><a href=\"#How-to-Use\" class=\"headerlink\" title=\"How to Use\"></a>How to Use</h1><p>Current prerequisite conditions: Your home router needs to be able to install Python (this requirement is relatively high).</p>\n<p>One could modify the script to a shell version. This way, even low-cost routers such as the K2P or similar (with a flashed system) could support it.</p>\n<ol>\n<li>When the child needs to use the electronic device, inform them in advance: they can only use it for 15 minutes (the specific time can be adjusted according to individual circumstances). After the time is up, the device will automatically disconnect from the network.<ol>\n<li>After obtaining their consent, unlock the phone (or set-top box, etc.) for the child to use.</li>\n</ol>\n</li>\n<li>Open the parent’s phone, log in to ConnectBot (or any other SSH tool on Android or iOS), and simply run the Python command.<ol>\n<li>With one command, the parent doesn’t need to take any further action. The program will automatically disconnect the specific electronic device from the network at the designated time and then restore it after a certain period (at which point, the phone is already locked).</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"Related-Content\"><a href=\"#Related-Content\" class=\"headerlink\" title=\"Related Content\"></a>Related Content</h1><p>If you are interested in <a href=\"https://www.carlzeng.com/search?q=openwrt\">OpenWrt</a> or related content, the following information may be helpful for you:</p>\n<iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.com:3/appsearch?q=openwrt\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"Implementation-Method\"><a href=\"#Implementation-Method\" class=\"headerlink\" title=\"Implementation Method\"></a>Implementation Method</h1><p>Below is an example using routers with an OpenWrt system (hosting a Python environment) and an Android phone:</p>\n<p>The following two aspects are needed; no other settings are required, and no apps need to be installed.</p>\n<h2 id=\"Setting-Up-the-Router-Side\"><a href=\"#Setting-Up-the-Router-Side\" class=\"headerlink\" title=\"Setting Up the Router Side\"></a>Setting Up the Router Side</h2><p>Log into the router’s SSH from a computer or phone,</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /root</span><br><span class=\"line\"></span><br><span class=\"line\">vi laShiPhone.py</span><br><span class=\"line\"></span><br><span class=\"line\">Paste the following code (adjust as necessary) and complete:</span><br><span class=\"line\">esc</span><br><span class=\"line\">:wq</span><br><span class=\"line\">import subprocess</span><br><span class=\"line\">import time</span><br><span class=\"line\">import sys</span><br><span class=\"line\"></span><br><span class=\"line\">def disable_network(mac_address):</span><br><span class=\"line\">    subprocess.run([&#x27;iptables&#x27;, &#x27;-I&#x27;, &#x27;FORWARD&#x27;, &#x27;-m&#x27;, &#x27;mac&#x27;, &#x27;--mac-source&#x27;, mac_address, &#x27;-j&#x27;, &#x27;DROP&#x27;])</span><br><span class=\"line\"></span><br><span class=\"line\">def enable_network(mac_address):</span><br><span class=\"line\">    subprocess.run([&#x27;iptables&#x27;, &#x27;-D&#x27;, &#x27;FORWARD&#x27;, &#x27;-m&#x27;, &#x27;mac&#x27;, &#x27;--mac-source&#x27;, mac_address, &#x27;-j&#x27;, &#x27;DROP&#x27;])</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">MAC address, modify to the MAC address of the child<span class=\"string\">&#x27;s phone (can be checked in the router)</span></span></span><br><span class=\"line\">mac_address = &#x27;1E:2B:D2:A8:D1:AA&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">enable_network(mac_address)</span><br><span class=\"line\">print(&#x27;1. Open Network 15min for &#x27; + mac_address + &#x27;. Time: &#x27; + time.ctime())</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Wait for 15 minutes</span></span></span><br><span class=\"line\">time.sleep(15 * 60)</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Close the network connection</span></span></span><br><span class=\"line\">disable_network(mac_address)</span><br><span class=\"line\">print(&#x27;2. Done CLOSED Network, will open it 15min later. Time: &#x27; + time.ctime())</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Wait for another 15 minutes</span></span></span><br><span class=\"line\">time.sleep(15 * 60)</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Open the network connection</span></span></span><br><span class=\"line\">enable_network(mac_address)</span><br><span class=\"line\">print(&#x27;3. Done Open Network, exit()&#x27;)</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"string\">Exit the script</span></span></span><br><span class=\"line\">sys.exit(0)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"How-to-Find-the-MAC-Address-of-Devices-such-as-Phones\"><a href=\"#How-to-Find-the-MAC-Address-of-Devices-such-as-Phones\" class=\"headerlink\" title=\"How to Find the MAC Address of Devices such as Phones\"></a>How to Find the MAC Address of Devices such as Phones</h3><p>Open the OpenWrt web interface and check the connected devices.</p>\n<p>Here is my personal <a href=\"http://192.168.6.1:8080/cgi-bin/luci/admin/status/overview\">URL for checking</a>.</p>\n<h2 id=\"Setting-Up-the-Controlling-Smartphone\"><a href=\"#Setting-Up-the-Controlling-Smartphone\" class=\"headerlink\" title=\"Setting Up the Controlling Smartphone\"></a>Setting Up the Controlling Smartphone</h2><p>(Example using an Android phone)</p>\n<ol>\n<li>Download and install the open-source SSH client: ConnectBot.<ol>\n<li>Download link: download ConnectBot from our <a href=\"https://github.com/connectbot/connectbot/releases\">releases page</a> <a href=\"https://github.com/connectbot/connectbot/releases/\">https://github.com/connectbot/connectbot/releases/</a></li>\n</ol>\n</li>\n<li>(One-time setup) Generate a key using ConnectBot.<ol>\n<li>Select the top right corner (three dots).</li>\n<li>Manage Keys.</li>\n<li>Top right corner (plus sign).<ol>\n<li>Enter a key name (for self-identification).</li>\n<li>Default RSA type.</li>\n<li>1024 bits is sufficient.</li>\n<li>Password: can be left empty for use within a home LAN.</li>\n<li>Generate.</li>\n<li>Follow the guide: randomly swipe the screen until the key is fully generated (100% progress).</li>\n<li>Top right corner (three dots) “Copy Public Key” (use it later in step three for pasting).</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>(One-time setup) Set up a new host connection.<ol>\n<li>Plus sign at the bottom right.</li>\n<li>Enter (with SSH enabled): username@router’s IP address, e.g., <a href=\"mailto:&#114;&#x6f;&#x6f;&#116;&#x40;&#x31;&#57;&#x32;&#x2e;&#49;&#x36;&#x38;&#x2e;&#x31;&#50;&#x33;&#46;&#49;\">&#114;&#x6f;&#x6f;&#116;&#x40;&#x31;&#57;&#x32;&#x2e;&#49;&#x36;&#x38;&#x2e;&#x31;&#50;&#x33;&#46;&#49;</a>.</li>\n<li>Click “Use Authentication Key.”<ol>\n<li>Choose the previously saved key.</li>\n</ol>\n</li>\n<li>“Post-login automation”<ol>\n<li>Write: python &#x2F;root&#x2F;laShiPhone.py.</li>\n</ol>\n</li>\n<li>Save</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"Returning-to-the-Router-Settings-for-Passwordless-Login\"><a href=\"#Returning-to-the-Router-Settings-for-Passwordless-Login\" class=\"headerlink\" title=\"Returning to the Router Settings for Passwordless Login\"></a>Returning to the Router Settings for Passwordless Login</h2><p>Refer to <a href=\"http://doc.aiwaly.com/docs/arm/arm-1eub39jsnsnvm\">Passwordless Login to OpenWrt via SSH</a></p>\n<ol>\n<li>SSH into the router and either create or edit (&#x2F;if already exists authorized_keys file)</li>\n<li>Paste the content from the step 2 (Setup Controlling Smartphone &gt; Operation ConnectBot Generate Key &gt; Copy Public Key).</li>\n<li>Save authorized_keys. After copying is complete, log in normally once to the target host.</li>\n<li>After logout, log in once more. At this point, the SSH key should automatically log into the target host (without needing to enter a password).</li>\n</ol>\n<h1 id=\"Practice-Operational\"><a href=\"#Practice-Operational\" class=\"headerlink\" title=\"Practice Operational\"></a>Practice Operational</h1><ol>\n<li>Open the controlling smartphone.</li>\n<li>Tap the saved hostname (it will log in automatically).</li>\n<li>Press Enter to start the one-click process (the command set in “Post-login automation” will run automatically after login).</li>\n</ol>\n<h1 id=\"Other-Situations\"><a href=\"#Other-Situations\" class=\"headerlink\" title=\"Other Situations\"></a>Other Situations</h1><p>You might say, “What if my router doesn’t have a Python environment, and it’s one of those simple OpenWrt systems?”</p>\n<p>In that case, you can inquire from <a href=\"https://c.carlzeng.com:3/chat\">ChatGPT</a> and convert the script to a shell version. The only difference will be to execute using chmod and then run: . &#x2F;XXX.sh. If you need more instructions, I can convert it into a shell version.</p>\n<h1 id=\"Inspiration-Sources\"><a href=\"#Inspiration-Sources\" class=\"headerlink\" title=\"Inspiration Sources\"></a>Inspiration Sources</h1><p><a href=\"https://www.carlzeng.com/202311042118.html\">iPad Activation Lock Bypass Experience</a></p>\n<p><a href=\"https://www.etaozj.com/info/723.html\">ConnectBot Passwordless Login</a></p>\n<p><a href=\"https://3mile.github.io/archives/2020/0312120820/\">SSH Key Login with OpenWrt</a></p>\n<h2 id=\"Circumventing-a-Roundabout-Process\"><a href=\"#Circumventing-a-Roundabout-Process\" class=\"headerlink\" title=\"Circumventing a Roundabout Process\"></a>Circumventing a Roundabout Process</h2><p>【Optional Step】For safety reasons, to create a new user on OpenWrt:</p>\n<p>SSH into the router<br>vim to open the passwd file, command: vim &#x2F;etc&#x2F;passwd<br>Insert at the end: (enter i in vim to enable editing)</p>\n<p>Username:*:UserID:GroupID:Three commas:&#x2F;home&#x2F;username:&#x2F;bin&#x2F;bash</p>\n<p>Example: user123:*:1000:1000:,,,:&#x2F;home&#x2F;user123:&#x2F;bin&#x2F;bash</p>\n<p>Be sure to use all English, and it’s recommended that the ID be above 1000, not below 100. Check for accuracy and save (press esc to exit editing, then :wq to save and exit).</p>\n<p>Then edit the group file, command: vim &#x2F;etc&#x2F;group<br>Similarly, insert at the end:</p>\n<p>Groupname:*:GroupID:</p>\n<p>Example: user123:*:1000:</p>\n<p>I found some downsides of Termius,<br>it has many limitations, after all, it’s a paid software</p>\n<p>Switching back to ConnectBot, I realized that passwordless login was just as easy and even more secure.</p>\n<h1 id=\"Improvement\"><a href=\"#Improvement\" class=\"headerlink\" title=\"Improvement\"></a>Improvement</h1><p>Upon accessing ConnectBot on the mobile device, configured for automatic router login and preset default commands, the process becomes quite convenient. It enables selective temporary disabling of specific electronic devices’ internet access via maintaining different clients.</p>\n<p>However, upon discovering that once the mobile device exits ConnectBot, the command ceases to execute—regardless of whether it was in the midst of a 15-minute wait period or just idling.</p>\n<h2 id=\"Enabling-Python-Program-to-Run-in-the-Background\"><a href=\"#Enabling-Python-Program-to-Run-in-the-Background\" class=\"headerlink\" title=\"Enabling Python Program to Run in the Background\"></a>Enabling Python Program to Run in the Background</h2><p>Utilize “nohup” (no hand up). By prefixing a command with “nohup,” the program will execute in the background. Subsequently, we can review “nohup.out” afterwards to glimpse certain information or use “ps” to verify whether the command “python &#x2F;root&#x2F;laShiPhone.py” exists (it disappears after approximately 30 minutes).</p>\n<p>The default execution has transformed to: “nohup python &#x2F;root&#x2F;laShiPhone.py”</p>\n<h1 id=\"Next-Steps\"><a href=\"#Next-Steps\" class=\"headerlink\" title=\"Next Steps\"></a>Next Steps</h1><p>Currently seeking a solution, contemplating:</p>\n<p>Embedding an anti-addiction system into the mobile device</p>\n<p>Xiaomi K40</p>\n<p>Android screen time management application</p>\n<p>Mobile device’s adolescent mode</p>\n<p>Child space feature</p>\n<p>Having attempted to install the child space feature from Oppo on my OnePlus device, an error message appeared: “Unable to parse package.”</p>\n<p>Returning to the original solution, given the device is already rooted, directly <strong>deleting system’s pre-installed browser, app store,</strong> and other default applications.</p>\n<h1 id=\"Removing-the-App-Store\"><a href=\"#Removing-the-App-Store\" class=\"headerlink\" title=\"Removing the App Store\"></a>Removing the App Store</h1><p>Within &#x2F;system&#x2F;app, I located OnePlus’ modified system pre-installed browser derived from Tencent’s. It was removed.</p>\n<p>Unable to locate “App Store,” the solution lay in leveraging the adb tool:</p>\n<ol>\n<li>Connect OnePlus 5T to the computer</li>\n<li>Manage apps using adb (Android system package):</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.ssh % adb -s 5d817fad shell pm list packages | grep market                 </span><br><span class=\"line\">package:com.oppo.market  </span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">The <span class=\"built_in\">command</span> to use should be: adb -s 5d817fad shell pm uninstall -k --user 0 com.oppo.market</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">adb -s 5d817fad shell pm uninstall -k --user 0 com.oppo.market</span></span><br><span class=\"line\">Success</span><br></pre></td></tr></table></figure>\n\n<p>Later, it was discovered that some applications were installed in: &#x2F;system&#x2F;reserve.</p>\n<p>This “pm uninstall” command works universally on all Android devices and can be utilized on any Android system.</p>\n<p>This section is indebted to:</p>\n<p><a href=\"https://www.v2ex.com/t/699878\">https://www.v2ex.com/t/699878</a></p>\n<p><a href=\"https://bbs.oneplus.com/thread/6003405\">精简oppo系统 coloros13 adb停用删除自带app，卸载快应用</a></p>","categories":[{"name":"Router","path":"api/categories/Router.json"}],"tags":[{"name":"Phone","path":"api/tags/Phone.json"},{"name":"Anti-Addiction","path":"api/tags/Anti-Addiction.json"},{"name":"Python","path":"api/tags/Python.json"},{"name":"Shell","path":"api/tags/Shell.json"},{"name":"Router","path":"api/tags/Router.json"}]}