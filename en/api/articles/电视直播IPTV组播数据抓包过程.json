{"title":"联通和移动的电视直播IPTV组播数据抓包过程 - 播放组播IPTV数据源","slug":"电视直播IPTV组播数据抓包过程","date":"2023-12-21T01:34:56.000Z","updated":"2023-12-23T12:16:41.600Z","comments":true,"path":"api/articles/电视直播IPTV组播数据抓包过程.json","excerpt":" [Figure] 技术参考，理解IPTV组播原理","covers":["https://www.evernote.com/shard/s122/sh/b9cc9087-b87c-4f9b-8396-7379bcaa5c58/5eJusyLJHIHOTIxVeVS8J6uYqIj-mr6g8KIabe67tJCgSzyWcn-WZWaAJQ/deep/0/image.png","https://www.evernote.com/shard/s122/sh/1ed67490-bf71-4e18-99fb-4cdcf71e2ff4/yBl9mX140Oh5gdiTWM8WrO3ngCGlUf9TbN7ZdT0jmfu2APYITPfIjBgC2w/deep/0/image.png"],"content":"<img class=\"lozad\" data-src=\"\">\n\n<p>技术参考，理解IPTV组播原理</p>\n<span id=\"more\"></span>\n\n<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>技术参考，理解IPTV组播原理；经历2天时间的实践，曲折过程，成功把组播转单播播放</p>\n<p>实测某地联通和移动的IPTV组播数据实时播放电视直播</p>\n<p>具体描述如何接线及检查光猫IPTV口是否有组播数据</p>\n<h1 id=\"怎么用\"><a href=\"#怎么用\" class=\"headerlink\" title=\"怎么用\"></a>怎么用</h1><p>在光猫IPTV口 和 机顶盒 的网线连接中间加进去一个Openwrt之类的路由，用于抓包</p>\n<p>这个方法不是一个完美方法，直接在IPTV口插上一台PC机（可以用来扫描ISP组播网络信息），用于抓包又抓包到机顶盒获取IPTV直播源的过程数据包</p>\n<p>可以参考这个流程，从中得到启发，应用在你独特的网络环境和特定的组播方案环境。</p>\n<p>如果你想要确定光猫IPTV口是否有组播数据：</p>\n<ul>\n<li>首先先确定ADSL光猫的IPTV口<ul>\n<li>一般光猫有4个网线口，一般IPTV口在第三个或第四个口，有的光猫会标记IPTV字样</li>\n</ul>\n</li>\n<li>如果上网的网络已经稳定，建议单独拿一个路由器（并另加一条网线）来测试IPTV组播数据</li>\n<li>先要去下载一份当地的组播数据的通用组播列表m3u文件<ul>\n<li>比如：<a href=\"https://github.com/qwerttvv/Beijing-IPTV\">qwerttvv&#x2F;Beijing-IPTV</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"预览\"><a href=\"#预览\" class=\"headerlink\" title=\"预览\"></a>预览</h1><p>开放测试步骤：</p>\n<ol>\n<li>打开<a href=\"https://c.carlzeng.top:3/iptv\">https://c.carlzeng.top:3/iptv</a> （或者直接使用下面已嵌入的页面）</li>\n<li>点击用户名user，输入密码: user</li>\n<li>点击 我的媒体中的“电视直播”，或者“最爱”</li>\n<li>点击 相应的电视台，比如 “BRTV 影视”</li>\n</ol>\n<iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://c.carlzeng.top:3/iptv\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"800\"></iframe>\n\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=iptv\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"实现过程\"><a href=\"#实现过程\" class=\"headerlink\" title=\"实现过程\"></a>实现过程</h1><p>在光猫IPTV口 和 机顶盒 的网线连接中间加进去一个Openwrt之类的路由，用于抓包（用路由器上运行tcpdmp）</p>\n<p>tcpdump -i any -w &#x2F;tmp&#x2F;iptv.cap</p>\n<p>继续下载。cap文件，用于下一步分析<br>    cp &#x2F;tmp&#x2F;iptv.cap &#x2F;www&#x2F;luci-static&#x2F;fonts&#x2F;iptv.cap<br>            cp: write error: No space left on device</p>\n<p>​\t\t\tmv: write error: No space left on device<br>​\t\t\tmv: can’t preserve times of ‘&#x2F;www&#x2F;luci-static&#x2F;fonts&#x2F;iptv.cap’: No space left on device<br>​\t\t\tmv: can’t preserve ownership of ‘&#x2F;www&#x2F;luci-static&#x2F;fonts&#x2F;iptv.cap’: No space left on device<br>​\t\t\tmv: can’t preserve permissions of ‘&#x2F;www&#x2F;luci-static&#x2F;fonts&#x2F;iptv.cap’: No space left on device</p>\n<pre><code>mount --bind /tmp/all.bin /www/web-static/fonts/icofont.eot \n\nhttp://192.168.1.2/luci-static/fonts/iptv.cap\n\n\n刷机中。。。（）准备组播转单播工具中\n\n\nphoniex-ralink-mt7621-k2p完美版本19216811-squashfs-sysupgrade.bin\n    cd /www/luci-static/resources\n&gt; tcpdump -i any -w iptv.cap\n    tcpdump: listening on any, link-type LINUX_SLL (Linux cooked), capture size 65535 bytes\n    ^C\n    47092 packets captured\n    758845 packets received by filter\n    710456 packets dropped by kernel\n\nOpenwrt可以通过http界面轻松下载到抓包文件\n    http://192.168.1.2/luci-static/resources/\n\noption #1，python3 iptvsearch.py\n抓到许多udp包 指向组播地址和端口，可为什么扫描不到呢？\t\n    在最后尝试python（iptvsearch.py）扫描\n    ip_start = &#39;239.3.1.215&#39;\n    ip_end =   &#39;239.3.1.251&#39;\n    for port1 in [8000,8001,4120]:\n仅扫描特定的iP端+端口，扫到6台（包含北京体育休闲）\n    北京体育休闲 rtp://239.3.1.243:8000\n增加timeout时间从1到3s，重新扫描该小IP段\n    仍然仅扫描到6台，明显就是找不到239.3.1.215的4220端口\n\n    用VLC播放，画面偶尔会卡断，怀疑是不是‘硬件加速’的功能在电脑播放器没有导致的\n\noption #2，尝试用（multicast-scanner.py）\n    这个是无效的工具。\n    [*] Finished in 0.0 second(s)\n    [*] 0.0 day(s) 0.0 hour(s) 0.0 minute(s) 0.0 second(s)\n\n    [*] No channels found\n继续抓包，应该是没有抓到重点的包，（担忧：packets dropped by kernel）\n    删除固件中自带的v2ray，节省出rom内存空间，用于抓包\n    移除以后，空间并没有增加，还是剩余800K\n\niptv(机顶盒开机卡死无法连接到盒端管理平台).cap\n    由于中间我插入了k2p路由器，用于tcpdump\n</code></pre>\n<p>所以简单的不做任何设置，在猫IPTV口和机顶盒中间加路由器会导致：机顶盒重新开始时，机顶盒开机卡死无法连接到盒端管理平台。</p>\n<p>继续抓包，中间应该查了什么步骤，导致机顶盒注册盒端管理平台不成。</p>\n<pre><code>https://www.youtube.com/watch?v=LTA0B437w_k&amp;t=366s\n    统一回复下：视频中接线图位置，有独立IPTV口的朋友，说明你们家的IPTV就是组播模式，而我的就是单播模式，如果属于组播模式的就是我演示的异地的情况，播放使用rtp来播放，固定IP+不同端口或者是固定不同IP+相同端口来代替不同的频道，组播的方式其实更简单，需要在光猫里面转换为直播源，由于我的不是所有无法演示，需要破解光猫以管理员身份登录光猫后台，然后去设置VLAN，具体这种方式网上教程一堆，搜索组播获取直播源就有很多。\n\n思路转变：IPTV口连接路由器抓包要点\n</code></pre>\n<p>openwrt 端口镜像？</p>\n<pre><code>开启防火墙igmp\nIGMPProxy\n    当前固件中找不到同名的igmpproxy，只找到\n    mcproxy\t2014-05-02-bbb2e7ee23..5-1\t133614\tmcproxy is a free &amp; open source implementation of the IGMP/MLD proxy function (see RFC 4605) for Linux systems. It operates on the kernel tables for multicast routing and allows for multiple instantiations, as well as dynamically changing downstream interfaces.\n\n\n思路来源：https://zhing.fun/openwrt_iptv_igmp/\n\n\n组播地址扫描器\n</code></pre>\n<p>​\t<br>    在Nmap中，使用broadcast-igmp-discovery脚本能够发现目标主机上的IGMP组播成员，并获取有意义的信息，如版本号、接口、源地址等。</p>\n<pre><code>udpxy\nudpxy 是一个把组播流变成 http 点播流的软件，我们通过 udpxy，可以把我们iptv 的服务扩展到手机、平板上，甚至映射到公网上，在外面就可以直接访问家里的 iptv 电视节目。\n</code></pre>\n<h2 id=\"接线注意事项-踩坑\"><a href=\"#接线注意事项-踩坑\" class=\"headerlink\" title=\"接线注意事项&#x2F;踩坑\"></a>接线注意事项&#x2F;踩坑</h2><p>由于朋友的拓扑是光猫出来两根网线，一根进软路由负责拨号，第二根接K2P路由器（充当AP角色，刷Padavan系统）负责接通组播环境。</p>\n<p>这第二根的接线有蹊跷，如果接到AP的LAN口（任何一个LAN口）就会引起，新接入的网络设备因为自动分配到192.168.1.0网段的IP而导致无法上网（这里排查了几个小时才注意到问题在DHCP上，一开始以为是组播的UDP数据包引发网络风暴….坑死自己）后来的解决办法是把Padavan AP重新配置了一下（主要是LAN口IP，DHCP设置得跟上游的软路由DHCP相同的网段，而不同的IP区间），然后把这第二根线接到WAN口。</p>\n<p>这才解决了新接入AP的网络设备自动获取的正确网段的IP地址，而找到正确的网关，从而不影响接入互联网。</p>\n<p>另外还有一种方法是登录ISP猫的后台，关闭掉DHCP.</p>\n<p>跨ISP时，用HK或JP的CDN都不如直接连接来得快。</p>\n<h1 id=\"移动网络播放IPTV组播\"><a href=\"#移动网络播放IPTV组播\" class=\"headerlink\" title=\"移动网络播放IPTV组播\"></a>移动网络播放IPTV组播</h1><p>开始尝试扫描 北京移动通用组播<br>        通用组播列表永久地址（北京移动网络通用，可以在支持组播的环境中任意播放）</p>\n<p>K2P Padavan，修改IP：192.168.1.12<br>    修改为了，避开移动猫中的192.168.1.1网段。</p>\n<p>ssh <a href=\"mailto:&#x61;&#100;&#109;&#x69;&#110;&#64;&#x31;&#x39;&#x32;&#x2e;&#x31;&#54;&#x38;&#46;&#x31;&#x2e;&#x31;&#50;\">&#x61;&#100;&#109;&#x69;&#110;&#64;&#x31;&#x39;&#x32;&#x2e;&#x31;&#54;&#x38;&#46;&#x31;&#x2e;&#x31;&#50;</a><br>    yes<br>    可以正常启用udpxy -p 8013</p>\n<p>记录成功（接收组播数据）<br>    移动猫的IPTV口连接Padavan的Lan口！必须是IPTV口到K2P路由器的Lan口（wan口不行），<br>    然后在后台开启 udpxy -p 8013 -m 192.168.1.12  (没有)<br>        就可以接收到组播数据rtp:&#x2F;&#x2F;228.1.1.194:8002；VLC可以播放。<br>    然后路由器设置：【已截图】必须要在路由上开启：<br>            启用 IGMP&#x2F;MLD 侦听\t<br>            M2U - 以太网交换机: HW IGMP&#x2F;MLD snooping<br>            M2U - 无线 2.4G:\tmuli…</p>\n<p><img data-src=\"https://www.evernote.com/shard/s122/sh/b9cc9087-b87c-4f9b-8396-7379bcaa5c58/5eJusyLJHIHOTIxVeVS8J6uYqIj-mr6g8KIabe67tJCgSzyWcn-WZWaAJQ/deep/0/image.png\" alt=\"Padavan系统的K2P路由器IPTV设置\"></p>\n<p>下一步： 用udpxy转化出http数据<br>        udpxy -p 8013 -m 192.168.1.12<br>        udpxy -p 8014</p>\n<pre><code>纠正：\n    “启用 IGMP/MLD 侦听” 必须关闭！！ 后台运行着\n    5627 admin     1000 S    udpxy -p 8013 -m 192.168.1.12\n    5900 admin     1000 S    udpxy -p 8012\n    又能接收到组播数据信息；\n\n    点击界面的重启信息后，又不能接收组播数据了。\n\n\n    1. Kill 掉用来的 udpxy -p 8013 -m 192.168.1.12\n    2. 重新运行udpxy -p 8013 -m 192.168.1.12\n    3. 又能接收到组播数据了。\n</code></pre>\n<ol>\n<li><p>必须连接猫上面IPTV口，如果其他的口，播放中的组播数据马上断掉。</p>\n</li>\n<li><p>无所谓运行不运行udpxy；</p>\n</li>\n<li><p>按目前的配置，重启一下Padavan K2P路由器；看看能否收到组播数据<br>  可以。</p>\n</li>\n<li><p>也就是说：开启 “启用组播路由到内网”</p>\n</li>\n<li><p>关闭：“启用 IGMP&#x2F;MLD 侦听”</p>\n<p>进光猫设置（用光猫背面的普通用户登录），关闭防火墙，关闭一些不必要的，提高传输效率<br>启用防火墙：关闭<br>防火墙等级：低<br>防止端口扫描：关闭<br>把DHCP的ip地址设置到192.168.1.20 - 192.168.1.254；这样是为了避开Padavan K2P路由器的IP地址（Lan口，设置为静态的192.168.1.12）</p>\n</li>\n</ol>\n<p><img data-src=\"https://www.evernote.com/shard/s122/sh/1ed67490-bf71-4e18-99fb-4cdcf71e2ff4/yBl9mX140Oh5gdiTWM8WrO3ngCGlUf9TbN7ZdT0jmfu2APYITPfIjBgC2w/deep/0/image.png\" alt=\"播放组播过程\"></p>\n<p>现实中还会遇到：</p>\n<ol>\n<li>如何拉两根线从室内弱电箱中的光猫到客厅主路由器的问题</li>\n<li>（光猫桥接路由器，路由器拨号上网的情况下）如何解决把两根线都接到主路由器以后，新的wifi客户端连接，会被光猫的DHCP服务分配到192.168.1.0网段的IP而导致无法上网的问题</li>\n</ol>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p>后来发现这个抓包的结果，其实大佬已经有分享：</p>\n<p>抓包的m3u结果：<a href=\"https://github.com/wuwentao/bj-unicom-iptv\">https://github.com/wuwentao/bj-unicom-iptv</a><br>    <a href=\"https://github.com/dandeliono/bj-unicom-iptv\">https://github.com/dandeliono/bj-unicom-iptv</a><br>    这里有所有的答案！如下：</p>\n<pre><code>北京联通IPTV播放列表\n    https://github.com/wuwentao/bj-unicom-iptv\n\n    北京电信IPTV播放列表\n    https://github.com/wuwentao/bj-telecom-iptv\n\n    北京移动IPTV播放列表\n    https://github.com/wuwentao/bj-mobile-iptv\n\n8:07pm\n如果还是想要自己扫描：https://github.com/sdhzdmzzl/iptv_channel_scanner_linux\n</code></pre>\n<hr>\n<p>Padavan固件的版本选择：</p>\n<pre><code>    hanwckf移植版：由hanwckf移植的版本，其中Nano版本非常不错。您可以在https://github.com/hanwckf/rt-n56u/下载此版本。\n\n    hiboy移植版：由hiboy移植的Padavan固件，您可以在https://opt.cn2qq.com/padavan/获取该版本。\n\n    荒野无灯版：这个版本目前已经停更，但您仍然可以在恩山论坛上找到相关信息。如果需要，您可以通过以下链接下载该固件：https://share.weiyun.com/u4nGOH8u 密码：plz4tu。\n</code></pre>\n<p>刷入hanwckf移植版：由hanwckf移植的版本，其中Nano版本非常不错。您可以在<a href=\"https://github.com/hanwckf/rt-n56u/%E4%B8%8B%E8%BD%BD%E6%AD%A4%E7%89%88%E6%9C%AC%E3%80%82\">https://github.com/hanwckf/rt-n56u/下载此版本。</a><br>        连接网络，发现udpxy，自动升级了！<br>    页面也正常：<a href=\"http://192.168.1.2:8012/status\">http://192.168.1.2:8012/status</a><br>    版本：udpxy v. 1.0 (Build 23) standard - [Thu Dec 21 07:36:58 2023]</p>\n<pre><code>satus页面得知：\nMulticast address 从0.0.0.0 变成了 192.168.6.192\n\n测试组播转单播\n\n多拉一根线进入路由器\n    http://192.168.6.243:8012/rtp/239.3.1.1:8000\n成功组播！\n    不是用说明书所示Available HTTP requests:  http://address:port/udp/mcast_addr:mport/\t\n    而是http://192.168.6.243:8012/rtp/239.3.1.1:8000\n批量替换测试\n    http://192.168.6.243:8012/rtp/239.3.1.129:8008\n\n彻底都正常了！包括：高清频道\n</code></pre>\n<h2 id=\"linux下高效组播地址端口扫描-工具无效\"><a href=\"#linux下高效组播地址端口扫描-工具无效\" class=\"headerlink\" title=\"linux下高效组播地址端口扫描(工具无效)\"></a>linux下高效组播地址端口扫描(工具无效)</h2><p><a href=\"https://github.com/sdhzdmzzl/iptv_channel_scanner_linux\">https://github.com/sdhzdmzzl/iptv_channel_scanner_linux</a></p>\n<p>搭一下环境，用linux编译一下： g++ -g -o iptvscanner iptvscanner.cpp -lpcap</p>\n<p>然后这样扫一扫：.&#x2F;iptvscanner 239.3.1.1 239.3.1.254</p>\n<pre><code>大目标/方向\n目前的IPTV直播台为\n    合计： 165个\n\n    高清： 54个\n    4K: 2个\n    标清： 109个\n\n导入emby后，有144个项目。\n拉到VLC中，有193个\n\n\n实际最新扫描结果为：?\n</code></pre>\n<p>如何在debian或者docker中弄出一个c++编译环境？<br>    Pull一个gcc 或g++ 镜像下来，只为了编译出一个可执行文件，不值当；还面临为要运行在MAC上而debian的IP段是无法扫描的，除非修改它的IP影响其他服务的运行了，还是在MAC下安装g++编译出一个mac平台下的可执行文件比较靠谱<br>    问题变成： 如何在Mac下安装g++<br>        先尝试了一下Terminal下运行 g++，居然提示的是：clang: error: no input files<br>        说明我原先可能因为安装brew等其他的工具而本身已经安装了g++编译工具。</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">编译出来超级迅速</span><br><span class=\"line\">g++ -g -o iptvscanner iptvscanner.cpp -lpcap</span><br><span class=\"line\">修改IP地址段为192.168.1网段</span><br><span class=\"line\">开始usage: ./iptvscanner 239.3.1.1 239.3.1.254</span><br><span class=\"line\">./iptvscanner 239.3.1.1 239.3.1.254</span><br><span class=\"line\">\t1. en0 (No description available)</span><br><span class=\"line\">\t2. awdl0 (No description available)</span><br><span class=\"line\">\t3. llw0 (No description available)</span><br><span class=\"line\">\t4. utun0 (No description available)</span><br><span class=\"line\">\t5. utun1 (No description available)</span><br><span class=\"line\">\t6. utun2 (No description available)</span><br><span class=\"line\">\t7. utun3 (No description available)</span><br><span class=\"line\">\t8. utun4 (No description available)</span><br><span class=\"line\">\t9. lo0 (No description available)</span><br><span class=\"line\">\t10. anpi0 (No description available)</span><br><span class=\"line\">\t11. bridge0 (No description available)</span><br><span class=\"line\">\t12. anpi1 (No description available)</span><br><span class=\"line\">\t13. en1 (No description available)</span><br><span class=\"line\">\t14. anpi2 (No description available)</span><br><span class=\"line\">\t15. en2 (No description available)</span><br><span class=\"line\">\t16. en3 (No description available)</span><br><span class=\"line\">\t17. en4 (No description available)</span><br><span class=\"line\">\t18. en5 (No description available)</span><br><span class=\"line\">\t19. en6 (No description available)</span><br><span class=\"line\">\t20. gif0 (No description available)</span><br><span class=\"line\">\t21. stf0 (No description available)</span><br><span class=\"line\">\t22. ap1 (No description available)</span><br><span class=\"line\">Enter the interface number (1-%d):\t</span><br><span class=\"line\">选了1以后</span><br><span class=\"line\">\terror: pcap_open_live():en0: You don&#x27;t have permission to capture on that device ((cannot open BPF device) /dev/bpf0: Permission denied)</span><br><span class=\"line\">sudo -i 以后，继续选1.</span><br><span class=\"line\"></span><br><span class=\"line\">我需要先了解一下MAC下这些network interface，我不清楚我应该选哪个，现实中就是WIFI啊（如此简单而程序就不知道默认）</span><br></pre></td></tr></table></figure>\n\n<p>实在没招了从1到22，一个个试。都是没有扫出内容；</p>\n<blockquote>\n<p>后来查询到 Mac中的 System Information</p>\n<p>  Type:\tAirPort<br>  Hardware:\tAirPort<br>  BSD Device Name:\ten0<br>  IPv4 Addresses:\t192.168.1.31</p>\n<p>应该选1</p>\n</blockquote>\n<p>扫描失败；换思路，抓包吧。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用新的padavan（有大量的可用空间），把包放到/tmp下了；如何下载？</span><br><span class=\"line\">tcpdump -i any -w iptv.cap                                                       </span><br><span class=\"line\">tcpdump: listening on any, link-type LINUX_SLL (Linux cooked v1), capture size 262144 bytes </span><br><span class=\"line\">^C39215 packets captured                                                                    </span><br><span class=\"line\">39318 packets received by filter                                                            </span><br><span class=\"line\">0 packets dropped by kernel   </span><br></pre></td></tr></table></figure>\n\n<p>扫描到一个24M的cap包，怎么下载呢？padavan<br>     用scp, 打开Mac的Terminal</p>\n<p>​\t&gt; scp <a href=\"mailto:&#x61;&#x64;&#109;&#x69;&#x6e;&#64;&#49;&#57;&#x32;&#46;&#x31;&#54;&#x38;&#x2e;&#49;&#46;&#x32;\">&#x61;&#x64;&#109;&#x69;&#x6e;&#64;&#49;&#57;&#x32;&#46;&#x31;&#54;&#x38;&#x2e;&#49;&#46;&#x32;</a>:&#x2F;tmp&#x2F;iptv.cap &#x2F;Users&#x2F;carlzeng&#x2F;AppTesting<br>​\t<a href=\"mailto:&#97;&#100;&#109;&#105;&#x6e;&#64;&#49;&#x39;&#x32;&#46;&#x31;&#x36;&#56;&#46;&#x31;&#x2e;&#50;\">&#97;&#100;&#109;&#105;&#x6e;&#64;&#49;&#x39;&#x32;&#46;&#x31;&#x36;&#56;&#46;&#x31;&#x2e;&#50;</a>‘s password:<br>​\tiptv.cap                                                  100%   24MB   5.8MB&#x2F;s   00:04   </p>\n<p>两次抓下来2个25M得cap包，用Wireshark打开，找不到关键的 :-(</p>\n<h2 id=\"本章节感谢列表：\"><a href=\"#本章节感谢列表：\" class=\"headerlink\" title=\"本章节感谢列表：\"></a>本章节感谢列表：</h2><p><a href=\"https://www.cnblogs.com/roger-yu/p/16347861.html\">adb shell input keyevent 控制按键输入</a></p>\n<p><a href=\"https://www.cnblogs.com/milton/p/4622107.html\">利用scp 远程上传下载文件&#x2F;文件夹和ssh远程执行命令</a></p>\n<p><a href=\"https://www.onlinedown.net/soft/701509.htm\">启动项管理  1.9.7</a></p>\n<h1 id=\"感谢列表\"><a href=\"#感谢列表\" class=\"headerlink\" title=\"感谢列表\"></a>感谢列表</h1><p><a href=\"https://github.com/wuwentao/bj-unicom-iptv\">https://github.com/wuwentao/bj-unicom-iptv</a></p>\n<p><a href=\"https://github.com/dandeliono/bj-unicom-iptv\">https://github.com/dandeliono/bj-unicom-iptv</a></p>\n<p><a href=\"https://github.com/sdhzdmzzl/iptv_channel_scanner_linux\">https://github.com/sdhzdmzzl/iptv_channel_scanner_linux</a></p>\n<p><a href=\"https://zhing.fun/openwrt_iptv_igmp/\">Openwrt IPTV组播网络设置内容补充</a></p>\n<p><a href=\"https://www.yitoujing.com/article/17\">Padavan固件设置IPTV双网融合 任意设备观看IPTV</a></p>\n<p><a href=\"https://www.diygogogo.com/article/item/3988.html\">https://www.diygogogo.com/article/item/3988.html</a></p>\n<p><a href=\"https://github.com/wuwentao/bj-unicom-iptv/blob/master/iptv.md\">IPTV中继原理</a></p>\n<hr>\n<p>Padavan固件是基于华硕的RT-N56U开发派生并以其名字命名的Asuswrt固件，在国内亦俗称为老毛子固件。该固件具有稳定、简洁、功能强大、高性能等优点，内存和CPU消耗低，使用过程中几乎无发热。本文将介绍Padavan固件的常用版本以及刷机方法，并分享一些实用的功能和设置。</p>\n<p><a href=\"https://opt.cn2qq.com/padavan/\">hiboy移植版Pandavan下载</a></p>\n<p><a href=\"https://github.com/hanwckf/rt-n56u/\">hanwckf移植版Padavan</a> (最新版截止2023年12月份目前停留在2020年11月27日版本)</p>\n","more":"<h1 id=\"有什么用\"><a href=\"#有什么用\" class=\"headerlink\" title=\"有什么用\"></a>有什么用</h1><p>技术参考，理解IPTV组播原理；经历2天时间的实践，曲折过程，成功把组播转单播播放</p>\n<p>实测某地联通和移动的IPTV组播数据实时播放电视直播</p>\n<p>具体描述如何接线及检查光猫IPTV口是否有组播数据</p>\n<h1 id=\"怎么用\"><a href=\"#怎么用\" class=\"headerlink\" title=\"怎么用\"></a>怎么用</h1><p>在光猫IPTV口 和 机顶盒 的网线连接中间加进去一个Openwrt之类的路由，用于抓包</p>\n<p>这个方法不是一个完美方法，直接在IPTV口插上一台PC机（可以用来扫描ISP组播网络信息），用于抓包又抓包到机顶盒获取IPTV直播源的过程数据包</p>\n<p>可以参考这个流程，从中得到启发，应用在你独特的网络环境和特定的组播方案环境。</p>\n<p>如果你想要确定光猫IPTV口是否有组播数据：</p>\n<ul>\n<li>首先先确定ADSL光猫的IPTV口<ul>\n<li>一般光猫有4个网线口，一般IPTV口在第三个或第四个口，有的光猫会标记IPTV字样</li>\n</ul>\n</li>\n<li>如果上网的网络已经稳定，建议单独拿一个路由器（并另加一条网线）来测试IPTV组播数据</li>\n<li>先要去下载一份当地的组播数据的通用组播列表m3u文件<ul>\n<li>比如：<a href=\"https://github.com/qwerttvv/Beijing-IPTV\">qwerttvv&#x2F;Beijing-IPTV</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"预览\"><a href=\"#预览\" class=\"headerlink\" title=\"预览\"></a>预览</h1><p>开放测试步骤：</p>\n<ol>\n<li>打开<a href=\"https://c.carlzeng.top:3/iptv\">https://c.carlzeng.top:3/iptv</a> （或者直接使用下面已嵌入的页面）</li>\n<li>点击用户名user，输入密码: user</li>\n<li>点击 我的媒体中的“电视直播”，或者“最爱”</li>\n<li>点击 相应的电视台，比如 “BRTV 影视”</li>\n</ol>\n<iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://c.carlzeng.top:3/iptv\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"800\"></iframe>\n\n<h1 id=\"相关内容\"><a href=\"#相关内容\" class=\"headerlink\" title=\"相关内容\"></a>相关内容</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=iptv\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"实现过程\"><a href=\"#实现过程\" class=\"headerlink\" title=\"实现过程\"></a>实现过程</h1><p>在光猫IPTV口 和 机顶盒 的网线连接中间加进去一个Openwrt之类的路由，用于抓包（用路由器上运行tcpdmp）</p>\n<p>tcpdump -i any -w &#x2F;tmp&#x2F;iptv.cap</p>\n<p>继续下载。cap文件，用于下一步分析<br>    cp &#x2F;tmp&#x2F;iptv.cap &#x2F;www&#x2F;luci-static&#x2F;fonts&#x2F;iptv.cap<br>            cp: write error: No space left on device</p>\n<p>​\t\t\tmv: write error: No space left on device<br>​\t\t\tmv: can’t preserve times of ‘&#x2F;www&#x2F;luci-static&#x2F;fonts&#x2F;iptv.cap’: No space left on device<br>​\t\t\tmv: can’t preserve ownership of ‘&#x2F;www&#x2F;luci-static&#x2F;fonts&#x2F;iptv.cap’: No space left on device<br>​\t\t\tmv: can’t preserve permissions of ‘&#x2F;www&#x2F;luci-static&#x2F;fonts&#x2F;iptv.cap’: No space left on device</p>\n<pre><code>mount --bind /tmp/all.bin /www/web-static/fonts/icofont.eot \n\nhttp://192.168.1.2/luci-static/fonts/iptv.cap\n\n\n刷机中。。。（）准备组播转单播工具中\n\n\nphoniex-ralink-mt7621-k2p完美版本19216811-squashfs-sysupgrade.bin\n    cd /www/luci-static/resources\n&gt; tcpdump -i any -w iptv.cap\n    tcpdump: listening on any, link-type LINUX_SLL (Linux cooked), capture size 65535 bytes\n    ^C\n    47092 packets captured\n    758845 packets received by filter\n    710456 packets dropped by kernel\n\nOpenwrt可以通过http界面轻松下载到抓包文件\n    http://192.168.1.2/luci-static/resources/\n\noption #1，python3 iptvsearch.py\n抓到许多udp包 指向组播地址和端口，可为什么扫描不到呢？\t\n    在最后尝试python（iptvsearch.py）扫描\n    ip_start = &#39;239.3.1.215&#39;\n    ip_end =   &#39;239.3.1.251&#39;\n    for port1 in [8000,8001,4120]:\n仅扫描特定的iP端+端口，扫到6台（包含北京体育休闲）\n    北京体育休闲 rtp://239.3.1.243:8000\n增加timeout时间从1到3s，重新扫描该小IP段\n    仍然仅扫描到6台，明显就是找不到239.3.1.215的4220端口\n\n    用VLC播放，画面偶尔会卡断，怀疑是不是‘硬件加速’的功能在电脑播放器没有导致的\n\noption #2，尝试用（multicast-scanner.py）\n    这个是无效的工具。\n    [*] Finished in 0.0 second(s)\n    [*] 0.0 day(s) 0.0 hour(s) 0.0 minute(s) 0.0 second(s)\n\n    [*] No channels found\n继续抓包，应该是没有抓到重点的包，（担忧：packets dropped by kernel）\n    删除固件中自带的v2ray，节省出rom内存空间，用于抓包\n    移除以后，空间并没有增加，还是剩余800K\n\niptv(机顶盒开机卡死无法连接到盒端管理平台).cap\n    由于中间我插入了k2p路由器，用于tcpdump\n</code></pre>\n<p>所以简单的不做任何设置，在猫IPTV口和机顶盒中间加路由器会导致：机顶盒重新开始时，机顶盒开机卡死无法连接到盒端管理平台。</p>\n<p>继续抓包，中间应该查了什么步骤，导致机顶盒注册盒端管理平台不成。</p>\n<pre><code>https://www.youtube.com/watch?v=LTA0B437w_k&amp;t=366s\n    统一回复下：视频中接线图位置，有独立IPTV口的朋友，说明你们家的IPTV就是组播模式，而我的就是单播模式，如果属于组播模式的就是我演示的异地的情况，播放使用rtp来播放，固定IP+不同端口或者是固定不同IP+相同端口来代替不同的频道，组播的方式其实更简单，需要在光猫里面转换为直播源，由于我的不是所有无法演示，需要破解光猫以管理员身份登录光猫后台，然后去设置VLAN，具体这种方式网上教程一堆，搜索组播获取直播源就有很多。\n\n思路转变：IPTV口连接路由器抓包要点\n</code></pre>\n<p>openwrt 端口镜像？</p>\n<pre><code>开启防火墙igmp\nIGMPProxy\n    当前固件中找不到同名的igmpproxy，只找到\n    mcproxy\t2014-05-02-bbb2e7ee23..5-1\t133614\tmcproxy is a free &amp; open source implementation of the IGMP/MLD proxy function (see RFC 4605) for Linux systems. It operates on the kernel tables for multicast routing and allows for multiple instantiations, as well as dynamically changing downstream interfaces.\n\n\n思路来源：https://zhing.fun/openwrt_iptv_igmp/\n\n\n组播地址扫描器\n</code></pre>\n<p>​\t<br>    在Nmap中，使用broadcast-igmp-discovery脚本能够发现目标主机上的IGMP组播成员，并获取有意义的信息，如版本号、接口、源地址等。</p>\n<pre><code>udpxy\nudpxy 是一个把组播流变成 http 点播流的软件，我们通过 udpxy，可以把我们iptv 的服务扩展到手机、平板上，甚至映射到公网上，在外面就可以直接访问家里的 iptv 电视节目。\n</code></pre>\n<h2 id=\"接线注意事项-踩坑\"><a href=\"#接线注意事项-踩坑\" class=\"headerlink\" title=\"接线注意事项&#x2F;踩坑\"></a>接线注意事项&#x2F;踩坑</h2><p>由于朋友的拓扑是光猫出来两根网线，一根进软路由负责拨号，第二根接K2P路由器（充当AP角色，刷Padavan系统）负责接通组播环境。</p>\n<p>这第二根的接线有蹊跷，如果接到AP的LAN口（任何一个LAN口）就会引起，新接入的网络设备因为自动分配到192.168.1.0网段的IP而导致无法上网（这里排查了几个小时才注意到问题在DHCP上，一开始以为是组播的UDP数据包引发网络风暴….坑死自己）后来的解决办法是把Padavan AP重新配置了一下（主要是LAN口IP，DHCP设置得跟上游的软路由DHCP相同的网段，而不同的IP区间），然后把这第二根线接到WAN口。</p>\n<p>这才解决了新接入AP的网络设备自动获取的正确网段的IP地址，而找到正确的网关，从而不影响接入互联网。</p>\n<p>另外还有一种方法是登录ISP猫的后台，关闭掉DHCP.</p>\n<p>跨ISP时，用HK或JP的CDN都不如直接连接来得快。</p>\n<h1 id=\"移动网络播放IPTV组播\"><a href=\"#移动网络播放IPTV组播\" class=\"headerlink\" title=\"移动网络播放IPTV组播\"></a>移动网络播放IPTV组播</h1><p>开始尝试扫描 北京移动通用组播<br>        通用组播列表永久地址（北京移动网络通用，可以在支持组播的环境中任意播放）</p>\n<p>K2P Padavan，修改IP：192.168.1.12<br>    修改为了，避开移动猫中的192.168.1.1网段。</p>\n<p>ssh <a href=\"mailto:&#x61;&#100;&#109;&#x69;&#110;&#64;&#x31;&#x39;&#x32;&#x2e;&#x31;&#54;&#x38;&#46;&#x31;&#x2e;&#x31;&#50;\">&#x61;&#100;&#109;&#x69;&#110;&#64;&#x31;&#x39;&#x32;&#x2e;&#x31;&#54;&#x38;&#46;&#x31;&#x2e;&#x31;&#50;</a><br>    yes<br>    可以正常启用udpxy -p 8013</p>\n<p>记录成功（接收组播数据）<br>    移动猫的IPTV口连接Padavan的Lan口！必须是IPTV口到K2P路由器的Lan口（wan口不行），<br>    然后在后台开启 udpxy -p 8013 -m 192.168.1.12  (没有)<br>        就可以接收到组播数据rtp:&#x2F;&#x2F;228.1.1.194:8002；VLC可以播放。<br>    然后路由器设置：【已截图】必须要在路由上开启：<br>            启用 IGMP&#x2F;MLD 侦听\t<br>            M2U - 以太网交换机: HW IGMP&#x2F;MLD snooping<br>            M2U - 无线 2.4G:\tmuli…</p>\n<p><img data-src=\"https://www.evernote.com/shard/s122/sh/b9cc9087-b87c-4f9b-8396-7379bcaa5c58/5eJusyLJHIHOTIxVeVS8J6uYqIj-mr6g8KIabe67tJCgSzyWcn-WZWaAJQ/deep/0/image.png\" alt=\"Padavan系统的K2P路由器IPTV设置\"></p>\n<p>下一步： 用udpxy转化出http数据<br>        udpxy -p 8013 -m 192.168.1.12<br>        udpxy -p 8014</p>\n<pre><code>纠正：\n    “启用 IGMP/MLD 侦听” 必须关闭！！ 后台运行着\n    5627 admin     1000 S    udpxy -p 8013 -m 192.168.1.12\n    5900 admin     1000 S    udpxy -p 8012\n    又能接收到组播数据信息；\n\n    点击界面的重启信息后，又不能接收组播数据了。\n\n\n    1. Kill 掉用来的 udpxy -p 8013 -m 192.168.1.12\n    2. 重新运行udpxy -p 8013 -m 192.168.1.12\n    3. 又能接收到组播数据了。\n</code></pre>\n<ol>\n<li><p>必须连接猫上面IPTV口，如果其他的口，播放中的组播数据马上断掉。</p>\n</li>\n<li><p>无所谓运行不运行udpxy；</p>\n</li>\n<li><p>按目前的配置，重启一下Padavan K2P路由器；看看能否收到组播数据<br>  可以。</p>\n</li>\n<li><p>也就是说：开启 “启用组播路由到内网”</p>\n</li>\n<li><p>关闭：“启用 IGMP&#x2F;MLD 侦听”</p>\n<p>进光猫设置（用光猫背面的普通用户登录），关闭防火墙，关闭一些不必要的，提高传输效率<br>启用防火墙：关闭<br>防火墙等级：低<br>防止端口扫描：关闭<br>把DHCP的ip地址设置到192.168.1.20 - 192.168.1.254；这样是为了避开Padavan K2P路由器的IP地址（Lan口，设置为静态的192.168.1.12）</p>\n</li>\n</ol>\n<p><img data-src=\"https://www.evernote.com/shard/s122/sh/1ed67490-bf71-4e18-99fb-4cdcf71e2ff4/yBl9mX140Oh5gdiTWM8WrO3ngCGlUf9TbN7ZdT0jmfu2APYITPfIjBgC2w/deep/0/image.png\" alt=\"播放组播过程\"></p>\n<p>现实中还会遇到：</p>\n<ol>\n<li>如何拉两根线从室内弱电箱中的光猫到客厅主路由器的问题</li>\n<li>（光猫桥接路由器，路由器拨号上网的情况下）如何解决把两根线都接到主路由器以后，新的wifi客户端连接，会被光猫的DHCP服务分配到192.168.1.0网段的IP而导致无法上网的问题</li>\n</ol>\n<h1 id=\"灵感来源\"><a href=\"#灵感来源\" class=\"headerlink\" title=\"灵感来源\"></a>灵感来源</h1><p>后来发现这个抓包的结果，其实大佬已经有分享：</p>\n<p>抓包的m3u结果：<a href=\"https://github.com/wuwentao/bj-unicom-iptv\">https://github.com/wuwentao/bj-unicom-iptv</a><br>    <a href=\"https://github.com/dandeliono/bj-unicom-iptv\">https://github.com/dandeliono/bj-unicom-iptv</a><br>    这里有所有的答案！如下：</p>\n<pre><code>北京联通IPTV播放列表\n    https://github.com/wuwentao/bj-unicom-iptv\n\n    北京电信IPTV播放列表\n    https://github.com/wuwentao/bj-telecom-iptv\n\n    北京移动IPTV播放列表\n    https://github.com/wuwentao/bj-mobile-iptv\n\n8:07pm\n如果还是想要自己扫描：https://github.com/sdhzdmzzl/iptv_channel_scanner_linux\n</code></pre>\n<hr>\n<p>Padavan固件的版本选择：</p>\n<pre><code>    hanwckf移植版：由hanwckf移植的版本，其中Nano版本非常不错。您可以在https://github.com/hanwckf/rt-n56u/下载此版本。\n\n    hiboy移植版：由hiboy移植的Padavan固件，您可以在https://opt.cn2qq.com/padavan/获取该版本。\n\n    荒野无灯版：这个版本目前已经停更，但您仍然可以在恩山论坛上找到相关信息。如果需要，您可以通过以下链接下载该固件：https://share.weiyun.com/u4nGOH8u 密码：plz4tu。\n</code></pre>\n<p>刷入hanwckf移植版：由hanwckf移植的版本，其中Nano版本非常不错。您可以在<a href=\"https://github.com/hanwckf/rt-n56u/%E4%B8%8B%E8%BD%BD%E6%AD%A4%E7%89%88%E6%9C%AC%E3%80%82\">https://github.com/hanwckf/rt-n56u/下载此版本。</a><br>        连接网络，发现udpxy，自动升级了！<br>    页面也正常：<a href=\"http://192.168.1.2:8012/status\">http://192.168.1.2:8012/status</a><br>    版本：udpxy v. 1.0 (Build 23) standard - [Thu Dec 21 07:36:58 2023]</p>\n<pre><code>satus页面得知：\nMulticast address 从0.0.0.0 变成了 192.168.6.192\n\n测试组播转单播\n\n多拉一根线进入路由器\n    http://192.168.6.243:8012/rtp/239.3.1.1:8000\n成功组播！\n    不是用说明书所示Available HTTP requests:  http://address:port/udp/mcast_addr:mport/\t\n    而是http://192.168.6.243:8012/rtp/239.3.1.1:8000\n批量替换测试\n    http://192.168.6.243:8012/rtp/239.3.1.129:8008\n\n彻底都正常了！包括：高清频道\n</code></pre>\n<h2 id=\"linux下高效组播地址端口扫描-工具无效\"><a href=\"#linux下高效组播地址端口扫描-工具无效\" class=\"headerlink\" title=\"linux下高效组播地址端口扫描(工具无效)\"></a>linux下高效组播地址端口扫描(工具无效)</h2><p><a href=\"https://github.com/sdhzdmzzl/iptv_channel_scanner_linux\">https://github.com/sdhzdmzzl/iptv_channel_scanner_linux</a></p>\n<p>搭一下环境，用linux编译一下： g++ -g -o iptvscanner iptvscanner.cpp -lpcap</p>\n<p>然后这样扫一扫：.&#x2F;iptvscanner 239.3.1.1 239.3.1.254</p>\n<pre><code>大目标/方向\n目前的IPTV直播台为\n    合计： 165个\n\n    高清： 54个\n    4K: 2个\n    标清： 109个\n\n导入emby后，有144个项目。\n拉到VLC中，有193个\n\n\n实际最新扫描结果为：?\n</code></pre>\n<p>如何在debian或者docker中弄出一个c++编译环境？<br>    Pull一个gcc 或g++ 镜像下来，只为了编译出一个可执行文件，不值当；还面临为要运行在MAC上而debian的IP段是无法扫描的，除非修改它的IP影响其他服务的运行了，还是在MAC下安装g++编译出一个mac平台下的可执行文件比较靠谱<br>    问题变成： 如何在Mac下安装g++<br>        先尝试了一下Terminal下运行 g++，居然提示的是：clang: error: no input files<br>        说明我原先可能因为安装brew等其他的工具而本身已经安装了g++编译工具。</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">编译出来超级迅速</span><br><span class=\"line\">g++ -g -o iptvscanner iptvscanner.cpp -lpcap</span><br><span class=\"line\">修改IP地址段为192.168.1网段</span><br><span class=\"line\">开始usage: ./iptvscanner 239.3.1.1 239.3.1.254</span><br><span class=\"line\">./iptvscanner 239.3.1.1 239.3.1.254</span><br><span class=\"line\">\t1. en0 (No description available)</span><br><span class=\"line\">\t2. awdl0 (No description available)</span><br><span class=\"line\">\t3. llw0 (No description available)</span><br><span class=\"line\">\t4. utun0 (No description available)</span><br><span class=\"line\">\t5. utun1 (No description available)</span><br><span class=\"line\">\t6. utun2 (No description available)</span><br><span class=\"line\">\t7. utun3 (No description available)</span><br><span class=\"line\">\t8. utun4 (No description available)</span><br><span class=\"line\">\t9. lo0 (No description available)</span><br><span class=\"line\">\t10. anpi0 (No description available)</span><br><span class=\"line\">\t11. bridge0 (No description available)</span><br><span class=\"line\">\t12. anpi1 (No description available)</span><br><span class=\"line\">\t13. en1 (No description available)</span><br><span class=\"line\">\t14. anpi2 (No description available)</span><br><span class=\"line\">\t15. en2 (No description available)</span><br><span class=\"line\">\t16. en3 (No description available)</span><br><span class=\"line\">\t17. en4 (No description available)</span><br><span class=\"line\">\t18. en5 (No description available)</span><br><span class=\"line\">\t19. en6 (No description available)</span><br><span class=\"line\">\t20. gif0 (No description available)</span><br><span class=\"line\">\t21. stf0 (No description available)</span><br><span class=\"line\">\t22. ap1 (No description available)</span><br><span class=\"line\">Enter the interface number (1-%d):\t</span><br><span class=\"line\">选了1以后</span><br><span class=\"line\">\terror: pcap_open_live():en0: You don&#x27;t have permission to capture on that device ((cannot open BPF device) /dev/bpf0: Permission denied)</span><br><span class=\"line\">sudo -i 以后，继续选1.</span><br><span class=\"line\"></span><br><span class=\"line\">我需要先了解一下MAC下这些network interface，我不清楚我应该选哪个，现实中就是WIFI啊（如此简单而程序就不知道默认）</span><br></pre></td></tr></table></figure>\n\n<p>实在没招了从1到22，一个个试。都是没有扫出内容；</p>\n<blockquote>\n<p>后来查询到 Mac中的 System Information</p>\n<p>  Type:\tAirPort<br>  Hardware:\tAirPort<br>  BSD Device Name:\ten0<br>  IPv4 Addresses:\t192.168.1.31</p>\n<p>应该选1</p>\n</blockquote>\n<p>扫描失败；换思路，抓包吧。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用新的padavan（有大量的可用空间），把包放到/tmp下了；如何下载？</span><br><span class=\"line\">tcpdump -i any -w iptv.cap                                                       </span><br><span class=\"line\">tcpdump: listening on any, link-type LINUX_SLL (Linux cooked v1), capture size 262144 bytes </span><br><span class=\"line\">^C39215 packets captured                                                                    </span><br><span class=\"line\">39318 packets received by filter                                                            </span><br><span class=\"line\">0 packets dropped by kernel   </span><br></pre></td></tr></table></figure>\n\n<p>扫描到一个24M的cap包，怎么下载呢？padavan<br>     用scp, 打开Mac的Terminal</p>\n<p>​\t&gt; scp <a href=\"mailto:&#x61;&#x64;&#109;&#x69;&#x6e;&#64;&#49;&#57;&#x32;&#46;&#x31;&#54;&#x38;&#x2e;&#49;&#46;&#x32;\">&#x61;&#x64;&#109;&#x69;&#x6e;&#64;&#49;&#57;&#x32;&#46;&#x31;&#54;&#x38;&#x2e;&#49;&#46;&#x32;</a>:&#x2F;tmp&#x2F;iptv.cap &#x2F;Users&#x2F;carlzeng&#x2F;AppTesting<br>​\t<a href=\"mailto:&#97;&#100;&#109;&#105;&#x6e;&#64;&#49;&#x39;&#x32;&#46;&#x31;&#x36;&#56;&#46;&#x31;&#x2e;&#50;\">&#97;&#100;&#109;&#105;&#x6e;&#64;&#49;&#x39;&#x32;&#46;&#x31;&#x36;&#56;&#46;&#x31;&#x2e;&#50;</a>‘s password:<br>​\tiptv.cap                                                  100%   24MB   5.8MB&#x2F;s   00:04   </p>\n<p>两次抓下来2个25M得cap包，用Wireshark打开，找不到关键的 :-(</p>\n<h2 id=\"本章节感谢列表：\"><a href=\"#本章节感谢列表：\" class=\"headerlink\" title=\"本章节感谢列表：\"></a>本章节感谢列表：</h2><p><a href=\"https://www.cnblogs.com/roger-yu/p/16347861.html\">adb shell input keyevent 控制按键输入</a></p>\n<p><a href=\"https://www.cnblogs.com/milton/p/4622107.html\">利用scp 远程上传下载文件&#x2F;文件夹和ssh远程执行命令</a></p>\n<p><a href=\"https://www.onlinedown.net/soft/701509.htm\">启动项管理  1.9.7</a></p>\n<h1 id=\"感谢列表\"><a href=\"#感谢列表\" class=\"headerlink\" title=\"感谢列表\"></a>感谢列表</h1><p><a href=\"https://github.com/wuwentao/bj-unicom-iptv\">https://github.com/wuwentao/bj-unicom-iptv</a></p>\n<p><a href=\"https://github.com/dandeliono/bj-unicom-iptv\">https://github.com/dandeliono/bj-unicom-iptv</a></p>\n<p><a href=\"https://github.com/sdhzdmzzl/iptv_channel_scanner_linux\">https://github.com/sdhzdmzzl/iptv_channel_scanner_linux</a></p>\n<p><a href=\"https://zhing.fun/openwrt_iptv_igmp/\">Openwrt IPTV组播网络设置内容补充</a></p>\n<p><a href=\"https://www.yitoujing.com/article/17\">Padavan固件设置IPTV双网融合 任意设备观看IPTV</a></p>\n<p><a href=\"https://www.diygogogo.com/article/item/3988.html\">https://www.diygogogo.com/article/item/3988.html</a></p>\n<p><a href=\"https://github.com/wuwentao/bj-unicom-iptv/blob/master/iptv.md\">IPTV中继原理</a></p>\n<hr>\n<p>Padavan固件是基于华硕的RT-N56U开发派生并以其名字命名的Asuswrt固件，在国内亦俗称为老毛子固件。该固件具有稳定、简洁、功能强大、高性能等优点，内存和CPU消耗低，使用过程中几乎无发热。本文将介绍Padavan固件的常用版本以及刷机方法，并分享一些实用的功能和设置。</p>\n<p><a href=\"https://opt.cn2qq.com/padavan/\">hiboy移植版Pandavan下载</a></p>\n<p><a href=\"https://github.com/hanwckf/rt-n56u/\">hanwckf移植版Padavan</a> (最新版截止2023年12月份目前停留在2020年11月27日版本)</p>","categories":[{"name":"IPTV","path":"api/categories/IPTV.json"}],"tags":[{"name":"机顶盒","path":"api/tags/机顶盒.json"},{"name":"andriod","path":"api/tags/andriod.json"},{"name":"ADSL","path":"api/tags/ADSL.json"},{"name":"IPTV","path":"api/tags/IPTV.json"},{"name":"直播","path":"api/tags/直播.json"},{"name":"livetv","path":"api/tags/livetv.json"},{"name":"tv","path":"api/tags/tv.json"},{"name":"电视","path":"api/tags/电视.json"},{"name":"网络影视资源","path":"api/tags/网络影视资源.json"},{"name":"组播","path":"api/tags/组播.json"},{"name":"组播转单播","path":"api/tags/组播转单播.json"}]}