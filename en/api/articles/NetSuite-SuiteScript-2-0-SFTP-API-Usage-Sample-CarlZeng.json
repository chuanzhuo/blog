{"title":"NetSuite SuiteScript 2.0 SFTP API Usage Sample-CarlZeng","slug":"NetSuite-SuiteScript-2-0-SFTP-API-Usage-Sample-CarlZeng","date":"2017-06-23T08:32:00.000Z","updated":"2023-10-08T13:38:52.658Z","comments":true,"path":"api/articles/NetSuite-SuiteScript-2-0-SFTP-API-Usage-Sample-CarlZeng.json","excerpt":"Background: Created a test SuiteLet script, after correct credential, it will do: 1. Upload/Sent specific NS File Cabinet file to SFTP server.(NS -> S","covers":["http://images2015.cnblogs.com/blog/41238/201706/41238-20170623162453038-1310980693.jpg","http://images2015.cnblogs.com/blog/41238/201706/41238-20170623162535616-1946962584.jpg"],"content":"<p>Background: Created a test SuiteLet script, after correct credential, it will do: 1. Upload&#x2F;Sent specific NS File Cabinet file to SFTP server.(NS -&gt; S</p>\n<!-- more -->\n<h2 id=\"Background\"><a href=\"#Background\" class=\"headerlink\" title=\"Background:\"></a>Background:</h2><p>Created a test SuiteLet script, after correct credential, it will do:<br>1. Upload&#x2F;Sent specific NS File Cabinet file to SFTP server.(NS -&gt; SFTP)<br>2. Get a specific file from SFTP server to NS File Cabinet.(SFTP -&gt; NS)</p>\n<h2 id=\"Screen-Shoot-GET\"><a href=\"#Screen-Shoot-GET\" class=\"headerlink\" title=\"Screen Shoot - GET:\"></a>Screen Shoot - GET:</h2><p><img data-src=\"http://images2015.cnblogs.com/blog/41238/201706/41238-20170623162453038-1310980693.jpg\" alt=\"Upload/Sent specific NS File Cabinet file to SFTP server.\"></p>\n<h2 id=\"Screen-Shoot-POST\"><a href=\"#Screen-Shoot-POST\" class=\"headerlink\" title=\"Screen Shoot - POST:\"></a>Screen Shoot - POST:<img data-src=\"http://images2015.cnblogs.com/blog/41238/201706/41238-20170623162535616-1946962584.jpg\" alt=\"Upload/Sent specific NS File Cabinet file to SFTP server. Response\" title=\"Upload/Sent specific NS File Cabinet file to SFTP server. Response\"></h2><h2 id=\"Sample-Code\"><a href=\"#Sample-Code\" class=\"headerlink\" title=\"Sample Code\"></a>Sample Code</h2><p>&#x2F;**<br> * @NApiVersion 2.x<br> * @NScriptType Suitelet<br> * @NModuleScope SameAccount<br> *<br> * @Note: This’s a test script which will do: <br><br> *        1. Upload&#x2F;Sent specific NS File Cabinet file to SFTP server.(NS -&gt;<br> *        SFTP)<br><br> *        2. Get a specific file from SFTP server to NS File Cabinet.(SFTP -&gt;<br> *        NS) *&#x2F; define(<br>        [ ‘N&#x2F;error’, ‘N&#x2F;sftp’, ‘N&#x2F;file’, ‘N&#x2F;runtime’, ‘N&#x2F;search’, ‘N&#x2F;transaction’, ‘N&#x2F;ui&#x2F;serverWidget’ ], &#x2F;**<br>         * @param {error}<br>         *            error<br>         * @param {file}<br>         *            file<br>         * @param {runtime}<br>         *            runtime<br>         * @param {search}<br>         *            search<br>         * @param {transaction}<br>         *            transaction<br>         * @param {serverWidget}<br>         *            ui *&#x2F;<br>        function(error, sftp, file, runtime, search, transaction, ui) { &#x2F;**<br>             * Definition of the Suitelet script trigger point.<br>             *<br>             * @param {Object}<br>             *            context<br>             * @param {ServerRequest}<br>             *            context.request - Encapsulation of the incoming<br>             *            request<br>             * @param {ServerResponse}<br>             *            context.response - Encapsulation of the Suitelet<br>             *            response<br>             * @Since 2015.2 *&#x2F;<br>            function onRequest(context) { var strSftpServerUrl &#x3D; ‘123.112.249.93’; var strSftpDir &#x3D; ‘Public’; &#x2F;&#x2F; *nix command: ssh-keyscan -t rsa -p 22 123.112.249.93<br>                var strHostKey &#x3D; “AAAAB3NzaC1yc2EAAAABIwAAAQEAul&#x2F;AnqfetlyUR6cMEEHNEsJWXk+9mo2nCSgkgU1sIwC91qoWHc&#x2F;QQl+5fNYZnF93x60IQ6rjmeW6h5E44xLqZ2g6UtA6ZB1nkTZS41imbTUb+Apge0xyE32&#x2F;XI8aMdaG9ZORvuRJARz4dwtnIHBwZUQBjvOpcdala0nObHiCasG1QKpTk0OYPqwRYijKHDfaW5oPmMIYrQWnLHQ8E6krL8a9gKHcwtsyJh&#x2F;Ng6sEZdpVHL6ZE&#x2F;8&#x2F;EyTGOED14Qh1QIN3Lbk2RLPPO5tHYS6rMlozGqTRVwadaBtXV8jXfsrUGzciu3JnEO3HHXBT4ILeEGdqWpDSA5t8TC986PJ4yw&#x3D;&#x3D;”; var strHostKeyType &#x3D; ‘rsa’; var objRequest &#x3D; context.request; if (objRequest.method &#x3D;&#x3D;&#x3D; ‘GET’) { var form &#x3D; ui.createForm({<br>                        title : ‘SFTP Transfer Sample’ }); var objUserFld &#x3D; form.addField({<br>                        id : ‘custpage_username’,<br>                        type : ui.FieldType.TEXT,<br>                        label : ‘SFTP User Name’ });<br>                    objUserFld.breakType = ui.FieldBreakType.STARTCOL;<br>                    objUserFld.isMandatory = true;</p>\n<pre><code>                form\n                        .addCredentialField(&#123;\n                            id : &#39;custpage\\_sftp\\_password\\_token&#39;,\n                            label : &#39;SFTP Password&#39;,\n                            restrictToScriptIds : \\[ &#39;customscript\\_pri\\_sl\\_sftptransfer\\_test&#39; \\],\n                            restrictToDomains : \\[ strSftpServerUrl \\],\n                        &#125;);\n\n                form.addSubmitButton(&#123;\n                    label : &#39;Submit&#39; &#125;);\n                context.response.writePage(form);\n\n            &#125; else if (objRequest.method === &#39;POST&#39;) &#123; var strSftpUserName = objRequest.parameters.custpage\\_username; var passwordToken = objRequest.parameters.custpage\\_sftp\\_password\\_token;\n                log.debug(&#123;\n                    title : &#39;New password token&#39;,\n                    details : passwordToken \\+ &#39;, Sftp User: &#39;\n                            + strSftpUserName\n                &#125;); var connection = sftp.createConnection(&#123;\n                    username : strSftpUserName,\n                    passwordGuid : passwordToken,\n                    url : strSftpServerUrl,\n                    port : 22,\n                    directory : strSftpDir,\n                    hostKey : strHostKey,\n                    hostKeyType : strHostKeyType\n                &#125;); /\\*\\*\n                 \\* \\[1\\] Uploading the file to the external SFTP server. \\*/\n                var myFileToUpload = file.load(&#123;\n                    id : 9288 &#125;); // file.create(&#123;\n                // name : &#39;originalname.txt&#39;,\n                // fileType : file.Type.PLAINTEXT,\n                // contents : &#39;I am a test file. Hear me roar.&#39;\n                // &#125;);\n</code></pre>\n<p> connection.upload({ &#x2F;&#x2F; directory : ‘Public&#x2F;‘,<br>                        filename : ‘newFileNameOnServer_TEST.js’,<br>                        file : myFileToUpload,<br>                        replaceExisting : true }); &#x2F;**<br>                     * [2] Download sftp files to NetSuite FileCabinet *&#x2F;<br>                    var downloadedFile &#x3D; connection.download({ &#x2F;&#x2F; directory : ‘Public’,<br>                        filename : ‘tomato(123.114.225.191).ovpn.txt’ });<br>                    downloadedFile.folder = -10;<br>                    downloadedFile.save();</p>\n<pre><code>                context.response\n                        .write(&#39;1. Uploaded newFileNameOnServer\\_TEST.js to SFTP server(&quot;Public&quot; folder). \\\\n\\\\r2. Downloaded &quot;tomato(123.114.225.191).ovpn.txt&quot; to fileCabinet(&quot;Attachments Received&quot; folder).&#39;); return true;\n            &#125;\n        &#125; return &#123;\n            onRequest : onRequest\n        &#125;;\n\n    &#125;);\n</code></pre>\n<h2 id=\"Open-MAC-OS-Build-in-SFTP-server\"><a href=\"#Open-MAC-OS-Build-in-SFTP-server\" class=\"headerlink\" title=\"Open MAC OS Build-in SFTP server\"></a>Open MAC OS Build-in SFTP server</h2><p>　<a href=\"http://osxdaily.com/2011/09/29/start-an-ftp-or-sftp-server-in-mac-os-x-lion/\">http://osxdaily.com/2011/09/29/start-an-ftp-or-sftp-server-in-mac-os-x-lion/</a></p>\n<h2 id=\"Error-Messages\"><a href=\"#Error-Messages\" class=\"headerlink\" title=\"Error Messages\"></a>Error Messages</h2><p>Some time error message is cofusing.</p>\n<p>I.e. AN_ERROR_OCCURRED_WHILE_DECRYPT_PASSWORDGUID</p>\n<!-- p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco} p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco; color: #3933ff} span.s1 {color: #000000} span.s2 {color: #3933ff} span.Apple-tab-span {white-space:pre} -->\n\n<p>This error comes when POST of SuiteLet executing</p>\n<!-- p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco} span.s1 {color: #931a68} span.Apple-tab-span {white-space:pre} -->\n\n<p>var connection &#x3D; sftp.createConnection({<br>      username : strSftpUserName,<br>      passwordGuid : passwordToken,<br>      url : strSftpServerUrl,<br>      port : 22,<br>      directory : strSftpDir,<br>      hostKey : strHostKey,<br>      hostKeyType : strHostKeyType<br>     });</p>\n<p>But actually the problem is in GET side field definition:</p>\n<p>form<br>       .addCredentialField({<br>        id : ‘custpage_sftp_password_token’,<br>        label : ‘SFTP Password’,<br>        restrictToScriptIds : [ ‘customscript_pri_sl_sftptransfer_test’ ],<br>        restrictToDomains : [ strSftpServerUrl ],<br>       });</p>\n<p>You might ONLY need restrictToScriptIds and restrictToDomains;  </p>\n<p>Adding restrictToCurrentUser: true MIGHT causing error.</p>\n<!-- p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco; color: #3933ff} p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco} span.s1 {color: #000000} span.s2 {text-decoration: underline} span.Apple-tab-span {white-space:pre} -->","more":"<p>Background: Created a test SuiteLet script, after correct credential, it will do: 1. Upload&#x2F;Sent specific NS File Cabinet file to SFTP server.(NS -&gt; S</p>\n<!-- more -->\n<h2 id=\"Background\"><a href=\"#Background\" class=\"headerlink\" title=\"Background:\"></a>Background:</h2><p>Created a test SuiteLet script, after correct credential, it will do:<br>1. Upload&#x2F;Sent specific NS File Cabinet file to SFTP server.(NS -&gt; SFTP)<br>2. Get a specific file from SFTP server to NS File Cabinet.(SFTP -&gt; NS)</p>\n<h2 id=\"Screen-Shoot-GET\"><a href=\"#Screen-Shoot-GET\" class=\"headerlink\" title=\"Screen Shoot - GET:\"></a>Screen Shoot - GET:</h2><p><img data-src=\"http://images2015.cnblogs.com/blog/41238/201706/41238-20170623162453038-1310980693.jpg\" alt=\"Upload/Sent specific NS File Cabinet file to SFTP server.\"></p>\n<h2 id=\"Screen-Shoot-POST\"><a href=\"#Screen-Shoot-POST\" class=\"headerlink\" title=\"Screen Shoot - POST:\"></a>Screen Shoot - POST:<img data-src=\"http://images2015.cnblogs.com/blog/41238/201706/41238-20170623162535616-1946962584.jpg\" alt=\"Upload/Sent specific NS File Cabinet file to SFTP server. Response\" title=\"Upload/Sent specific NS File Cabinet file to SFTP server. Response\"></h2><h2 id=\"Sample-Code\"><a href=\"#Sample-Code\" class=\"headerlink\" title=\"Sample Code\"></a>Sample Code</h2><p>&#x2F;**<br> * @NApiVersion 2.x<br> * @NScriptType Suitelet<br> * @NModuleScope SameAccount<br> *<br> * @Note: This’s a test script which will do: <br><br> *        1. Upload&#x2F;Sent specific NS File Cabinet file to SFTP server.(NS -&gt;<br> *        SFTP)<br><br> *        2. Get a specific file from SFTP server to NS File Cabinet.(SFTP -&gt;<br> *        NS) *&#x2F; define(<br>        [ ‘N&#x2F;error’, ‘N&#x2F;sftp’, ‘N&#x2F;file’, ‘N&#x2F;runtime’, ‘N&#x2F;search’, ‘N&#x2F;transaction’, ‘N&#x2F;ui&#x2F;serverWidget’ ], &#x2F;**<br>         * @param {error}<br>         *            error<br>         * @param {file}<br>         *            file<br>         * @param {runtime}<br>         *            runtime<br>         * @param {search}<br>         *            search<br>         * @param {transaction}<br>         *            transaction<br>         * @param {serverWidget}<br>         *            ui *&#x2F;<br>        function(error, sftp, file, runtime, search, transaction, ui) { &#x2F;**<br>             * Definition of the Suitelet script trigger point.<br>             *<br>             * @param {Object}<br>             *            context<br>             * @param {ServerRequest}<br>             *            context.request - Encapsulation of the incoming<br>             *            request<br>             * @param {ServerResponse}<br>             *            context.response - Encapsulation of the Suitelet<br>             *            response<br>             * @Since 2015.2 *&#x2F;<br>            function onRequest(context) { var strSftpServerUrl &#x3D; ‘123.112.249.93’; var strSftpDir &#x3D; ‘Public’; &#x2F;&#x2F; *nix command: ssh-keyscan -t rsa -p 22 123.112.249.93<br>                var strHostKey &#x3D; “AAAAB3NzaC1yc2EAAAABIwAAAQEAul&#x2F;AnqfetlyUR6cMEEHNEsJWXk+9mo2nCSgkgU1sIwC91qoWHc&#x2F;QQl+5fNYZnF93x60IQ6rjmeW6h5E44xLqZ2g6UtA6ZB1nkTZS41imbTUb+Apge0xyE32&#x2F;XI8aMdaG9ZORvuRJARz4dwtnIHBwZUQBjvOpcdala0nObHiCasG1QKpTk0OYPqwRYijKHDfaW5oPmMIYrQWnLHQ8E6krL8a9gKHcwtsyJh&#x2F;Ng6sEZdpVHL6ZE&#x2F;8&#x2F;EyTGOED14Qh1QIN3Lbk2RLPPO5tHYS6rMlozGqTRVwadaBtXV8jXfsrUGzciu3JnEO3HHXBT4ILeEGdqWpDSA5t8TC986PJ4yw&#x3D;&#x3D;”; var strHostKeyType &#x3D; ‘rsa’; var objRequest &#x3D; context.request; if (objRequest.method &#x3D;&#x3D;&#x3D; ‘GET’) { var form &#x3D; ui.createForm({<br>                        title : ‘SFTP Transfer Sample’ }); var objUserFld &#x3D; form.addField({<br>                        id : ‘custpage_username’,<br>                        type : ui.FieldType.TEXT,<br>                        label : ‘SFTP User Name’ });<br>                    objUserFld.breakType = ui.FieldBreakType.STARTCOL;<br>                    objUserFld.isMandatory = true;</p>\n<pre><code>                form\n                        .addCredentialField(&#123;\n                            id : &#39;custpage\\_sftp\\_password\\_token&#39;,\n                            label : &#39;SFTP Password&#39;,\n                            restrictToScriptIds : \\[ &#39;customscript\\_pri\\_sl\\_sftptransfer\\_test&#39; \\],\n                            restrictToDomains : \\[ strSftpServerUrl \\],\n                        &#125;);\n\n                form.addSubmitButton(&#123;\n                    label : &#39;Submit&#39; &#125;);\n                context.response.writePage(form);\n\n            &#125; else if (objRequest.method === &#39;POST&#39;) &#123; var strSftpUserName = objRequest.parameters.custpage\\_username; var passwordToken = objRequest.parameters.custpage\\_sftp\\_password\\_token;\n                log.debug(&#123;\n                    title : &#39;New password token&#39;,\n                    details : passwordToken \\+ &#39;, Sftp User: &#39;\n                            + strSftpUserName\n                &#125;); var connection = sftp.createConnection(&#123;\n                    username : strSftpUserName,\n                    passwordGuid : passwordToken,\n                    url : strSftpServerUrl,\n                    port : 22,\n                    directory : strSftpDir,\n                    hostKey : strHostKey,\n                    hostKeyType : strHostKeyType\n                &#125;); /\\*\\*\n                 \\* \\[1\\] Uploading the file to the external SFTP server. \\*/\n                var myFileToUpload = file.load(&#123;\n                    id : 9288 &#125;); // file.create(&#123;\n                // name : &#39;originalname.txt&#39;,\n                // fileType : file.Type.PLAINTEXT,\n                // contents : &#39;I am a test file. Hear me roar.&#39;\n                // &#125;);\n</code></pre>\n<p> connection.upload({ &#x2F;&#x2F; directory : ‘Public&#x2F;‘,<br>                        filename : ‘newFileNameOnServer_TEST.js’,<br>                        file : myFileToUpload,<br>                        replaceExisting : true }); &#x2F;**<br>                     * [2] Download sftp files to NetSuite FileCabinet *&#x2F;<br>                    var downloadedFile &#x3D; connection.download({ &#x2F;&#x2F; directory : ‘Public’,<br>                        filename : ‘tomato(123.114.225.191).ovpn.txt’ });<br>                    downloadedFile.folder = -10;<br>                    downloadedFile.save();</p>\n<pre><code>                context.response\n                        .write(&#39;1. Uploaded newFileNameOnServer\\_TEST.js to SFTP server(&quot;Public&quot; folder). \\\\n\\\\r2. Downloaded &quot;tomato(123.114.225.191).ovpn.txt&quot; to fileCabinet(&quot;Attachments Received&quot; folder).&#39;); return true;\n            &#125;\n        &#125; return &#123;\n            onRequest : onRequest\n        &#125;;\n\n    &#125;);\n</code></pre>\n<h2 id=\"Open-MAC-OS-Build-in-SFTP-server\"><a href=\"#Open-MAC-OS-Build-in-SFTP-server\" class=\"headerlink\" title=\"Open MAC OS Build-in SFTP server\"></a>Open MAC OS Build-in SFTP server</h2><p>　<a href=\"http://osxdaily.com/2011/09/29/start-an-ftp-or-sftp-server-in-mac-os-x-lion/\">http://osxdaily.com/2011/09/29/start-an-ftp-or-sftp-server-in-mac-os-x-lion/</a></p>\n<h2 id=\"Error-Messages\"><a href=\"#Error-Messages\" class=\"headerlink\" title=\"Error Messages\"></a>Error Messages</h2><p>Some time error message is cofusing.</p>\n<p>I.e. AN_ERROR_OCCURRED_WHILE_DECRYPT_PASSWORDGUID</p>\n<!-- p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco} p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco; color: #3933ff} span.s1 {color: #000000} span.s2 {color: #3933ff} span.Apple-tab-span {white-space:pre} -->\n\n<p>This error comes when POST of SuiteLet executing</p>\n<!-- p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco} span.s1 {color: #931a68} span.Apple-tab-span {white-space:pre} -->\n\n<p>var connection &#x3D; sftp.createConnection({<br>      username : strSftpUserName,<br>      passwordGuid : passwordToken,<br>      url : strSftpServerUrl,<br>      port : 22,<br>      directory : strSftpDir,<br>      hostKey : strHostKey,<br>      hostKeyType : strHostKeyType<br>     });</p>\n<p>But actually the problem is in GET side field definition:</p>\n<p>form<br>       .addCredentialField({<br>        id : ‘custpage_sftp_password_token’,<br>        label : ‘SFTP Password’,<br>        restrictToScriptIds : [ ‘customscript_pri_sl_sftptransfer_test’ ],<br>        restrictToDomains : [ strSftpServerUrl ],<br>       });</p>\n<p>You might ONLY need restrictToScriptIds and restrictToDomains;  </p>\n<p>Adding restrictToCurrentUser: true MIGHT causing error.</p>\n<!-- p.p1 {margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco; color: #3933ff} p.p2 {margin: 0.0px 0.0px 0.0px 0.0px; font: 11.0px Monaco} span.s1 {color: #000000} span.s2 {text-decoration: underline} span.Apple-tab-span {white-space:pre} -->","categories":[{"name":"NetSuite","path":"api/categories/NetSuite.json"}],"tags":[{"name":"NetSuite","path":"api/tags/NetSuite.json"}]}