{"title":"Establishing a DNS Tunnel to Bypass WiFi User Password Authentication for Internet Access","slug":"如何建立dns隧道来突破连接WIFI后用户密码认证的上网方式","date":"2024-02-19T12:08:44.000Z","updated":"2024-05-14T03:11:30.264Z","comments":true,"path":"api/articles/如何建立dns隧道来突破连接WIFI后用户密码认证的上网方式.json","excerpt":" [Figure] ","covers":["https://img.carlzeng.top:3/i/2024/02/21/65d58e67ec924.png","https://img.carlzeng.top:3/i/2024/02/21/65d5c73550e5f.png","https://img.carlzeng.top:3/i/2024/02/21/65d5c789f3d63.png"],"content":"<img class=\"lozad\" data-src=\"\">\n\n<img data-src=\"https://img.carlzeng.top:3/i/2024/02/21/65d58e67ec924.png\" alt=\"image-20240221134517708\" style=\"zoom:50%;\" />\n\n<span id=\"more\"></span>\n\n<ul>\n<li>The optimization of DNS A records was successfully tested on March 5, 2024, specifically targeting the enhancement of t1ns’ A records.</li>\n</ul>\n<h2 id=\"Utility\"><a href=\"#Utility\" class=\"headerlink\" title=\"Utility\"></a>Utility</h2><p>Establishing a DNS tunnel serves the purpose of circumventing WiFi connection authentication, allowing users to access the internet. This endeavor also involves comprehending the operational principles of iodine.</p>\n<p>Test Environment:</p>\n<ul>\n<li>OpenWrt on J4125: Employed as the server.</li>\n<li>Mac OS X Computer: Employed as the client.</li>\n</ul>\n<h2 id=\"Implementation\"><a href=\"#Implementation\" class=\"headerlink\" title=\"Implementation\"></a>Implementation</h2><p>Refer to the following procedure for detailed implementation steps, including the overarching framework.</p>\n<p>Once the client iodine connects to the server iodined, it proceeds to encapsulate SSH for internet access (or utilizes alternative methods such as VPN&#x2F;SOCKS proxy).</p>\n<p>Current Objective: Overcoming the need for re-entering credentials (typically, a username and password) post WiFi connection establishment (often accompanied by internet usage time restrictions, like utilizing phone numbers as usernames and sending passwords via SMS).</p>\n<p>Current Application: Establishing a DNS tunnel to bypass WiFi connection authentication prompts, then remotely managing or issuing commands to Linux hosts via SSH.</p>\n<p>Next Steps:</p>\n<ul>\n<li>How to enhance speed? Minimizing wait times during connection usage (presently demanding considerable patience).</li>\n<li>Are there other application scenarios? Or possibilities for integration with other applications?</li>\n</ul>\n<h1 id=\"Sources-of-Related-Knowledge-Inspiration\"><a href=\"#Sources-of-Related-Knowledge-Inspiration\" class=\"headerlink\" title=\"Sources of Related Knowledge&#x2F;Inspiration\"></a>Sources of Related Knowledge&#x2F;Inspiration</h1><h2 id=\"What-is-DNS-Tunneling\"><a href=\"#What-is-DNS-Tunneling\" class=\"headerlink\" title=\"What is DNS Tunneling?\"></a>What is DNS Tunneling?</h2><p>DNS tunneling involves encapsulating the content of other protocols within the DNS protocol, enabling data transmission and communication through DNS requests and responses.</p>\n<h2 id=\"Principles-of-DNS-Tunneling\"><a href=\"#Principles-of-DNS-Tunneling\" class=\"headerlink\" title=\"Principles of DNS Tunneling:\"></a>Principles of DNS Tunneling:</h2><p>During DNS queries, if the queried domain name is not cached locally on the DNS server, an internet query is made, and the results are returned. With a customized server on the internet, data packet exchange can be facilitated using the DNS protocol. From the perspective of the DNS protocol, these operations appear as multiple queries for specific domain names with resolved results. However, the fundamental issue lies in the anticipation of an IP address as the return result, which may actually be any arbitrary string, including encrypted C&amp;C commands.</p>\n<h2 id=\"Types-of-DNS-Tunnels\"><a href=\"#Types-of-DNS-Tunnels\" class=\"headerlink\" title=\"Types of DNS Tunnels:\"></a>Types of DNS Tunnels:</h2><ol>\n<li><p>Direct Mode: The client directly initiates DNS resolution requests to a specified IP address DNS server.</p>\n</li>\n<li><p>Relay Mode: DNS resolutions traverse the internet through iterative resolution, eventually pointing to a designated DNS server.</p>\n</li>\n</ol>\n<p>The distinction lies in direct mode offering relatively faster speeds but weaker security, while non-direct mode provides slower speeds but better security. In most cases, the relay mode is preferred.</p>\n<h2 id=\"iodine\"><a href=\"#iodine\" class=\"headerlink\" title=\"iodine\"></a>iodine</h2><p>iodine establishes an IPv4 data channel through a DNS server, ideal for networks where the target host can only send DNS requests. Developed in C language, iodine consists of the server program iodined and the client program iodine. Kali Linux includes iodine by default. Download link: <a href=\"https://github.com/Al1ex/iodine\">https://github.com/Al1ex/iodine</a></p>\n<p>iodine operates by creating a LAN using a TAP virtual network adapter on the server side while establishing a virtual network adapter using TAP on the client side. The two communicate through a DNS tunnel, residing within the same LAN (communicable using the ping command). Upon establishing the connection between the client and server, a virtual network adapter labeled “dns0” is added on the client. For further instructions and feature details, please refer to the official documentation of iodine: <a href=\"http://code.kryo.se/iodine\">http://code.kryo.se/iodine</a></p>\n<p>Links:</p>\n<ul>\n<li><a href=\"https://github.com/yarrick/iodine\">https://github.com/yarrick/iodine</a></li>\n<li><a href=\"https://code.kryo.se/iodine/\">https://code.kryo.se/iodine/</a></li>\n</ul>\n<h2 id=\"Another-Tool-dns2tcp\"><a href=\"#Another-Tool-dns2tcp\" class=\"headerlink\" title=\"Another Tool: dns2tcp\"></a>Another Tool: dns2tcp</h2><p>For more information, refer to the article: <a href=\"https://www.carlzeng.top/202305082325.html\">WiFi Wireless Internet SMS Authentication</a>)</p>\n<h1 id=\"Related\"><a href=\"#Related\" class=\"headerlink\" title=\"Related\"></a>Related</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=dns\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h2 id=\"Implementation-Method\"><a href=\"#Implementation-Method\" class=\"headerlink\" title=\"Implementation Method\"></a>Implementation Method</h2><h2 id=\"1-Obtaining-iodined-Server-and-iodine-Client-after-Compilation\"><a href=\"#1-Obtaining-iodined-Server-and-iodine-Client-after-Compilation\" class=\"headerlink\" title=\"1. Obtaining iodined (Server) and iodine (Client) after Compilation\"></a>1. Obtaining iodined (Server) and iodine (Client) after Compilation</h2><p>OpenWrt Platform (Linux):</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">opkg install iodined</span></span><br><span class=\"line\">    Installing iodined (0.7.0-4) to root...</span><br><span class=\"line\">    Downloading https://op.supes.top/23.05/packages/x86_64/packages/iodined_0.7.0-4_x86_64.ipk</span><br><span class=\"line\">    Configuring iodined.</span><br><span class=\"line\">    iodined: Invalid top domain: Too short (&lt; 3)</span><br><span class=\"line\">    Usage: iodined [-v] [-h] [-c] [-s] [-f] [-D] [-u user] [-t chrootdir] [-d device] [-m mtu] [-z context] [-l ip address to listen on] [-p port] [-n external ip] [-b dnsport] [-P password] [-F pidfile] [-i max idle time] tunnel_ip[/netmask] top domain</span><br><span class=\"line\"></span><br><span class=\"line\">-----------------------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">The following part is for the client program: iodine</span><br><span class=\"line\">-----------------------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">opkg install iodine</span></span><br><span class=\"line\">    Installing iodine (0.7.0-4) to root...</span><br><span class=\"line\">    Downloading https://op.supes.top/23.05/packages/x86_64/packages/iodine_0.7.0-4_x86_64.ipk</span><br><span class=\"line\">    Configuring iodine.        </span><br></pre></td></tr></table></figure>\n\n\n\n<p>Mac Platform (Mac OS X):</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iodine-0.8.0 % make</span><br><span class=\"line\">    OS is DARWIN, arch is arm64</span><br><span class=\"line\">    CC tun.c</span><br><span class=\"line\">    CC dns.c</span><br><span class=\"line\">    CC read.c</span><br><span class=\"line\">    CC encoding.c</span><br><span class=\"line\">    CC login.c</span><br><span class=\"line\">    CC base32.c</span><br><span class=\"line\">    CC base64.c</span><br><span class=\"line\">    Making base64u.c</span><br><span class=\"line\">    CC common.c</span><br><span class=\"line\">    common.c:283:2: warning: &#x27;daemon&#x27; is deprecated: first deprecated in macOS 10.5 - Use posix_spawn APIs instead. [-Wdeprecated-declarations]</span><br><span class=\"line\">            daemon(0, 0);</span><br><span class=\"line\">            ^</span><br><span class=\"line\">    /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:294:6: note: &#x27;daemon&#x27; has been explicitly marked deprecated here</span><br><span class=\"line\">    int      daemon(int, int) __DARWIN_1050(daemon) __OSX_AVAILABLE_BUT_DEPRECATED_MSG(__MAC_10_0, __MAC_10_5, __IPHONE_2_0, __IPHONE_2_0, &quot;Use posix_spawn APIs instead.&quot;) __WATCHOS_PROHIBITED __TVOS_PROHIBITED;</span><br><span class=\"line\">             ^</span><br><span class=\"line\">    1 warning generated.</span><br><span class=\"line\">    CC iodine.c</span><br><span class=\"line\">    CC client.c</span><br><span class=\"line\">    CC util.c</span><br><span class=\"line\">    LD ../bin/iodine</span><br><span class=\"line\">    CC iodined.c</span><br><span class=\"line\">    CC user.c</span><br><span class=\"line\">    CC fw_query.c</span><br><span class=\"line\">    LD ../bin/iodined</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-Setting-DNS-Records\"><a href=\"#2-Setting-DNS-Records\" class=\"headerlink\" title=\"2. Setting DNS Records\"></a>2. Setting DNS Records</h2><p>Taking the configuration for dash.cloudflare.com as an example, add the following two DNS records:</p>\n<table>\n<thead>\n<tr>\n<th>DNS Type</th>\n<th>Name</th>\n<th>Content&#x2F;Value</th>\n<th>Note</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>NS</td>\n<td>t1</td>\n<td>t1ns.carlzeng.top</td>\n<td>DNS Only</td>\n</tr>\n<tr>\n<td>A</td>\n<td>t1ns</td>\n<td>125.34.235.88</td>\n<td>DNS Only, Optimizable</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>As of March 5, 2024, through practical testing, it was found that this A record could be optimized by removing the wildcard * A record resolution. The rationale is that the application only needs the IP address of t1ns.carlzeng.top, and by not setting this A record, the DNS system automatically uses the IP address corresponding to the wildcard *, which achieves the desired effect of reducing the number of DNS records that need to be updated by broadband DDNS.</p>\n</blockquote>\n<h2 id=\"3-Running-the-Server-Side-iodined\"><a href=\"#3-Running-the-Server-Side-iodined\" class=\"headerlink\" title=\"3. Running the Server-Side iodined\"></a>3. Running the Server-Side iodined</h2><p><img data-src=\"https://img.carlzeng.top:3/i/2024/02/21/65d5c73550e5f.png\" alt=\"image-20240221174938467\"></p>\n<p>This example does not work on OpenWrt: iodined -f -P 123 10.0.0.1  t1.carlzeng.top</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Use -c and -l 125.34.235.88 to specify the WAN interface<span class=\"string\">&#x27;s listening IP, -D for debug information output</span></span></span><br><span class=\"line\">iodined -D -f -c -l 125.34.235.88 -p 53 -P 123 192.168.99.1/24 t1.carlzeng.top</span><br></pre></td></tr></table></figure>\n\n<p>For long-term operation, run in the background:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">iodined -c -l 125.34.235.88 -p 53 -P 123 192.168.99.1/24 t1.carlzeng.top</span>        </span><br><span class=\"line\">Opened dns0                                                                                                 </span><br><span class=\"line\">Setting IP of dns0 to 192.168.99.1                                                                          </span><br><span class=\"line\">Setting MTU of dns0 to 1130                                                                                 </span><br><span class=\"line\">Opened IPv4 UDP socket                                                                                      </span><br><span class=\"line\">Listening to DNS for domain t1.carlzeng.top                                                                 </span><br><span class=\"line\">Detaching from the terminal...  </span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-Running-the-Client-Side-iodine\"><a href=\"#4-Running-the-Client-Side-iodine\" class=\"headerlink\" title=\"4. Running the Client-Side iodine\"></a>4. Running the Client-Side iodine</h2><p><img data-src=\"https://img.carlzeng.top:3/i/2024/02/21/65d5c789f3d63.png\" alt=\"image-20240221175104599\"></p>\n<p>For the Mac OS X client, run:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./iodine -f -P 123 t1.carlzeng.top</span><br></pre></td></tr></table></figure>\n\n\n\n<p>Upon successful connection, expect the following information:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">./iodine -f -P 123 t1.carlzeng.top</span></span><br><span class=\"line\">No tunnel devices found, trying utun</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">Opened utun6</span><br><span class=\"line\">Opened IPv4 UDP socket</span><br><span class=\"line\">Sending DNS queries for t1.carlzeng.top to 223.5.5.5</span><br><span class=\"line\">Autodetecting DNS query type (use -T to override).</span><br><span class=\"line\">Using DNS type NULL queries</span><br><span class=\"line\">Version ok, both using protocol v 0x00000502. You are user #0</span><br><span class=\"line\">Setting IP of utun6 to 10.0.0.2</span><br><span class=\"line\">Adding route 10.0.0.0/27 to 10.0.0.2</span><br><span class=\"line\">add net 10.0.0.0: gateway 10.0.0.2</span><br><span class=\"line\">Setting MTU of utun6 to 1130</span><br><span class=\"line\">Server tunnel IP is 10.0.0.1</span><br><span class=\"line\">Requesting the server address to attempt raw UDP mode (skip with -r) </span><br><span class=\"line\">Server is at 125.34.235.88, trying raw login: (skip with -r) ....failed</span><br><span class=\"line\">Using EDNS0 extension</span><br><span class=\"line\">DNS queries get changed to lowercase, keeping upstream codec Base32</span><br><span class=\"line\">No alternative downstream codec available, using default (Raw)</span><br><span class=\"line\">Switching to lazy mode for low latency</span><br><span class=\"line\">Server switched to lazy mode</span><br><span class=\"line\">Autoprobing max downstream fragment size... (skip with -m fragsize)</span><br><span class=\"line\">...768 not ok.. ...384 not ok.. 192 ok.. ...288 not ok.. ...240 not ok.. 216 ok.. 228 ok.. ...234 not ok.. ...231 not ok.. 230 ok.. will use 230-2=228</span><br><span class=\"line\">Setting downstream fragment size to max 228...</span><br><span class=\"line\">Connection setup complete, transmitting data.</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># sudo ./iodine -r -f -P 123 202.106.0.20 t1.carlzeng.top</span><br><span class=\"line\">No tunnel devices found, trying utun</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">Opened utun6</span><br><span class=\"line\">Opened IPv4 UDP socket</span><br><span class=\"line\">Sending DNS queries for t1.carlzeng.top to 202.106.0.20</span><br><span class=\"line\">Autodetecting DNS query type (use -T to override)...</span><br><span class=\"line\">Using DNS type NULL queries</span><br><span class=\"line\">Version ok, both using protocol v 0x00000502. You are user #6</span><br><span class=\"line\">Setting IP of utun6 to 192.168.99.8</span><br><span class=\"line\">Adding route 192.168.99.0/24 to 192.168.99.8</span><br><span class=\"line\">Setting MTU of utun6 to 1130</span><br><span class=\"line\">Server tunnel IP is 192.168.99.1</span><br><span class=\"line\">Skipping raw mode</span><br><span class=\"line\">Using EDNS0 extension</span><br><span class=\"line\">Switching upstream to codec Base128</span><br><span class=\"line\">Server switched upstream to codec Base128</span><br><span class=\"line\">No alternative downstream codec available, using default (Raw)</span><br><span class=\"line\">Switching to lazy mode for low latency</span><br><span class=\"line\">Server switched to lazy mode</span><br><span class=\"line\">Autoprobing max downstream fragment size... (skip with -m fragsize)</span><br><span class=\"line\">...768 not ok.. ...384 not ok.. 192 ok.. ...288 not ok.. ...240 not ok.. 216 ok.. 228 ok.. ...234 not ok.. ...231 not ok.. 230 ok.. will use 230-2=228</span><br><span class=\"line\">Setting downstream fragment size to max 228...</span><br><span class=\"line\">Connection setup complete, transmitting data.</span><br></pre></td></tr></table></figure>\n\n\n\n<p>For long-term operation, run in the background:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">sudo ./iodine -r -P 123 202.106.0.20 t1.carlzeng.top</span></span><br><span class=\"line\">Opened utun6</span><br><span class=\"line\">Opened IPv4 UDP socket</span><br><span class=\"line\">Setting IP of utun6 to 192.168.99.3</span><br><span class=\"line\">Setting MTU of utun6 to 1130</span><br><span class=\"line\">Server tunnel IP is 192.168.99.1</span><br><span class=\"line\">Switching upstream to codec Base32</span><br><span class=\"line\">Switching to lazy mode for low latency</span><br><span class=\"line\">Connection setup complete, transmitting data.</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"5-Using-DNS-Tunneling-for-Internet-Proxying\"><a href=\"#5-Using-DNS-Tunneling-for-Internet-Proxying\" class=\"headerlink\" title=\"5. Using DNS Tunneling for Internet Proxying\"></a>5. Using DNS Tunneling for Internet Proxying</h2><p>Note: This solution requires enabling the firewall settings on the iodined server (i.e., OpenWrt); enabling SSH access to run from the WAN interface, and enabling the firewall to accept inbound traffic.</p>\n<p>Practical Proxy Usage:</p>\n<p>SSH Tunneling Solution:<br>   Client-Side Operation:<br>    ssh -CfNg -D 7001 <a href=\"mailto:&#x72;&#x6f;&#111;&#116;&#64;&#49;&#57;&#x32;&#46;&#49;&#x36;&#x38;&#x2e;&#x39;&#57;&#46;&#x31;\">&#x72;&#x6f;&#111;&#116;&#64;&#49;&#57;&#x32;&#46;&#49;&#x36;&#x38;&#x2e;&#x39;&#57;&#46;&#x31;</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -CfNg -D 7001 root@192.168.99.1</span><br></pre></td></tr></table></figure>\n\n<p>Configure the client’s browser to use the SOCKS proxy:<br>    IP Address<br>    Port 7001</p>\n<h2 id=\"Reflection\"><a href=\"#Reflection\" class=\"headerlink\" title=\"Reflection\"></a>Reflection</h2><p>Through the above setup, web pages can be accessed normally. However, the internet speed is less than satisfactory and does not serve significant daily use purposes.<br>Unless in extremely special cases, such as triggering specific pre-compiled instructions on the remote server via this tunnel connection.</p>\n<h1 id=\"Errors-and-Solutions\"><a href=\"#Errors-and-Solutions\" class=\"headerlink\" title=\"Errors and Solutions\"></a>Errors and Solutions</h1><p>#1.Client-side Freezing:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">./iodine -f -P 123 t1.carlzeng.top</span>                                                                  </span><br><span class=\"line\">No tunnel devices found, trying utun                                                                                       </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">Opened utun5                                                                                                            </span><br><span class=\"line\">Opened IPv4 UDP socket                                                                                                  </span><br><span class=\"line\">Sending DNS queries for t1.carlzeng.top to 192.168.6.1                                                                  </span><br><span class=\"line\">Autodetecting DNS query type (use -T to override)..iodine: Got NOTIMP as reply: server does not support our request     </span><br><span class=\"line\">.......iodine: Got NOTIMP as reply: server does not support our request                                                 </span><br><span class=\"line\">.......iodine: Got NOTIMP as reply: server does not support our request                                                 </span><br><span class=\"line\">.....                                                                                                                   </span><br><span class=\"line\">iodine: No suitable DNS query type found. Are you connected to a network?                                               </span><br><span class=\"line\">iodine: If you expect very long roundtrip delays, use -T explicitly.                                                    </span><br><span class=\"line\">iodine: (Also, connecting to an &quot;ancient&quot; version of iodined won&#x27;t work.)  </span><br><span class=\"line\"></span><br><span class=\"line\">------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">sudo ./iodine -f -P 123 202.106.0.20 t1.carlzeng.top</span></span><br><span class=\"line\">No tunnel devices found, trying utun</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">Opened utun6</span><br><span class=\"line\">Opened IPv4 UDP socket</span><br><span class=\"line\">Sending DNS queries for t1.carlzeng.top to 202.106.0.20</span><br><span class=\"line\">Autodetecting DNS query type (use -T to override).....................</span><br><span class=\"line\">iodine: No suitable DNS query type found. Are you connected to a network?</span><br><span class=\"line\">iodine: If you expect very long roundtrip delays, use -T explicitly.</span><br><span class=\"line\">iodine: (Also, connecting to an &quot;ancient&quot; version of iodined won&#x27;t work.)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>#1 Solution:</p>\n<p>Switch to a different client for testing (e.g., switch from Mac to OpenWrt or Debian)</p>\n<p>Use the online official tool for testing: <a href=\"https://code.kryo.se/iodine/check-it/\">https://code.kryo.se/iodine/check-it/</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Troubleshoot your iodine setup</span><br><span class=\"line\"></span><br><span class=\"line\">Analyzing DNS setup for tunnel domain &#x27;t1.carlzeng.top&#x27;... (might take some time)</span><br><span class=\"line\"></span><br><span class=\"line\">Looking for nameserver for carlzeng.top.. got paityn.ns.cloudflare.com (at 108.162.194.18).</span><br><span class=\"line\">Resolving delegation of t1.carlzeng.top at 108.162.194.18... to t1ns.carlzeng.top (at 125.34.235.88).</span><br><span class=\"line\"></span><br><span class=\"line\">Expecting iodined to be accessible at 125.34.235.88... no reply.</span><br><span class=\"line\"></span><br><span class=\"line\">Error: Make sure iodined is running and the firewall accepts UDP port 53. Also check any port forwards in use.</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iodined -f -DDD -l 125.34.235.88 -p 53 -P 123 10.0.0.1 t1.carlzeng.top</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Final improved server-side <span class=\"built_in\">command</span></span></span><br><span class=\"line\">iodined -f -c -l 125.34.235.88 -p 53 -P 123 10.0.0.1 t1.carlzeng.top  </span><br></pre></td></tr></table></figure>\n\n<p>7.1. Problems with Connection Speed</p>\n<p>7.1 Solution:</p>\n<p>Check the server’s internet connection speed and usage to confirm the performance issues.</p>\n<p>7.2. SSH Connection Error</p>\n<p>7.2 Solution:</p>\n<p>Verify the SSH credentials and network configurations to ensure a successful connection.</p>\n<p>7.3. Asynchronous Behavior</p>\n<p>7.3 Solution:</p>\n<p>Review the network settings and configurations to ensure synchronized communication between the client and server.</p>\n<h1 id=\"Troubleshoot-your-iodine-setup-and-DNS-setup-Online\"><a href=\"#Troubleshoot-your-iodine-setup-and-DNS-setup-Online\" class=\"headerlink\" title=\"Troubleshoot your iodine setup and DNS setup Online\"></a><strong>Troubleshoot your iodine setup and DNS setup Online</strong></h1><p><a href=\"https://code.kryo.se/iodine/check-it/\">https://code.kryo.se/iodine/check-it/</a></p>\n<p><strong>Troubleshoot your iodine setup</strong></p>\n<p>Analyzing DNS setup for tunnel domain ‘t1.carlzeng.top’… (might take some time)</p>\n<p>Looking for nameserver for carlzeng.top.. got amir.ns.cloudflare.com (at 108.162.193.62).<br>Resolving delegation of t1.carlzeng.top at 108.162.193.62… to t1ns.carlzeng.top (at 125.34.235.**).</p>\n<p>Expecting iodined to be accessible at 125.34.235.**… yes, using proto 00000502.<br>Testing iodine reply using default nameserver… ok.</p>\n<p><strong>Well done</strong>, your iodine setup seems fine!</p>\n<h1 id=\"Thanks\"><a href=\"#Thanks\" class=\"headerlink\" title=\"Thanks\"></a>Thanks</h1><p><a href=\"https://code.kryo.se/iodine/\">iodine</a> 》 <a href=\"https://code.kryo.se/iodine/README.html\">ReadMe</a> 〉<a href=\"https://github.com/yarrick/iodine\">Github</a></p>\n<p><a href=\"https://forum.turris.cz/t/howto-dns-tunneling-with-iodined-on-turrisos-hbk-5-2-3/15620/4\">[HOWTO] DNS tunneling with iodined on TurrisOS HBK [5.2.3]</a></p>\n<p><a href=\"https://m.freebuf.com/articles/network/284740.html\">内网隐藏通信隧道技术——DNS隧道</a></p>\n<p><a href=\"https://mihail.stoynov.com/2013/02/16/iodined-how-to-use-free-internet-on-airports/\">Iodined - how to use free internet on airports</a></p>\n","more":"<ul>\n<li>The optimization of DNS A records was successfully tested on March 5, 2024, specifically targeting the enhancement of t1ns’ A records.</li>\n</ul>\n<h2 id=\"Utility\"><a href=\"#Utility\" class=\"headerlink\" title=\"Utility\"></a>Utility</h2><p>Establishing a DNS tunnel serves the purpose of circumventing WiFi connection authentication, allowing users to access the internet. This endeavor also involves comprehending the operational principles of iodine.</p>\n<p>Test Environment:</p>\n<ul>\n<li>OpenWrt on J4125: Employed as the server.</li>\n<li>Mac OS X Computer: Employed as the client.</li>\n</ul>\n<h2 id=\"Implementation\"><a href=\"#Implementation\" class=\"headerlink\" title=\"Implementation\"></a>Implementation</h2><p>Refer to the following procedure for detailed implementation steps, including the overarching framework.</p>\n<p>Once the client iodine connects to the server iodined, it proceeds to encapsulate SSH for internet access (or utilizes alternative methods such as VPN&#x2F;SOCKS proxy).</p>\n<p>Current Objective: Overcoming the need for re-entering credentials (typically, a username and password) post WiFi connection establishment (often accompanied by internet usage time restrictions, like utilizing phone numbers as usernames and sending passwords via SMS).</p>\n<p>Current Application: Establishing a DNS tunnel to bypass WiFi connection authentication prompts, then remotely managing or issuing commands to Linux hosts via SSH.</p>\n<p>Next Steps:</p>\n<ul>\n<li>How to enhance speed? Minimizing wait times during connection usage (presently demanding considerable patience).</li>\n<li>Are there other application scenarios? Or possibilities for integration with other applications?</li>\n</ul>\n<h1 id=\"Sources-of-Related-Knowledge-Inspiration\"><a href=\"#Sources-of-Related-Knowledge-Inspiration\" class=\"headerlink\" title=\"Sources of Related Knowledge&#x2F;Inspiration\"></a>Sources of Related Knowledge&#x2F;Inspiration</h1><h2 id=\"What-is-DNS-Tunneling\"><a href=\"#What-is-DNS-Tunneling\" class=\"headerlink\" title=\"What is DNS Tunneling?\"></a>What is DNS Tunneling?</h2><p>DNS tunneling involves encapsulating the content of other protocols within the DNS protocol, enabling data transmission and communication through DNS requests and responses.</p>\n<h2 id=\"Principles-of-DNS-Tunneling\"><a href=\"#Principles-of-DNS-Tunneling\" class=\"headerlink\" title=\"Principles of DNS Tunneling:\"></a>Principles of DNS Tunneling:</h2><p>During DNS queries, if the queried domain name is not cached locally on the DNS server, an internet query is made, and the results are returned. With a customized server on the internet, data packet exchange can be facilitated using the DNS protocol. From the perspective of the DNS protocol, these operations appear as multiple queries for specific domain names with resolved results. However, the fundamental issue lies in the anticipation of an IP address as the return result, which may actually be any arbitrary string, including encrypted C&amp;C commands.</p>\n<h2 id=\"Types-of-DNS-Tunnels\"><a href=\"#Types-of-DNS-Tunnels\" class=\"headerlink\" title=\"Types of DNS Tunnels:\"></a>Types of DNS Tunnels:</h2><ol>\n<li><p>Direct Mode: The client directly initiates DNS resolution requests to a specified IP address DNS server.</p>\n</li>\n<li><p>Relay Mode: DNS resolutions traverse the internet through iterative resolution, eventually pointing to a designated DNS server.</p>\n</li>\n</ol>\n<p>The distinction lies in direct mode offering relatively faster speeds but weaker security, while non-direct mode provides slower speeds but better security. In most cases, the relay mode is preferred.</p>\n<h2 id=\"iodine\"><a href=\"#iodine\" class=\"headerlink\" title=\"iodine\"></a>iodine</h2><p>iodine establishes an IPv4 data channel through a DNS server, ideal for networks where the target host can only send DNS requests. Developed in C language, iodine consists of the server program iodined and the client program iodine. Kali Linux includes iodine by default. Download link: <a href=\"https://github.com/Al1ex/iodine\">https://github.com/Al1ex/iodine</a></p>\n<p>iodine operates by creating a LAN using a TAP virtual network adapter on the server side while establishing a virtual network adapter using TAP on the client side. The two communicate through a DNS tunnel, residing within the same LAN (communicable using the ping command). Upon establishing the connection between the client and server, a virtual network adapter labeled “dns0” is added on the client. For further instructions and feature details, please refer to the official documentation of iodine: <a href=\"http://code.kryo.se/iodine\">http://code.kryo.se/iodine</a></p>\n<p>Links:</p>\n<ul>\n<li><a href=\"https://github.com/yarrick/iodine\">https://github.com/yarrick/iodine</a></li>\n<li><a href=\"https://code.kryo.se/iodine/\">https://code.kryo.se/iodine/</a></li>\n</ul>\n<h2 id=\"Another-Tool-dns2tcp\"><a href=\"#Another-Tool-dns2tcp\" class=\"headerlink\" title=\"Another Tool: dns2tcp\"></a>Another Tool: dns2tcp</h2><p>For more information, refer to the article: <a href=\"https://www.carlzeng.top/202305082325.html\">WiFi Wireless Internet SMS Authentication</a>)</p>\n<h1 id=\"Related\"><a href=\"#Related\" class=\"headerlink\" title=\"Related\"></a>Related</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=dns\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h2 id=\"Implementation-Method\"><a href=\"#Implementation-Method\" class=\"headerlink\" title=\"Implementation Method\"></a>Implementation Method</h2><h2 id=\"1-Obtaining-iodined-Server-and-iodine-Client-after-Compilation\"><a href=\"#1-Obtaining-iodined-Server-and-iodine-Client-after-Compilation\" class=\"headerlink\" title=\"1. Obtaining iodined (Server) and iodine (Client) after Compilation\"></a>1. Obtaining iodined (Server) and iodine (Client) after Compilation</h2><p>OpenWrt Platform (Linux):</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">opkg install iodined</span></span><br><span class=\"line\">    Installing iodined (0.7.0-4) to root...</span><br><span class=\"line\">    Downloading https://op.supes.top/23.05/packages/x86_64/packages/iodined_0.7.0-4_x86_64.ipk</span><br><span class=\"line\">    Configuring iodined.</span><br><span class=\"line\">    iodined: Invalid top domain: Too short (&lt; 3)</span><br><span class=\"line\">    Usage: iodined [-v] [-h] [-c] [-s] [-f] [-D] [-u user] [-t chrootdir] [-d device] [-m mtu] [-z context] [-l ip address to listen on] [-p port] [-n external ip] [-b dnsport] [-P password] [-F pidfile] [-i max idle time] tunnel_ip[/netmask] top domain</span><br><span class=\"line\"></span><br><span class=\"line\">-----------------------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\">The following part is for the client program: iodine</span><br><span class=\"line\">-----------------------------------------------------------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">opkg install iodine</span></span><br><span class=\"line\">    Installing iodine (0.7.0-4) to root...</span><br><span class=\"line\">    Downloading https://op.supes.top/23.05/packages/x86_64/packages/iodine_0.7.0-4_x86_64.ipk</span><br><span class=\"line\">    Configuring iodine.        </span><br></pre></td></tr></table></figure>\n\n\n\n<p>Mac Platform (Mac OS X):</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iodine-0.8.0 % make</span><br><span class=\"line\">    OS is DARWIN, arch is arm64</span><br><span class=\"line\">    CC tun.c</span><br><span class=\"line\">    CC dns.c</span><br><span class=\"line\">    CC read.c</span><br><span class=\"line\">    CC encoding.c</span><br><span class=\"line\">    CC login.c</span><br><span class=\"line\">    CC base32.c</span><br><span class=\"line\">    CC base64.c</span><br><span class=\"line\">    Making base64u.c</span><br><span class=\"line\">    CC common.c</span><br><span class=\"line\">    common.c:283:2: warning: &#x27;daemon&#x27; is deprecated: first deprecated in macOS 10.5 - Use posix_spawn APIs instead. [-Wdeprecated-declarations]</span><br><span class=\"line\">            daemon(0, 0);</span><br><span class=\"line\">            ^</span><br><span class=\"line\">    /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/stdlib.h:294:6: note: &#x27;daemon&#x27; has been explicitly marked deprecated here</span><br><span class=\"line\">    int      daemon(int, int) __DARWIN_1050(daemon) __OSX_AVAILABLE_BUT_DEPRECATED_MSG(__MAC_10_0, __MAC_10_5, __IPHONE_2_0, __IPHONE_2_0, &quot;Use posix_spawn APIs instead.&quot;) __WATCHOS_PROHIBITED __TVOS_PROHIBITED;</span><br><span class=\"line\">             ^</span><br><span class=\"line\">    1 warning generated.</span><br><span class=\"line\">    CC iodine.c</span><br><span class=\"line\">    CC client.c</span><br><span class=\"line\">    CC util.c</span><br><span class=\"line\">    LD ../bin/iodine</span><br><span class=\"line\">    CC iodined.c</span><br><span class=\"line\">    CC user.c</span><br><span class=\"line\">    CC fw_query.c</span><br><span class=\"line\">    LD ../bin/iodined</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"2-Setting-DNS-Records\"><a href=\"#2-Setting-DNS-Records\" class=\"headerlink\" title=\"2. Setting DNS Records\"></a>2. Setting DNS Records</h2><p>Taking the configuration for dash.cloudflare.com as an example, add the following two DNS records:</p>\n<table>\n<thead>\n<tr>\n<th>DNS Type</th>\n<th>Name</th>\n<th>Content&#x2F;Value</th>\n<th>Note</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>NS</td>\n<td>t1</td>\n<td>t1ns.carlzeng.top</td>\n<td>DNS Only</td>\n</tr>\n<tr>\n<td>A</td>\n<td>t1ns</td>\n<td>125.34.235.88</td>\n<td>DNS Only, Optimizable</td>\n</tr>\n</tbody></table>\n<blockquote>\n<p>As of March 5, 2024, through practical testing, it was found that this A record could be optimized by removing the wildcard * A record resolution. The rationale is that the application only needs the IP address of t1ns.carlzeng.top, and by not setting this A record, the DNS system automatically uses the IP address corresponding to the wildcard *, which achieves the desired effect of reducing the number of DNS records that need to be updated by broadband DDNS.</p>\n</blockquote>\n<h2 id=\"3-Running-the-Server-Side-iodined\"><a href=\"#3-Running-the-Server-Side-iodined\" class=\"headerlink\" title=\"3. Running the Server-Side iodined\"></a>3. Running the Server-Side iodined</h2><p><img data-src=\"https://img.carlzeng.top:3/i/2024/02/21/65d5c73550e5f.png\" alt=\"image-20240221174938467\"></p>\n<p>This example does not work on OpenWrt: iodined -f -P 123 10.0.0.1  t1.carlzeng.top</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Use -c and -l 125.34.235.88 to specify the WAN interface<span class=\"string\">&#x27;s listening IP, -D for debug information output</span></span></span><br><span class=\"line\">iodined -D -f -c -l 125.34.235.88 -p 53 -P 123 192.168.99.1/24 t1.carlzeng.top</span><br></pre></td></tr></table></figure>\n\n<p>For long-term operation, run in the background:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">iodined -c -l 125.34.235.88 -p 53 -P 123 192.168.99.1/24 t1.carlzeng.top</span>        </span><br><span class=\"line\">Opened dns0                                                                                                 </span><br><span class=\"line\">Setting IP of dns0 to 192.168.99.1                                                                          </span><br><span class=\"line\">Setting MTU of dns0 to 1130                                                                                 </span><br><span class=\"line\">Opened IPv4 UDP socket                                                                                      </span><br><span class=\"line\">Listening to DNS for domain t1.carlzeng.top                                                                 </span><br><span class=\"line\">Detaching from the terminal...  </span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-Running-the-Client-Side-iodine\"><a href=\"#4-Running-the-Client-Side-iodine\" class=\"headerlink\" title=\"4. Running the Client-Side iodine\"></a>4. Running the Client-Side iodine</h2><p><img data-src=\"https://img.carlzeng.top:3/i/2024/02/21/65d5c789f3d63.png\" alt=\"image-20240221175104599\"></p>\n<p>For the Mac OS X client, run:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./iodine -f -P 123 t1.carlzeng.top</span><br></pre></td></tr></table></figure>\n\n\n\n<p>Upon successful connection, expect the following information:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">./iodine -f -P 123 t1.carlzeng.top</span></span><br><span class=\"line\">No tunnel devices found, trying utun</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">Opened utun6</span><br><span class=\"line\">Opened IPv4 UDP socket</span><br><span class=\"line\">Sending DNS queries for t1.carlzeng.top to 223.5.5.5</span><br><span class=\"line\">Autodetecting DNS query type (use -T to override).</span><br><span class=\"line\">Using DNS type NULL queries</span><br><span class=\"line\">Version ok, both using protocol v 0x00000502. You are user #0</span><br><span class=\"line\">Setting IP of utun6 to 10.0.0.2</span><br><span class=\"line\">Adding route 10.0.0.0/27 to 10.0.0.2</span><br><span class=\"line\">add net 10.0.0.0: gateway 10.0.0.2</span><br><span class=\"line\">Setting MTU of utun6 to 1130</span><br><span class=\"line\">Server tunnel IP is 10.0.0.1</span><br><span class=\"line\">Requesting the server address to attempt raw UDP mode (skip with -r) </span><br><span class=\"line\">Server is at 125.34.235.88, trying raw login: (skip with -r) ....failed</span><br><span class=\"line\">Using EDNS0 extension</span><br><span class=\"line\">DNS queries get changed to lowercase, keeping upstream codec Base32</span><br><span class=\"line\">No alternative downstream codec available, using default (Raw)</span><br><span class=\"line\">Switching to lazy mode for low latency</span><br><span class=\"line\">Server switched to lazy mode</span><br><span class=\"line\">Autoprobing max downstream fragment size... (skip with -m fragsize)</span><br><span class=\"line\">...768 not ok.. ...384 not ok.. 192 ok.. ...288 not ok.. ...240 not ok.. 216 ok.. 228 ok.. ...234 not ok.. ...231 not ok.. 230 ok.. will use 230-2=228</span><br><span class=\"line\">Setting downstream fragment size to max 228...</span><br><span class=\"line\">Connection setup complete, transmitting data.</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># sudo ./iodine -r -f -P 123 202.106.0.20 t1.carlzeng.top</span><br><span class=\"line\">No tunnel devices found, trying utun</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">Opened utun6</span><br><span class=\"line\">Opened IPv4 UDP socket</span><br><span class=\"line\">Sending DNS queries for t1.carlzeng.top to 202.106.0.20</span><br><span class=\"line\">Autodetecting DNS query type (use -T to override)...</span><br><span class=\"line\">Using DNS type NULL queries</span><br><span class=\"line\">Version ok, both using protocol v 0x00000502. You are user #6</span><br><span class=\"line\">Setting IP of utun6 to 192.168.99.8</span><br><span class=\"line\">Adding route 192.168.99.0/24 to 192.168.99.8</span><br><span class=\"line\">Setting MTU of utun6 to 1130</span><br><span class=\"line\">Server tunnel IP is 192.168.99.1</span><br><span class=\"line\">Skipping raw mode</span><br><span class=\"line\">Using EDNS0 extension</span><br><span class=\"line\">Switching upstream to codec Base128</span><br><span class=\"line\">Server switched upstream to codec Base128</span><br><span class=\"line\">No alternative downstream codec available, using default (Raw)</span><br><span class=\"line\">Switching to lazy mode for low latency</span><br><span class=\"line\">Server switched to lazy mode</span><br><span class=\"line\">Autoprobing max downstream fragment size... (skip with -m fragsize)</span><br><span class=\"line\">...768 not ok.. ...384 not ok.. 192 ok.. ...288 not ok.. ...240 not ok.. 216 ok.. 228 ok.. ...234 not ok.. ...231 not ok.. 230 ok.. will use 230-2=228</span><br><span class=\"line\">Setting downstream fragment size to max 228...</span><br><span class=\"line\">Connection setup complete, transmitting data.</span><br></pre></td></tr></table></figure>\n\n\n\n<p>For long-term operation, run in the background:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">sudo ./iodine -r -P 123 202.106.0.20 t1.carlzeng.top</span></span><br><span class=\"line\">Opened utun6</span><br><span class=\"line\">Opened IPv4 UDP socket</span><br><span class=\"line\">Setting IP of utun6 to 192.168.99.3</span><br><span class=\"line\">Setting MTU of utun6 to 1130</span><br><span class=\"line\">Server tunnel IP is 192.168.99.1</span><br><span class=\"line\">Switching upstream to codec Base32</span><br><span class=\"line\">Switching to lazy mode for low latency</span><br><span class=\"line\">Connection setup complete, transmitting data.</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"5-Using-DNS-Tunneling-for-Internet-Proxying\"><a href=\"#5-Using-DNS-Tunneling-for-Internet-Proxying\" class=\"headerlink\" title=\"5. Using DNS Tunneling for Internet Proxying\"></a>5. Using DNS Tunneling for Internet Proxying</h2><p>Note: This solution requires enabling the firewall settings on the iodined server (i.e., OpenWrt); enabling SSH access to run from the WAN interface, and enabling the firewall to accept inbound traffic.</p>\n<p>Practical Proxy Usage:</p>\n<p>SSH Tunneling Solution:<br>   Client-Side Operation:<br>    ssh -CfNg -D 7001 <a href=\"mailto:&#x72;&#x6f;&#111;&#116;&#64;&#49;&#57;&#x32;&#46;&#49;&#x36;&#x38;&#x2e;&#x39;&#57;&#46;&#x31;\">&#x72;&#x6f;&#111;&#116;&#64;&#49;&#57;&#x32;&#46;&#49;&#x36;&#x38;&#x2e;&#x39;&#57;&#46;&#x31;</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -CfNg -D 7001 root@192.168.99.1</span><br></pre></td></tr></table></figure>\n\n<p>Configure the client’s browser to use the SOCKS proxy:<br>    IP Address<br>    Port 7001</p>\n<h2 id=\"Reflection\"><a href=\"#Reflection\" class=\"headerlink\" title=\"Reflection\"></a>Reflection</h2><p>Through the above setup, web pages can be accessed normally. However, the internet speed is less than satisfactory and does not serve significant daily use purposes.<br>Unless in extremely special cases, such as triggering specific pre-compiled instructions on the remote server via this tunnel connection.</p>\n<h1 id=\"Errors-and-Solutions\"><a href=\"#Errors-and-Solutions\" class=\"headerlink\" title=\"Errors and Solutions\"></a>Errors and Solutions</h1><p>#1.Client-side Freezing:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">./iodine -f -P 123 t1.carlzeng.top</span>                                                                  </span><br><span class=\"line\">No tunnel devices found, trying utun                                                                                       </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">iodine: open_utun: connect: Resource busy                                                                               </span><br><span class=\"line\">Opened utun5                                                                                                            </span><br><span class=\"line\">Opened IPv4 UDP socket                                                                                                  </span><br><span class=\"line\">Sending DNS queries for t1.carlzeng.top to 192.168.6.1                                                                  </span><br><span class=\"line\">Autodetecting DNS query type (use -T to override)..iodine: Got NOTIMP as reply: server does not support our request     </span><br><span class=\"line\">.......iodine: Got NOTIMP as reply: server does not support our request                                                 </span><br><span class=\"line\">.......iodine: Got NOTIMP as reply: server does not support our request                                                 </span><br><span class=\"line\">.....                                                                                                                   </span><br><span class=\"line\">iodine: No suitable DNS query type found. Are you connected to a network?                                               </span><br><span class=\"line\">iodine: If you expect very long roundtrip delays, use -T explicitly.                                                    </span><br><span class=\"line\">iodine: (Also, connecting to an &quot;ancient&quot; version of iodined won&#x27;t work.)  </span><br><span class=\"line\"></span><br><span class=\"line\">------------------------------------------------------------------------</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">sudo ./iodine -f -P 123 202.106.0.20 t1.carlzeng.top</span></span><br><span class=\"line\">No tunnel devices found, trying utun</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">iodine: open_utun: connect: Resource busy</span><br><span class=\"line\">Opened utun6</span><br><span class=\"line\">Opened IPv4 UDP socket</span><br><span class=\"line\">Sending DNS queries for t1.carlzeng.top to 202.106.0.20</span><br><span class=\"line\">Autodetecting DNS query type (use -T to override).....................</span><br><span class=\"line\">iodine: No suitable DNS query type found. Are you connected to a network?</span><br><span class=\"line\">iodine: If you expect very long roundtrip delays, use -T explicitly.</span><br><span class=\"line\">iodine: (Also, connecting to an &quot;ancient&quot; version of iodined won&#x27;t work.)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>#1 Solution:</p>\n<p>Switch to a different client for testing (e.g., switch from Mac to OpenWrt or Debian)</p>\n<p>Use the online official tool for testing: <a href=\"https://code.kryo.se/iodine/check-it/\">https://code.kryo.se/iodine/check-it/</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Troubleshoot your iodine setup</span><br><span class=\"line\"></span><br><span class=\"line\">Analyzing DNS setup for tunnel domain &#x27;t1.carlzeng.top&#x27;... (might take some time)</span><br><span class=\"line\"></span><br><span class=\"line\">Looking for nameserver for carlzeng.top.. got paityn.ns.cloudflare.com (at 108.162.194.18).</span><br><span class=\"line\">Resolving delegation of t1.carlzeng.top at 108.162.194.18... to t1ns.carlzeng.top (at 125.34.235.88).</span><br><span class=\"line\"></span><br><span class=\"line\">Expecting iodined to be accessible at 125.34.235.88... no reply.</span><br><span class=\"line\"></span><br><span class=\"line\">Error: Make sure iodined is running and the firewall accepts UDP port 53. Also check any port forwards in use.</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">iodined -f -DDD -l 125.34.235.88 -p 53 -P 123 10.0.0.1 t1.carlzeng.top</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Final improved server-side <span class=\"built_in\">command</span></span></span><br><span class=\"line\">iodined -f -c -l 125.34.235.88 -p 53 -P 123 10.0.0.1 t1.carlzeng.top  </span><br></pre></td></tr></table></figure>\n\n<p>7.1. Problems with Connection Speed</p>\n<p>7.1 Solution:</p>\n<p>Check the server’s internet connection speed and usage to confirm the performance issues.</p>\n<p>7.2. SSH Connection Error</p>\n<p>7.2 Solution:</p>\n<p>Verify the SSH credentials and network configurations to ensure a successful connection.</p>\n<p>7.3. Asynchronous Behavior</p>\n<p>7.3 Solution:</p>\n<p>Review the network settings and configurations to ensure synchronized communication between the client and server.</p>\n<h1 id=\"Troubleshoot-your-iodine-setup-and-DNS-setup-Online\"><a href=\"#Troubleshoot-your-iodine-setup-and-DNS-setup-Online\" class=\"headerlink\" title=\"Troubleshoot your iodine setup and DNS setup Online\"></a><strong>Troubleshoot your iodine setup and DNS setup Online</strong></h1><p><a href=\"https://code.kryo.se/iodine/check-it/\">https://code.kryo.se/iodine/check-it/</a></p>\n<p><strong>Troubleshoot your iodine setup</strong></p>\n<p>Analyzing DNS setup for tunnel domain ‘t1.carlzeng.top’… (might take some time)</p>\n<p>Looking for nameserver for carlzeng.top.. got amir.ns.cloudflare.com (at 108.162.193.62).<br>Resolving delegation of t1.carlzeng.top at 108.162.193.62… to t1ns.carlzeng.top (at 125.34.235.**).</p>\n<p>Expecting iodined to be accessible at 125.34.235.**… yes, using proto 00000502.<br>Testing iodine reply using default nameserver… ok.</p>\n<p><strong>Well done</strong>, your iodine setup seems fine!</p>\n<h1 id=\"Thanks\"><a href=\"#Thanks\" class=\"headerlink\" title=\"Thanks\"></a>Thanks</h1><p><a href=\"https://code.kryo.se/iodine/\">iodine</a> 》 <a href=\"https://code.kryo.se/iodine/README.html\">ReadMe</a> 〉<a href=\"https://github.com/yarrick/iodine\">Github</a></p>\n<p><a href=\"https://forum.turris.cz/t/howto-dns-tunneling-with-iodined-on-turrisos-hbk-5-2-3/15620/4\">[HOWTO] DNS tunneling with iodined on TurrisOS HBK [5.2.3]</a></p>\n<p><a href=\"https://m.freebuf.com/articles/network/284740.html\">内网隐藏通信隧道技术——DNS隧道</a></p>\n<p><a href=\"https://mihail.stoynov.com/2013/02/16/iodined-how-to-use-free-internet-on-airports/\">Iodined - how to use free internet on airports</a></p>","categories":[{"name":"DNS Tunnel","path":"api/categories/DNS Tunnel.json"}],"tags":[{"name":"Mac","path":"api/tags/Mac.json"},{"name":"OpenWrt","path":"api/tags/OpenWrt.json"},{"name":"Debian","path":"api/tags/Debian.json"},{"name":"DNS","path":"api/tags/DNS.json"},{"name":"Iodine","path":"api/tags/Iodine.json"},{"name":"WiFi","path":"api/tags/WiFi.json"},{"name":"Tunnel","path":"api/tags/Tunnel.json"},{"name":"SSH","path":"api/tags/SSH.json"}]}