{"title":"Constructing Image Repository Switching Site Images to Self-built Services","slug":"搭建图床-切换本站图片至自建服务","date":"2024-01-22T13:51:38.000Z","updated":"2024-03-05T04:47:58.694Z","comments":true,"path":"api/articles/搭建图床-切换本站图片至自建服务.json","excerpt":" [Figure] Home broadband environment: Practical process sharing of setting up Lankong Image Repository","covers":["https://img.carlzeng.top:3/i/2024/02/21/65d5961d744d1.png"],"content":"<img class=\"lozad\" data-src=\"https://img.carlzeng.top:3/i/2024/02/21/65d5961d744d1.png\">\n\n<p>Home broadband environment: Practical process sharing of setting up Lankong Image Repository</p>\n<span id=\"more\"></span> \n\n<div> <button onclick=\"synthesizeSpeech()\">Read full article aloud</button> </div> <audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio> <script> function synthesizeSpeech() { var inputText = document.getElementsByClassName('post-block')[0].innerText; var voice = \"ZH\"; var url = 'https://tts.carlzeng.top:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice; var audioPlayer = document.getElementById('audioPlayer'); audioPlayer.src = url; audioPlayer.load(); audioPlayer.play(); } </script>\n\n\n\n<h1 id=\"Purpose-Usage\"><a href=\"#Purpose-Usage\" class=\"headerlink\" title=\"Purpose&#x2F;Usage\"></a>Purpose&#x2F;Usage</h1><p>For personal use, self-hosted image repositories are currently adequate.</p>\n<p>Visit: <a href=\"https://img.carlzeng.top:3/\">Carl Notes Image Repository</a></p>\n<p>Login to the backend to manage image content in the image repository</p>\n<h1 id=\"Related-Content\"><a href=\"#Related-Content\" class=\"headerlink\" title=\"Related Content\"></a>Related Content</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=image\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"Implementation-Method\"><a href=\"#Implementation-Method\" class=\"headerlink\" title=\"Implementation Method\"></a>Implementation Method</h1><h2 id=\"Docker-Deployment-of-Lsky-Pro-Image-Repository-Application\"><a href=\"#Docker-Deployment-of-Lsky-Pro-Image-Repository-Application\" class=\"headerlink\" title=\"Docker Deployment of Lsky Pro Image Repository Application\"></a>Docker Deployment of Lsky Pro Image Repository Application</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull dko0/lsky-pro</span><br><span class=\"line\"></span><br><span class=\"line\">docker run  --name lsky-pro --restart always -p 8091:80 -d -v /volume2/KingchuxingSSD512G/MacBookPro_Skitch:/var/www/html dko0/lsky-pro</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Convert to docker-compose</span></span><br><span class=\"line\">version: &#x27;3.9&#x27;</span><br><span class=\"line\">services:</span><br><span class=\"line\">    lsky-pro:</span><br><span class=\"line\">        image: dko0/lsky-pro</span><br><span class=\"line\">        volumes:</span><br><span class=\"line\">            - &#x27;/volume2/KingchuxingSSD512G/MacBookPro_Skitch:/var/www/html&#x27;</span><br><span class=\"line\">        ports:</span><br><span class=\"line\">            - &#x27;8091:80&#x27;</span><br><span class=\"line\">        restart: always</span><br><span class=\"line\">        container_name: lsky-pro</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Configuring-PicGO\"><a href=\"#Configuring-PicGO\" class=\"headerlink\" title=\"Configuring PicGO\"></a>Configuring PicGO</h2><p>Download and install PicGo, Mac OS X: [PicGo-2.4.0-beta.6-x64.dmg](<a href=\"https://github.com/Molunerfinn/PicGo/releases\">https://github.com/Molunerfinn/PicGo/releases</a><br><a href=\"https://picgo-release.molunerfinn.com/2.4.0-beta.6/PicGo-2.4.0-beta.6-x64.dmg\">https://picgo-release.molunerfinn.com/2.4.0-beta.6/PicGo-2.4.0-beta.6-x64.dmg</a>)</p>\n<p>Open the main interface&#x2F;window, plugin settings, search and install the plugin named: lankong (version downloaded: lankong 1.1.3)</p>\n<p>Image Settings 》 lankong</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Lsky Pro Version： V2</span><br><span class=\"line\">Server: https://img.carlzeng.top:3</span><br><span class=\"line\">Auth token: Bearer 1|ZRZcNz1E6hAuyV4LytmCqmGx5yST0g9OyhdptXXX</span><br></pre></td></tr></table></figure>\n\n<p>The preferred method to obtain the Auth Token for Lsky Pro Lankong Image Repository, recommended (run the command in Terminal):</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl --location --request POST &#x27;https://imgserver.com:3/api/v1/tokens&#x27; \\</span><br><span class=\"line\">\t--form &#x27;email=&quot;email@email.com&quot;&#x27; \\</span><br><span class=\"line\">\t--form &#x27;password=&quot;password&quot;&#x27;</span><br></pre></td></tr></table></figure>\n\n<p>Please modify the URL to match the URL of your self-hosted Lankong Image Repository, and use your login username and password for email and password.</p>\n<p>This section is based on: <a href=\"https://github.com/hellodk34/picgo-plugin-lankong\">https://github.com/hellodk34/picgo-plugin-lankong</a></p>\n<p>Test: Drag a file here or click to upload, then check the backend of Lankong Image Repository to confirm that the image has been uploaded to the system</p>\n<h2 id=\"Configuring-Typora\"><a href=\"#Configuring-Typora\" class=\"headerlink\" title=\"Configuring Typora\"></a>Configuring Typora</h2><p>Settings 》 Preferences</p>\n<ol>\n<li><p>Switch Typora to Chinese language version (as only the Chinese version currently has the PicGo option)</p>\n</li>\n<li><p>Preferences 》 Images 》 Upload Service Settings. Choose: PicGo.app</p>\n</li>\n<li><p>Then click on: Verify Image Upload Option</p>\n<p>My settings failed the first time, so I checked the logs as instructed:</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">------Error Stack Begin------</span><br><span class=\"line\">Error: You must be logged in to use.</span><br><span class=\"line\">    at Object.We <span class=\"section\">[as handle]</span> (/Applications/PicGo.app/Contents/Resources/app.asar/node_modules/picgo/dist/index.cjs.js:1:21399)</span><br><span class=\"line\">    at processTicksAndRejections (node:internal/process/task_queues:96:5)</span><br><span class=\"line\">    at async je.doUpload (/Applications/PicGo.app/Contents/Resources/app.asar/node_modules/picgo/dist/index.cjs.js:1:19834)</span><br><span class=\"line\">    at async je.start (/Applications/PicGo.app/Contents/Resources/app.asar/node_modules/picgo/dist/index.cjs.js:1:18605)</span><br><span class=\"line\">    at async $t.upload (/Applications/PicGo.app/Contents/Resources/app.asar/node_modules/picgo/dist/index.cjs.js:1:74902)</span><br><span class=\"line\">    at async Object.upload (/Applications/PicGo.app/Contents/Resources/app.asar/index.js:2:686906)</span><br><span class=\"line\">    at async hr (/Applications/PicGo.app/Contents/Resources/app.asar/index.js:2:689655)</span><br><span class=\"line\">    at async /Applications/PicGo.app/Contents/Resources/app.asar/index.js:2:690736</span><br><span class=\"line\">-------Error Stack End------- </span><br><span class=\"line\">2024-02-21 13:37:13 <span class=\"section\">[PicGo INFO]</span> <span class=\"section\">[PicGo Server]</span> upload result  </span><br><span class=\"line\">2024-02-21 13:37:13 <span class=\"section\">[PicGo WARN]</span> <span class=\"section\">[PicGo Server]</span> upload failed, see picgo.log for more detail ↑ </span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Copy an image to the clipboard, paste it into the content of an article, right-click on the image, and upload it</p>\n</li>\n<li><p>PicGo will display the image to be uploaded and the upload progress until the image is automatically uploaded to the image repository</p>\n</li>\n<li><p>Completion of the entire process</p>\n</li>\n</ol>\n<p>You can refer to: <a href=\"https://support.typora.io/Upload-Image/#picgoapp-chinese-language-only\">Upload Images</a></p>\n<h2 id=\"Associating-with-Alist’s-Directory\"><a href=\"#Associating-with-Alist’s-Directory\" class=\"headerlink\" title=\"Associating with Alist’s Directory\"></a>Associating with Alist’s Directory</h2><p>This is an extension made based on personal usage to share all images from the image repository</p>\n<p>Modify docker-compose.yml, add mapping:</p>\n<ul>\n<li>&#x2F;volume2&#x2F;KingchuxingSSD512G&#x2F;MacBookPro_Skitch:&#x2F;home&#x2F;share10</li>\n</ul>\n<p>docker exec -it alist &#x2F;bin&#x2F;bash</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir share7 &amp;&amp; mkdir share8 &amp;&amp; mkdir share9 &amp;&amp; mkdir share10 &amp;&amp; mkdir share11 &amp;&amp; mkdir share12 </span><br></pre></td></tr></table></figure>\n\n<p>Restart docker-compose</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">This will not be successful, need to use docker-compose down and up</span></span><br><span class=\"line\">docker-compose restart</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose down</span><br><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<p>Enter Alist’s backend management, add “Local Storage”</p>\n<p>Map &#x2F;home&#x2F;share10 to the external directory: &#x2F;Image Repository\\MacBookPro_Skitch</p>\n<p>Result similar to: <a href=\"https://file.carlzeng.top:3/%E5%9B%BE%E5%BA%8AMacBookPro_Skitch/storage/app/uploads/2024/02/21\">https://file.carlzeng.top:3/%E5%9B%BE%E5%BA%8AMacBookPro_Skitch&#x2F;storage&#x2F;app&#x2F;uploads&#x2F;2024&#x2F;02&#x2F;21</a></p>\n<h2 id=\"NPM-Reverse-Proxy-Access-with-Port\"><a href=\"#NPM-Reverse-Proxy-Access-with-Port\" class=\"headerlink\" title=\"NPM Reverse Proxy Access with Port\"></a>NPM Reverse Proxy Access with Port</h2><ol>\n<li>Modify &#x2F;config&#x2F;app.php (around lines 57-60, modify the following 2 lines):</li>\n</ol>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Original:</span></span><br><span class=\"line\">  <span class=\"string\">&#x27;url&#x27;</span> =&gt; <span class=\"title function_ invoke__\">env</span>(<span class=\"string\">&#x27;APP_URL&#x27;</span>, <span class=\"string\">&#x27;http://localhost&#x27;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//New:</span></span><br><span class=\"line\">  <span class=\"string\">&#x27;url&#x27;</span> =&gt; <span class=\"title function_ invoke__\">env</span>(<span class=\"string\">&#x27;APP_URL&#x27;</span>, <span class=\"string\">&#x27;https://xxxxx.com:4443&#x27;</span>),</span><br><span class=\"line\"><span class=\"comment\">//Original:</span></span><br><span class=\"line\">  <span class=\"string\">&#x27;asset_url&#x27;</span> =&gt; <span class=\"title function_ invoke__\">env</span>(<span class=\"string\">&#x27;ASSET_URL&#x27;</span>, <span class=\"literal\">null</span>),</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//New:</span></span><br><span class=\"line\">  <span class=\"string\">&#x27;asset_url&#x27;</span> =&gt; <span class=\"title function_ invoke__\">env</span>(<span class=\"string\">&#x27;ASSET_URL&#x27;</span>, <span class=\"string\">&#x27;https://xxxxx.com:4443&#x27;</span>),</span><br></pre></td></tr></table></figure>\n\n<p>Modify <a href=\"https://xxxxx.com:4443/\">https://xxxxx.com:4443</a> to your own domain name and port according to your situation.</p>\n<ol>\n<li>Add a line below line 32 in &#x2F;app&#x2F;Providers&#x2F;ApServiceProvider.php:</li>\n</ol>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Illuminate\\Support\\Facades\\URL::<span class=\"title function_ invoke__\">forceScheme</span>(<span class=\"string\">&#x27;https&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Inspiration-Sources\"><a href=\"#Inspiration-Sources\" class=\"headerlink\" title=\"Inspiration Sources\"></a>Inspiration Sources</h1><p><a href=\"https://hellodk.cn/post/964\">Developed a PicGo image upload plugin for Lankong Image Repository Lsky Pro</a> <a href=\"https://github.com/hellodk34/picgo-plugin-lankong\">picgo-plugin-lankong</a></p>\n<p><a href=\"https://github.com/lsky-org/lsky-pro/issues/317\">Failed to load static resources #317</a></p>\n<p><a href=\"https://github.com/lsky-org/lsky-pro/issues/607\">HTTPS+Domain+Port Access Issue, NginxProxyManager Reverse Proxy #607</a></p>\n<p><a href=\"https://xyzbz.cn/archives/1080/\">Raspberry Pi Deploying Lankong Image Repository through Docker</a></p>\n","more":"<div> <button onclick=\"synthesizeSpeech()\">Read full article aloud</button> </div> <audio controls id=\"audioPlayer\">Your browser does not support the audio element.</audio> <script> function synthesizeSpeech() { var inputText = document.getElementsByClassName('post-block')[0].innerText; var voice = \"ZH\"; var url = 'https://tts.carlzeng.top:3/speech?text=' + encodeURIComponent(inputText.substring(0,3000)) + '&voice=' + voice; var audioPlayer = document.getElementById('audioPlayer'); audioPlayer.src = url; audioPlayer.load(); audioPlayer.play(); } </script>\n\n\n\n<h1 id=\"Purpose-Usage\"><a href=\"#Purpose-Usage\" class=\"headerlink\" title=\"Purpose&#x2F;Usage\"></a>Purpose&#x2F;Usage</h1><p>For personal use, self-hosted image repositories are currently adequate.</p>\n<p>Visit: <a href=\"https://img.carlzeng.top:3/\">Carl Notes Image Repository</a></p>\n<p>Login to the backend to manage image content in the image repository</p>\n<h1 id=\"Related-Content\"><a href=\"#Related-Content\" class=\"headerlink\" title=\"Related Content\"></a>Related Content</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=image\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"Implementation-Method\"><a href=\"#Implementation-Method\" class=\"headerlink\" title=\"Implementation Method\"></a>Implementation Method</h1><h2 id=\"Docker-Deployment-of-Lsky-Pro-Image-Repository-Application\"><a href=\"#Docker-Deployment-of-Lsky-Pro-Image-Repository-Application\" class=\"headerlink\" title=\"Docker Deployment of Lsky Pro Image Repository Application\"></a>Docker Deployment of Lsky Pro Image Repository Application</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull dko0/lsky-pro</span><br><span class=\"line\"></span><br><span class=\"line\">docker run  --name lsky-pro --restart always -p 8091:80 -d -v /volume2/KingchuxingSSD512G/MacBookPro_Skitch:/var/www/html dko0/lsky-pro</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Convert to docker-compose</span></span><br><span class=\"line\">version: &#x27;3.9&#x27;</span><br><span class=\"line\">services:</span><br><span class=\"line\">    lsky-pro:</span><br><span class=\"line\">        image: dko0/lsky-pro</span><br><span class=\"line\">        volumes:</span><br><span class=\"line\">            - &#x27;/volume2/KingchuxingSSD512G/MacBookPro_Skitch:/var/www/html&#x27;</span><br><span class=\"line\">        ports:</span><br><span class=\"line\">            - &#x27;8091:80&#x27;</span><br><span class=\"line\">        restart: always</span><br><span class=\"line\">        container_name: lsky-pro</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Configuring-PicGO\"><a href=\"#Configuring-PicGO\" class=\"headerlink\" title=\"Configuring PicGO\"></a>Configuring PicGO</h2><p>Download and install PicGo, Mac OS X: [PicGo-2.4.0-beta.6-x64.dmg](<a href=\"https://github.com/Molunerfinn/PicGo/releases\">https://github.com/Molunerfinn/PicGo/releases</a><br><a href=\"https://picgo-release.molunerfinn.com/2.4.0-beta.6/PicGo-2.4.0-beta.6-x64.dmg\">https://picgo-release.molunerfinn.com/2.4.0-beta.6/PicGo-2.4.0-beta.6-x64.dmg</a>)</p>\n<p>Open the main interface&#x2F;window, plugin settings, search and install the plugin named: lankong (version downloaded: lankong 1.1.3)</p>\n<p>Image Settings 》 lankong</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Lsky Pro Version： V2</span><br><span class=\"line\">Server: https://img.carlzeng.top:3</span><br><span class=\"line\">Auth token: Bearer 1|ZRZcNz1E6hAuyV4LytmCqmGx5yST0g9OyhdptXXX</span><br></pre></td></tr></table></figure>\n\n<p>The preferred method to obtain the Auth Token for Lsky Pro Lankong Image Repository, recommended (run the command in Terminal):</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl --location --request POST &#x27;https://imgserver.com:3/api/v1/tokens&#x27; \\</span><br><span class=\"line\">\t--form &#x27;email=&quot;email@email.com&quot;&#x27; \\</span><br><span class=\"line\">\t--form &#x27;password=&quot;password&quot;&#x27;</span><br></pre></td></tr></table></figure>\n\n<p>Please modify the URL to match the URL of your self-hosted Lankong Image Repository, and use your login username and password for email and password.</p>\n<p>This section is based on: <a href=\"https://github.com/hellodk34/picgo-plugin-lankong\">https://github.com/hellodk34/picgo-plugin-lankong</a></p>\n<p>Test: Drag a file here or click to upload, then check the backend of Lankong Image Repository to confirm that the image has been uploaded to the system</p>\n<h2 id=\"Configuring-Typora\"><a href=\"#Configuring-Typora\" class=\"headerlink\" title=\"Configuring Typora\"></a>Configuring Typora</h2><p>Settings 》 Preferences</p>\n<ol>\n<li><p>Switch Typora to Chinese language version (as only the Chinese version currently has the PicGo option)</p>\n</li>\n<li><p>Preferences 》 Images 》 Upload Service Settings. Choose: PicGo.app</p>\n</li>\n<li><p>Then click on: Verify Image Upload Option</p>\n<p>My settings failed the first time, so I checked the logs as instructed:</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">------Error Stack Begin------</span><br><span class=\"line\">Error: You must be logged in to use.</span><br><span class=\"line\">    at Object.We <span class=\"section\">[as handle]</span> (/Applications/PicGo.app/Contents/Resources/app.asar/node_modules/picgo/dist/index.cjs.js:1:21399)</span><br><span class=\"line\">    at processTicksAndRejections (node:internal/process/task_queues:96:5)</span><br><span class=\"line\">    at async je.doUpload (/Applications/PicGo.app/Contents/Resources/app.asar/node_modules/picgo/dist/index.cjs.js:1:19834)</span><br><span class=\"line\">    at async je.start (/Applications/PicGo.app/Contents/Resources/app.asar/node_modules/picgo/dist/index.cjs.js:1:18605)</span><br><span class=\"line\">    at async $t.upload (/Applications/PicGo.app/Contents/Resources/app.asar/node_modules/picgo/dist/index.cjs.js:1:74902)</span><br><span class=\"line\">    at async Object.upload (/Applications/PicGo.app/Contents/Resources/app.asar/index.js:2:686906)</span><br><span class=\"line\">    at async hr (/Applications/PicGo.app/Contents/Resources/app.asar/index.js:2:689655)</span><br><span class=\"line\">    at async /Applications/PicGo.app/Contents/Resources/app.asar/index.js:2:690736</span><br><span class=\"line\">-------Error Stack End------- </span><br><span class=\"line\">2024-02-21 13:37:13 <span class=\"section\">[PicGo INFO]</span> <span class=\"section\">[PicGo Server]</span> upload result  </span><br><span class=\"line\">2024-02-21 13:37:13 <span class=\"section\">[PicGo WARN]</span> <span class=\"section\">[PicGo Server]</span> upload failed, see picgo.log for more detail ↑ </span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Copy an image to the clipboard, paste it into the content of an article, right-click on the image, and upload it</p>\n</li>\n<li><p>PicGo will display the image to be uploaded and the upload progress until the image is automatically uploaded to the image repository</p>\n</li>\n<li><p>Completion of the entire process</p>\n</li>\n</ol>\n<p>You can refer to: <a href=\"https://support.typora.io/Upload-Image/#picgoapp-chinese-language-only\">Upload Images</a></p>\n<h2 id=\"Associating-with-Alist’s-Directory\"><a href=\"#Associating-with-Alist’s-Directory\" class=\"headerlink\" title=\"Associating with Alist’s Directory\"></a>Associating with Alist’s Directory</h2><p>This is an extension made based on personal usage to share all images from the image repository</p>\n<p>Modify docker-compose.yml, add mapping:</p>\n<ul>\n<li>&#x2F;volume2&#x2F;KingchuxingSSD512G&#x2F;MacBookPro_Skitch:&#x2F;home&#x2F;share10</li>\n</ul>\n<p>docker exec -it alist &#x2F;bin&#x2F;bash</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir share7 &amp;&amp; mkdir share8 &amp;&amp; mkdir share9 &amp;&amp; mkdir share10 &amp;&amp; mkdir share11 &amp;&amp; mkdir share12 </span><br></pre></td></tr></table></figure>\n\n<p>Restart docker-compose</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">This will not be successful, need to use docker-compose down and up</span></span><br><span class=\"line\">docker-compose restart</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose down</span><br><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n\n<p>Enter Alist’s backend management, add “Local Storage”</p>\n<p>Map &#x2F;home&#x2F;share10 to the external directory: &#x2F;Image Repository\\MacBookPro_Skitch</p>\n<p>Result similar to: <a href=\"https://file.carlzeng.top:3/%E5%9B%BE%E5%BA%8AMacBookPro_Skitch/storage/app/uploads/2024/02/21\">https://file.carlzeng.top:3/%E5%9B%BE%E5%BA%8AMacBookPro_Skitch&#x2F;storage&#x2F;app&#x2F;uploads&#x2F;2024&#x2F;02&#x2F;21</a></p>\n<h2 id=\"NPM-Reverse-Proxy-Access-with-Port\"><a href=\"#NPM-Reverse-Proxy-Access-with-Port\" class=\"headerlink\" title=\"NPM Reverse Proxy Access with Port\"></a>NPM Reverse Proxy Access with Port</h2><ol>\n<li>Modify &#x2F;config&#x2F;app.php (around lines 57-60, modify the following 2 lines):</li>\n</ol>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//Original:</span></span><br><span class=\"line\">  <span class=\"string\">&#x27;url&#x27;</span> =&gt; <span class=\"title function_ invoke__\">env</span>(<span class=\"string\">&#x27;APP_URL&#x27;</span>, <span class=\"string\">&#x27;http://localhost&#x27;</span>),</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//New:</span></span><br><span class=\"line\">  <span class=\"string\">&#x27;url&#x27;</span> =&gt; <span class=\"title function_ invoke__\">env</span>(<span class=\"string\">&#x27;APP_URL&#x27;</span>, <span class=\"string\">&#x27;https://xxxxx.com:4443&#x27;</span>),</span><br><span class=\"line\"><span class=\"comment\">//Original:</span></span><br><span class=\"line\">  <span class=\"string\">&#x27;asset_url&#x27;</span> =&gt; <span class=\"title function_ invoke__\">env</span>(<span class=\"string\">&#x27;ASSET_URL&#x27;</span>, <span class=\"literal\">null</span>),</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//New:</span></span><br><span class=\"line\">  <span class=\"string\">&#x27;asset_url&#x27;</span> =&gt; <span class=\"title function_ invoke__\">env</span>(<span class=\"string\">&#x27;ASSET_URL&#x27;</span>, <span class=\"string\">&#x27;https://xxxxx.com:4443&#x27;</span>),</span><br></pre></td></tr></table></figure>\n\n<p>Modify <a href=\"https://xxxxx.com:4443/\">https://xxxxx.com:4443</a> to your own domain name and port according to your situation.</p>\n<ol>\n<li>Add a line below line 32 in &#x2F;app&#x2F;Providers&#x2F;ApServiceProvider.php:</li>\n</ol>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\Illuminate\\Support\\Facades\\URL::<span class=\"title function_ invoke__\">forceScheme</span>(<span class=\"string\">&#x27;https&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Inspiration-Sources\"><a href=\"#Inspiration-Sources\" class=\"headerlink\" title=\"Inspiration Sources\"></a>Inspiration Sources</h1><p><a href=\"https://hellodk.cn/post/964\">Developed a PicGo image upload plugin for Lankong Image Repository Lsky Pro</a> <a href=\"https://github.com/hellodk34/picgo-plugin-lankong\">picgo-plugin-lankong</a></p>\n<p><a href=\"https://github.com/lsky-org/lsky-pro/issues/317\">Failed to load static resources #317</a></p>\n<p><a href=\"https://github.com/lsky-org/lsky-pro/issues/607\">HTTPS+Domain+Port Access Issue, NginxProxyManager Reverse Proxy #607</a></p>\n<p><a href=\"https://xyzbz.cn/archives/1080/\">Raspberry Pi Deploying Lankong Image Repository through Docker</a></p>","categories":[{"name":"Image Repository","path":"api/categories/Image Repository.json"}],"tags":[{"name":"NPM","path":"api/tags/NPM.json"},{"name":"Docker","path":"api/tags/Docker.json"},{"name":"Image Repository","path":"api/tags/Image Repository.json"},{"name":"LskyPro","path":"api/tags/LskyPro.json"}]}