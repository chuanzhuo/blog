{"title":"Implementing High-speed Site-wide Search for Hexo with FlexSearch in Node.js","slug":"Node-js用FlexSearch给Hexo添加极速全站搜索","date":"2023-12-16T03:21:33.000Z","updated":"2023-12-30T13:29:48.962Z","comments":true,"path":"api/articles/Node-js用FlexSearch给Hexo添加极速全站搜索.json","excerpt":" [Figure] The concept of site-wide indexing and customized FlexSearch for full content searching is now online with V0.0.2 in the testing phase.Further expansion: large text, multiple texts, multiple file system-level text characters with low resource consumption and high-speed searches.","covers":["https://www.evernote.com/shard/s122/sh/6ae8e607-5752-4cdb-97e9-9ca27c67ac34/n2UiZ8dhaEX3-Dps8Ws25YQ12vx-31PUft2pMAg5ibbAf3qG4CGC2jR0qQ/deep/0/image.png"],"content":"<img class=\"lozad\" data-src=\"https://www.evernote.com/shard/s122/sh/6ae8e607-5752-4cdb-97e9-9ca27c67ac34/n2UiZ8dhaEX3-Dps8Ws25YQ12vx-31PUft2pMAg5ibbAf3qG4CGC2jR0qQ/deep/0/image.png\">\n\n<p>The concept of site-wide indexing and customized FlexSearch for full content searching is now online with V0.0.2 in the testing phase.</p>\n<p>Further expansion: large text, multiple texts, multiple file system-level text characters with low resource consumption and high-speed searches.</p>\n<span id=\"more\"></span>\n\n<h1 id=\"Purpose\"><a href=\"#Purpose\" class=\"headerlink\" title=\"Purpose\"></a>Purpose</h1><p>Many websites or bloggers are troubled by the shortcomings of site-wide search functionality, enduring the specific search engine’s pace of article indexing (content search limited by specific old versions). The built-in search consumes too many resources, leading to slow speeds. HTML’s static sites cannot use database search…</p>\n<p>Introducing FlexSearch (easily obtain the latest information from <a href=\"https://c.carlzeng.top:3/web\">Accelerated Browsing</a>) isn’t the focus here. Node.js entry was the focus of my previous article: <a href=\"https://www.carlzeng.top/search?q=Node.js\">Node.js Development Environment and Application Examples</a>.</p>\n<p>This article primarily shares the practical application of Node.js + FlexSearch within this site (Hexo) to achieve full-text search, used for the “Related Content” section when synchronously releasing articles on <a href=\"https://backuper.cnblogs.com/\">Carl Notes Blog Garden</a> (via iframe method). Due to the prohibition of adding JavaScript code within articles on Blog Garden, which caused cross-domain Ajax to fail in fetching relevant content from the CDN site. This was a huge pitfall, which troubled me for around 2-3 days.</p>\n<p>FlexSearch is particularly helpful for content searches, while Hexo’s implementation of related content is also good, using plugin algorithms to compare the relationships, keywords, weights, and more among my current 300+ articles. For details, see the section on [Related Articles and How to Increase to 10 in <a href=\"https://www.carlzeng.top/202309222344.html?highlight=hello+hexo\">Hello hexo</a>].</p>\n<p>However, Hexo (my current version) has a rudimentary implementation of site-wide search, and I wonder if the latest version has improved this “Site-wide Search”.</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo: 6.3.0                                                                                                </span><br><span class=\"line\">hexo-cli: 4.3.1        </span><br><span class=\"line\"><span class=\"comment\"># My Hexo is due for an update... I&#x27;m being lazy... The new version is not all that appealing...</span></span><br><span class=\"line\">node: 20.10.0 </span><br></pre></td></tr></table></figure>\n\n<p>The current version of Hexo downloads the search.xml file through an Ajax request, like this <a href=\"https://hk.carlzeng.top/search.xml\">search.xml</a>, into memory. It then uses JavaScript to perform local searches and matches (advantage: beautiful UI). However, my file size has reached 3M!</p>\n<p>This approach is too heavyweight for the web. Even with the fastest CDN route, it takes at least 350ms+ to download to the local system, and with common CDNs, it takes over 1s. This is very inconvenient for users. This is a deficiency at the solution level.</p>\n<h1 id=\"How-to-Use\"><a href=\"#How-to-Use\" class=\"headerlink\" title=\"How to Use\"></a>How to Use</h1><p>Utilizing the latest version of FlexSearch (as of mid-December 2023) is straightforward:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Declaration of three application scenarios, from simple to complex: Index, Document, and Worker; start by understanding the simplest Index</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;<span class=\"title class_\">Index</span>, <span class=\"title class_\">Document</span>, <span class=\"title class_\">Worker</span>&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;flexsearch&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Specifying parameters for the Index index, which can be quite complex; start with the simplest default</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> index = <span class=\"keyword\">new</span> <span class=\"title class_\">Index</span>(&#123;</span><br><span class=\"line\">\t<span class=\"attr\">tokenize</span>: <span class=\"string\">&quot;reverse&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">depth</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">\t<span class=\"attr\">minlength</span>: <span class=\"number\">3</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Add source content, such as multiple files, databases, etc.</span></span><br><span class=\"line\">index.<span class=\"title function_\">add</span>(post.<span class=\"property\">title</span>, post.<span class=\"property\">title</span> + post.<span class=\"property\">source</span> + post.<span class=\"property\">content</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Searching with a limit of 11 results</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> searchRes = index.<span class=\"title function_\">search</span>(req.<span class=\"property\">query</span>.<span class=\"property\">q</span>, <span class=\"number\">11</span>);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Related-Content\"><a href=\"#Related-Content\" class=\"headerlink\" title=\"Related Content\"></a>Related Content</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=node.js\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"600\"></iframe>\n\n<h1 id=\"Implementation-Process\"><a href=\"#Implementation-Process\" class=\"headerlink\" title=\"Implementation&#x2F;Process\"></a>Implementation&#x2F;Process</h1><p>For basic learning, it’s recommended to follow the process outlined here: <a href=\"https://expressjs.com/en/starter/installing.html\">https://expressjs.com/en/starter/installing.html</a> (and experiment with the sample examples here: <a href=\"https://expressjs.com/en/starter/examples.html\">https://expressjs.com/en/starter/examples.html</a>)</p>\n<h2 id=\"Express-and-Jade-related\"><a href=\"#Express-and-Jade-related\" class=\"headerlink\" title=\"Express and Jade-related\"></a>Express and Jade-related</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># <span class=\"title class_\">Main</span> program file app.<span class=\"property\">js</span>, excerpt <span class=\"keyword\">from</span> the file <span class=\"attr\">contents</span>:</span><br><span class=\"line\"><span class=\"keyword\">var</span> appSearchRouter = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./routes/appsearch&#x27;</span>); </span><br><span class=\"line\"># <span class=\"title class_\">Here</span>, the newly created file appsearch.<span class=\"property\">js</span> is referenced</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"string\">&#x27;/appsearch&#x27;</span>, appSearchRouter); # <span class=\"title class_\">You</span> can modify <span class=\"variable language_\">this</span> to register appsearch <span class=\"keyword\">as</span> needed</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"title class_\">The</span> remaining file content follows the <span class=\"keyword\">default</span> examples at <span class=\"attr\">https</span>:<span class=\"comment\">//expressjs.com/en/starter/examples.html</span></span><br><span class=\"line\"># <span class=\"title class_\">The</span> <span class=\"keyword\">default</span> generated file listing is sufficient. <span class=\"title class_\">The</span> documentation is clear and user-friendly.</span><br><span class=\"line\"># <span class=\"title class_\">Then</span>, add the searchTemplate.<span class=\"property\">jade</span> file inside the views directory, <span class=\"keyword\">with</span> the following <span class=\"attr\">content</span>:</span><br><span class=\"line\">doctype html</span><br><span class=\"line\">html</span><br><span class=\"line\">    head</span><br><span class=\"line\">        title= title</span><br><span class=\"line\">        <span class=\"title function_\">link</span>(rel=<span class=\"string\">&#x27;stylesheet&#x27;</span>, href=<span class=\"string\">&#x27;/stylesheets/style.css&#x27;</span>)</span><br><span class=\"line\">    body</span><br><span class=\"line\">        .<span class=\"property\">popup</span>.<span class=\"property\">search</span>-popup</span><br><span class=\"line\">            .<span class=\"property\">search</span>-result-container</span><br><span class=\"line\">                .<span class=\"property\">search</span>-stats <span class=\"title class_\">Found</span> #&#123;searchResults.<span class=\"property\">length</span>&#125; search results</span><br><span class=\"line\">                hr</span><br><span class=\"line\">                ul.<span class=\"property\">search</span>-result-list</span><br><span class=\"line\">                    each result <span class=\"keyword\">in</span> searchResults</span><br><span class=\"line\">                        li</span><br><span class=\"line\">                            <span class=\"title function_\">a</span>(href=result.<span class=\"property\">doc</span>.<span class=\"property\">url</span>, <span class=\"keyword\">class</span>=<span class=\"string\">&quot;search-result-title&quot;</span>, data-pjax-state=<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">                                mark.<span class=\"property\">search</span>-keyword= result.<span class=\"property\">doc</span>.<span class=\"property\">title</span></span><br><span class=\"line\">                            <span class=\"title function_\">a</span>(data-pjax-state=<span class=\"string\">&quot;&quot;</span> href=result.<span class=\"property\">doc</span>.<span class=\"property\">url</span>)</span><br><span class=\"line\">                                p.<span class=\"property\">search</span>-result= result.<span class=\"property\">doc</span>.<span class=\"property\">subcontent</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"FlexSearch-related\"><a href=\"#FlexSearch-related\" class=\"headerlink\" title=\"FlexSearch-related\"></a>FlexSearch-related</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># <span class=\"title class_\">Inside</span> the appsearch.<span class=\"property\">js</span> file, contains the <span class=\"title class_\">FlexSearch</span>-related <span class=\"attr\">content</span>:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;<span class=\"title class_\">Index</span>, <span class=\"title class_\">Document</span>, <span class=\"title class_\">Worker</span>&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;flexsearch&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Declare the document</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> index = <span class=\"keyword\">new</span> <span class=\"title class_\">Document</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">tokenize</span>: <span class=\"string\">&quot;reverse&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">minlength</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">    <span class=\"attr\">document</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">id</span>: <span class=\"string\">&quot;id&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">index</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">field</span>: <span class=\"string\">&quot;content&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">context</span>: &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// depth: 2,</span></span><br><span class=\"line\">                    <span class=\"comment\">// resolution: 3</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">tokenize</span>: <span class=\"string\">&quot;reverse&quot;</span></span><br><span class=\"line\">            &#125;],</span><br><span class=\"line\">        <span class=\"attr\">store</span>: [<span class=\"string\">&quot;title&quot;</span>, <span class=\"string\">&quot;updated&quot;</span>, <span class=\"string\">&quot;date&quot;</span>, <span class=\"string\">&quot;source&quot;</span>, <span class=\"string\">&quot;content&quot;</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Load posts from a file, loading Hexo&#x27;s database file</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> pages = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>).<span class=\"title function_\">readFileSync</span>(path.<span class=\"title function_\">join</span>(__dirname, <span class=\"string\">&#x27;../../blog/db.json&#x27;</span>)).<span class=\"title function_\">toString</span>()).<span class=\"property\">models</span>.<span class=\"property\">Post</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Add posts to the index</span></span><br><span class=\"line\">pages.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">post</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> idx = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"comment\">// index.add(post.title, post.title + post.source + post.content)</span></span><br><span class=\"line\">    index.<span class=\"title function_\">add</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">id</span>: post.<span class=\"property\">title</span>,</span><br><span class=\"line\">        <span class=\"attr\">title</span>: post.<span class=\"property\">title</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;title&quot;</span>: post.<span class=\"property\">title</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;updated&quot;</span>: post.<span class=\"property\">updated</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;date&quot;</span>: post.<span class=\"property\">date</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;source&quot;</span> : post.<span class=\"property\">source</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;related_posts&quot;</span>: post.<span class=\"property\">related_posts</span>,</span><br><span class=\"line\">        <span class=\"attr\">content</span>: post.<span class=\"property\">_content</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    idx ++;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arrSearchRes = index.<span class=\"title function_\">search</span>(req.<span class=\"property\">query</span>.<span class=\"property\">q</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">limit</span>: <span class=\"number\">11</span>,</span><br><span class=\"line\">    <span class=\"attr\">enrich</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Note-1\"><a href=\"#Note-1\" class=\"headerlink\" title=\"Note 1\"></a>Note 1</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// create the index</span></span><br><span class=\"line\"><span class=\"comment\">// var FlexSearch = require(&quot;flexsearch&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">// var index = FlexSearch.create();</span></span><br></pre></td></tr></table></figure>\n\n<p>This is the syntax for an old version of Flexsearch. After Googling extensively, I found many examples in Chinese (content) using this old syntax, which didn’t work; there were countless errors, and even GPT-3.5 won’t explain what went wrong. This tells us how important versioning is.</p>\n<h3 id=\"Note-2\"><a href=\"#Note-2\" class=\"headerlink\" title=\"Note 2\"></a>Note 2</h3><p>Jade templates are also very useful, using an indented syntax. It’s easy to generate HTML. During production, you can easily use a conversion tool to turn existing HTML into Jade (or Pug) templates, such as: <a href=\"https://tool.fiaox.com/template-html-pug/\">https://tool.fiaox.com/template-html-pug/</a>.</p>\n<h2 id=\"Adding-CORS-Support\"><a href=\"#Adding-CORS-Support\" class=\"headerlink\" title=\"Adding CORS Support\"></a>Adding CORS Support</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res.<span class=\"title function_\">setHeader</span>(<span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>,<span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">res.<span class=\"title function_\">setHeader</span>(</span><br><span class=\"line\">    <span class=\"string\">&quot;Access-Control-Allow-Methods&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;PUT, GET, POST, DELETE, HEAD, PATCH&quot;</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Production-Deployment-in-Docker\"><a href=\"#Production-Deployment-in-Docker\" class=\"headerlink\" title=\"Production Deployment in Docker\"></a>Production Deployment in Docker</h1><p>Docker deployment is my preference, efficient, simple, and easily managed.</p>\n<p>List of deployment files:</p>\n<ul>\n<li>Copy all folders except node_modules</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Enter the Node.js container and start bash (used to execute node programs)</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">docker <span class=\"built_in\">exec</span> -it nodejs bash</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Run the node program directly:</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">node /home/app/blogsearch/bin/www</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Or, navigate to the directory <span class=\"keyword\">then</span> run</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\"><span class=\"built_in\">cd</span> home/app/blogsearch/</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">node ./bin/www</span> </span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">[First-time installation of node app] No need to re-run npm init, but express library needs to be added</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">npm install express</span></span><br><span class=\"line\"><span class=\"meta prompt_\"> </span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">node ./bin/www</span>  </span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Successful:</span></span><br><span class=\"line\">http://192.168.6.116:3001/appsearch?q=android</span><br><span class=\"line\"></span><br><span class=\"line\">How to run it continuously in the background?</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Proxy out through NPM</span></span><br><span class=\"line\">https://query.carlzeng.top:3/appsearch?q=android</span><br><span class=\"line\">https://query.carlzeng.top:3/appsearch?q=iptv</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Add Matomo to the template</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># Simply add the JS into the template</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">[Version Update] How to shut down a specific node process <span class=\"keyword\">in</span> a Docker container, restart, and redeploy a new version</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">ps -falx | <span class=\"built_in\">head</span> -1; ps -falx | grep <span class=\"string\">&#x27;npm\\|node&#x27;</span></span></span><br><span class=\"line\">F   UID   PID  PPID PRI  NI    VSZ   RSS WCHAN  STAT TTY        TIME COMMAND</span><br><span class=\"line\">4     0   173   134  20   0   3324  1536 pipe_r S+   pts/2      0:00  \\_ grep npm\\|node</span><br><span class=\"line\">0     0    69     8  20   0 1145980 203676 do_epo Sl+ pts/1     7:32  \\_ node /home/app/blogsearch/bin/www</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Found ppid as 8, <span class=\"built_in\">kill</span> the process; <span class=\"keyword\">then</span> restart</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\"><span class=\"built_in\">kill</span> -9 8</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">node /home/app/blogsearch/bin/www</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Sample-for-Node-js-Reference\"><a href=\"#Sample-for-Node-js-Reference\" class=\"headerlink\" title=\"Sample for Node.js Reference\"></a>Sample for Node.js Reference</h2><p>See above: Related Content</p>\n<p>URL: <a href=\"https://query.carlzeng.top:3/appsearch?q=node.js\">https://query.carlzeng.top:3/appsearch?q=node.js</a></p>\n<p>For example, ultimately replacing Hexo’s site-wide search functionality (turn off local_search in the configuration file), displayed as follows:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;https://query.carlzeng.top:3/appsearch?q=&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;get&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;popup search-popup&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;search-header&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;search-icon&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;fa fa-search&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;search-input-container&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;q&quot;</span> <span class=\"attr\">autocomplete</span>=<span class=\"string\">&quot;off&quot;</span> <span class=\"attr\">autocapitalize</span>=<span class=\"string\">&quot;off&quot;</span> <span class=\"attr\">maxlength</span>=<span class=\"string\">&quot;28&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;Search...&quot;</span> <span class=\"attr\">spellcheck</span>=<span class=\"string\">&quot;false&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;search&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;search-input&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;popup-btn-close&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;button&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;fa fa-times-circle&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CDN-Deployment\"><a href=\"#CDN-Deployment\" class=\"headerlink\" title=\"CDN Deployment\"></a>CDN Deployment</h2><p>The above address isn’t elegant enough. Using a CDN forwarding address with port makes the address look a bit more elegant.</p>\n<p>For instance: <a href=\"https://jp.carlzeng.top/appsearch?q=adsl\">https://jp.carlzeng.top/appsearch?q=adsl</a></p>\n<h1 id=\"Version-Updates-Release-Notes\"><a href=\"#Version-Updates-Release-Notes\" class=\"headerlink\" title=\"Version Updates - Release Notes\"></a>Version Updates - Release Notes</h1><h2 id=\"V0-0-3\"><a href=\"#V0-0-3\" class=\"headerlink\" title=\"V0.0.3\"></a>V0.0.3</h2><ul>\n<li>Updated template, style.css updated</li>\n<li>Added dark mode</li>\n<li>Removed hidden or encrypted articles from search results</li>\n</ul>\n<h2 id=\"V0-0-2\"><a href=\"#V0-0-2\" class=\"headerlink\" title=\"V0.0.2\"></a>V0.0.2</h2><ul>\n<li>Updated template, added [Home] and link</li>\n<li>More precise content excerpt, displaying the specific content scope that first matches the keyword</li>\n</ul>\n<h2 id=\"Next-Steps\"><a href=\"#Next-Steps\" class=\"headerlink\" title=\"Next Steps\"></a>Next Steps</h2><p>Need to write a trigger that syncs the .db file to the server whenever hexo g or hexo d is run, to provide the latest search data source for FlexSearch; currently, this is done manually :-)</p>\n<h1 id=\"Insights\"><a href=\"#Insights\" class=\"headerlink\" title=\"Insights\"></a>Insights</h1><p>I truly love Node.js, such a concise framework, capable of customizing for practical needs. Personally, it’s very easy to get started with. It’s reportedly highly efficient in service, low in resource consumption, and supports high concurrency. I will continue to anticipate and follow the actual performance of this app…</p>\n<h2 id=\"Related-Content-Cross-site-Interface\"><a href=\"#Related-Content-Cross-site-Interface\" class=\"headerlink\" title=\"Related Content Cross-site Interface\"></a>Related Content Cross-site Interface</h2><p>Backend Node.js FlexSearch implementation for the server</p>\n<h1 id=\"Inspired-By\"><a href=\"#Inspired-By\" class=\"headerlink\" title=\"Inspired By\"></a>Inspired By</h1><p><a href=\"https://tnickel.de/2020/12/21/2020-12-Adding-full-text-search-via-flexSearch-to-a-blog/\">Adding full text Search via FlexSearch to a Blog</a></p>\n","more":"<h1 id=\"Purpose\"><a href=\"#Purpose\" class=\"headerlink\" title=\"Purpose\"></a>Purpose</h1><p>Many websites or bloggers are troubled by the shortcomings of site-wide search functionality, enduring the specific search engine’s pace of article indexing (content search limited by specific old versions). The built-in search consumes too many resources, leading to slow speeds. HTML’s static sites cannot use database search…</p>\n<p>Introducing FlexSearch (easily obtain the latest information from <a href=\"https://c.carlzeng.top:3/web\">Accelerated Browsing</a>) isn’t the focus here. Node.js entry was the focus of my previous article: <a href=\"https://www.carlzeng.top/search?q=Node.js\">Node.js Development Environment and Application Examples</a>.</p>\n<p>This article primarily shares the practical application of Node.js + FlexSearch within this site (Hexo) to achieve full-text search, used for the “Related Content” section when synchronously releasing articles on <a href=\"https://backuper.cnblogs.com/\">Carl Notes Blog Garden</a> (via iframe method). Due to the prohibition of adding JavaScript code within articles on Blog Garden, which caused cross-domain Ajax to fail in fetching relevant content from the CDN site. This was a huge pitfall, which troubled me for around 2-3 days.</p>\n<p>FlexSearch is particularly helpful for content searches, while Hexo’s implementation of related content is also good, using plugin algorithms to compare the relationships, keywords, weights, and more among my current 300+ articles. For details, see the section on [Related Articles and How to Increase to 10 in <a href=\"https://www.carlzeng.top/202309222344.html?highlight=hello+hexo\">Hello hexo</a>].</p>\n<p>However, Hexo (my current version) has a rudimentary implementation of site-wide search, and I wonder if the latest version has improved this “Site-wide Search”.</p>\n<figure class=\"highlight ini\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo: 6.3.0                                                                                                </span><br><span class=\"line\">hexo-cli: 4.3.1        </span><br><span class=\"line\"><span class=\"comment\"># My Hexo is due for an update... I&#x27;m being lazy... The new version is not all that appealing...</span></span><br><span class=\"line\">node: 20.10.0 </span><br></pre></td></tr></table></figure>\n\n<p>The current version of Hexo downloads the search.xml file through an Ajax request, like this <a href=\"https://hk.carlzeng.top/search.xml\">search.xml</a>, into memory. It then uses JavaScript to perform local searches and matches (advantage: beautiful UI). However, my file size has reached 3M!</p>\n<p>This approach is too heavyweight for the web. Even with the fastest CDN route, it takes at least 350ms+ to download to the local system, and with common CDNs, it takes over 1s. This is very inconvenient for users. This is a deficiency at the solution level.</p>\n<h1 id=\"How-to-Use\"><a href=\"#How-to-Use\" class=\"headerlink\" title=\"How to Use\"></a>How to Use</h1><p>Utilizing the latest version of FlexSearch (as of mid-December 2023) is straightforward:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Declaration of three application scenarios, from simple to complex: Index, Document, and Worker; start by understanding the simplest Index</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;<span class=\"title class_\">Index</span>, <span class=\"title class_\">Document</span>, <span class=\"title class_\">Worker</span>&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;flexsearch&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Specifying parameters for the Index index, which can be quite complex; start with the simplest default</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> index = <span class=\"keyword\">new</span> <span class=\"title class_\">Index</span>(&#123;</span><br><span class=\"line\">\t<span class=\"attr\">tokenize</span>: <span class=\"string\">&quot;reverse&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">depth</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">\t<span class=\"attr\">minlength</span>: <span class=\"number\">3</span></span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Add source content, such as multiple files, databases, etc.</span></span><br><span class=\"line\">index.<span class=\"title function_\">add</span>(post.<span class=\"property\">title</span>, post.<span class=\"property\">title</span> + post.<span class=\"property\">source</span> + post.<span class=\"property\">content</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Searching with a limit of 11 results</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> searchRes = index.<span class=\"title function_\">search</span>(req.<span class=\"property\">query</span>.<span class=\"property\">q</span>, <span class=\"number\">11</span>);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Related-Content\"><a href=\"#Related-Content\" class=\"headerlink\" title=\"Related Content\"></a>Related Content</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=node.js\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"600\"></iframe>\n\n<h1 id=\"Implementation-Process\"><a href=\"#Implementation-Process\" class=\"headerlink\" title=\"Implementation&#x2F;Process\"></a>Implementation&#x2F;Process</h1><p>For basic learning, it’s recommended to follow the process outlined here: <a href=\"https://expressjs.com/en/starter/installing.html\">https://expressjs.com/en/starter/installing.html</a> (and experiment with the sample examples here: <a href=\"https://expressjs.com/en/starter/examples.html\">https://expressjs.com/en/starter/examples.html</a>)</p>\n<h2 id=\"Express-and-Jade-related\"><a href=\"#Express-and-Jade-related\" class=\"headerlink\" title=\"Express and Jade-related\"></a>Express and Jade-related</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># <span class=\"title class_\">Main</span> program file app.<span class=\"property\">js</span>, excerpt <span class=\"keyword\">from</span> the file <span class=\"attr\">contents</span>:</span><br><span class=\"line\"><span class=\"keyword\">var</span> appSearchRouter = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./routes/appsearch&#x27;</span>); </span><br><span class=\"line\"># <span class=\"title class_\">Here</span>, the newly created file appsearch.<span class=\"property\">js</span> is referenced</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"string\">&#x27;/appsearch&#x27;</span>, appSearchRouter); # <span class=\"title class_\">You</span> can modify <span class=\"variable language_\">this</span> to register appsearch <span class=\"keyword\">as</span> needed</span><br><span class=\"line\"></span><br><span class=\"line\"># <span class=\"title class_\">The</span> remaining file content follows the <span class=\"keyword\">default</span> examples at <span class=\"attr\">https</span>:<span class=\"comment\">//expressjs.com/en/starter/examples.html</span></span><br><span class=\"line\"># <span class=\"title class_\">The</span> <span class=\"keyword\">default</span> generated file listing is sufficient. <span class=\"title class_\">The</span> documentation is clear and user-friendly.</span><br><span class=\"line\"># <span class=\"title class_\">Then</span>, add the searchTemplate.<span class=\"property\">jade</span> file inside the views directory, <span class=\"keyword\">with</span> the following <span class=\"attr\">content</span>:</span><br><span class=\"line\">doctype html</span><br><span class=\"line\">html</span><br><span class=\"line\">    head</span><br><span class=\"line\">        title= title</span><br><span class=\"line\">        <span class=\"title function_\">link</span>(rel=<span class=\"string\">&#x27;stylesheet&#x27;</span>, href=<span class=\"string\">&#x27;/stylesheets/style.css&#x27;</span>)</span><br><span class=\"line\">    body</span><br><span class=\"line\">        .<span class=\"property\">popup</span>.<span class=\"property\">search</span>-popup</span><br><span class=\"line\">            .<span class=\"property\">search</span>-result-container</span><br><span class=\"line\">                .<span class=\"property\">search</span>-stats <span class=\"title class_\">Found</span> #&#123;searchResults.<span class=\"property\">length</span>&#125; search results</span><br><span class=\"line\">                hr</span><br><span class=\"line\">                ul.<span class=\"property\">search</span>-result-list</span><br><span class=\"line\">                    each result <span class=\"keyword\">in</span> searchResults</span><br><span class=\"line\">                        li</span><br><span class=\"line\">                            <span class=\"title function_\">a</span>(href=result.<span class=\"property\">doc</span>.<span class=\"property\">url</span>, <span class=\"keyword\">class</span>=<span class=\"string\">&quot;search-result-title&quot;</span>, data-pjax-state=<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">                                mark.<span class=\"property\">search</span>-keyword= result.<span class=\"property\">doc</span>.<span class=\"property\">title</span></span><br><span class=\"line\">                            <span class=\"title function_\">a</span>(data-pjax-state=<span class=\"string\">&quot;&quot;</span> href=result.<span class=\"property\">doc</span>.<span class=\"property\">url</span>)</span><br><span class=\"line\">                                p.<span class=\"property\">search</span>-result= result.<span class=\"property\">doc</span>.<span class=\"property\">subcontent</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"FlexSearch-related\"><a href=\"#FlexSearch-related\" class=\"headerlink\" title=\"FlexSearch-related\"></a>FlexSearch-related</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># <span class=\"title class_\">Inside</span> the appsearch.<span class=\"property\">js</span> file, contains the <span class=\"title class_\">FlexSearch</span>-related <span class=\"attr\">content</span>:</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123;<span class=\"title class_\">Index</span>, <span class=\"title class_\">Document</span>, <span class=\"title class_\">Worker</span>&#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;flexsearch&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Declare the document</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> index = <span class=\"keyword\">new</span> <span class=\"title class_\">Document</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">tokenize</span>: <span class=\"string\">&quot;reverse&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">minlength</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">    <span class=\"attr\">document</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">id</span>: <span class=\"string\">&quot;id&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">index</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">field</span>: <span class=\"string\">&quot;content&quot;</span>,</span><br><span class=\"line\">                <span class=\"attr\">context</span>: &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// depth: 2,</span></span><br><span class=\"line\">                    <span class=\"comment\">// resolution: 3</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                <span class=\"attr\">tokenize</span>: <span class=\"string\">&quot;reverse&quot;</span></span><br><span class=\"line\">            &#125;],</span><br><span class=\"line\">        <span class=\"attr\">store</span>: [<span class=\"string\">&quot;title&quot;</span>, <span class=\"string\">&quot;updated&quot;</span>, <span class=\"string\">&quot;date&quot;</span>, <span class=\"string\">&quot;source&quot;</span>, <span class=\"string\">&quot;content&quot;</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Load posts from a file, loading Hexo&#x27;s database file</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> pages = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>).<span class=\"title function_\">readFileSync</span>(path.<span class=\"title function_\">join</span>(__dirname, <span class=\"string\">&#x27;../../blog/db.json&#x27;</span>)).<span class=\"title function_\">toString</span>()).<span class=\"property\">models</span>.<span class=\"property\">Post</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Add posts to the index</span></span><br><span class=\"line\">pages.<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">post</span> =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> idx = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"comment\">// index.add(post.title, post.title + post.source + post.content)</span></span><br><span class=\"line\">    index.<span class=\"title function_\">add</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">id</span>: post.<span class=\"property\">title</span>,</span><br><span class=\"line\">        <span class=\"attr\">title</span>: post.<span class=\"property\">title</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;title&quot;</span>: post.<span class=\"property\">title</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;updated&quot;</span>: post.<span class=\"property\">updated</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;date&quot;</span>: post.<span class=\"property\">date</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;source&quot;</span> : post.<span class=\"property\">source</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;related_posts&quot;</span>: post.<span class=\"property\">related_posts</span>,</span><br><span class=\"line\">        <span class=\"attr\">content</span>: post.<span class=\"property\">_content</span></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    idx ++;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arrSearchRes = index.<span class=\"title function_\">search</span>(req.<span class=\"property\">query</span>.<span class=\"property\">q</span>, &#123;</span><br><span class=\"line\">    <span class=\"attr\">limit</span>: <span class=\"number\">11</span>,</span><br><span class=\"line\">    <span class=\"attr\">enrich</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Note-1\"><a href=\"#Note-1\" class=\"headerlink\" title=\"Note 1\"></a>Note 1</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// create the index</span></span><br><span class=\"line\"><span class=\"comment\">// var FlexSearch = require(&quot;flexsearch&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">// var index = FlexSearch.create();</span></span><br></pre></td></tr></table></figure>\n\n<p>This is the syntax for an old version of Flexsearch. After Googling extensively, I found many examples in Chinese (content) using this old syntax, which didn’t work; there were countless errors, and even GPT-3.5 won’t explain what went wrong. This tells us how important versioning is.</p>\n<h3 id=\"Note-2\"><a href=\"#Note-2\" class=\"headerlink\" title=\"Note 2\"></a>Note 2</h3><p>Jade templates are also very useful, using an indented syntax. It’s easy to generate HTML. During production, you can easily use a conversion tool to turn existing HTML into Jade (or Pug) templates, such as: <a href=\"https://tool.fiaox.com/template-html-pug/\">https://tool.fiaox.com/template-html-pug/</a>.</p>\n<h2 id=\"Adding-CORS-Support\"><a href=\"#Adding-CORS-Support\" class=\"headerlink\" title=\"Adding CORS Support\"></a>Adding CORS Support</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">res.<span class=\"title function_\">setHeader</span>(<span class=\"string\">&quot;Access-Control-Allow-Origin&quot;</span>,<span class=\"string\">&quot;*&quot;</span>);</span><br><span class=\"line\">res.<span class=\"title function_\">setHeader</span>(</span><br><span class=\"line\">    <span class=\"string\">&quot;Access-Control-Allow-Methods&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;PUT, GET, POST, DELETE, HEAD, PATCH&quot;</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Production-Deployment-in-Docker\"><a href=\"#Production-Deployment-in-Docker\" class=\"headerlink\" title=\"Production Deployment in Docker\"></a>Production Deployment in Docker</h1><p>Docker deployment is my preference, efficient, simple, and easily managed.</p>\n<p>List of deployment files:</p>\n<ul>\n<li>Copy all folders except node_modules</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Enter the Node.js container and start bash (used to execute node programs)</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">docker <span class=\"built_in\">exec</span> -it nodejs bash</span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Run the node program directly:</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">node /home/app/blogsearch/bin/www</span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Or, navigate to the directory <span class=\"keyword\">then</span> run</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\"><span class=\"built_in\">cd</span> home/app/blogsearch/</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">node ./bin/www</span> </span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">[First-time installation of node app] No need to re-run npm init, but express library needs to be added</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">npm install express</span></span><br><span class=\"line\"><span class=\"meta prompt_\"> </span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">node ./bin/www</span>  </span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Successful:</span></span><br><span class=\"line\">http://192.168.6.116:3001/appsearch?q=android</span><br><span class=\"line\"></span><br><span class=\"line\">How to run it continuously in the background?</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Proxy out through NPM</span></span><br><span class=\"line\">https://query.carlzeng.top:3/appsearch?q=android</span><br><span class=\"line\">https://query.carlzeng.top:3/appsearch?q=iptv</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Add Matomo to the template</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\"><span class=\"comment\"># Simply add the JS into the template</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">[Version Update] How to shut down a specific node process <span class=\"keyword\">in</span> a Docker container, restart, and redeploy a new version</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">ps -falx | <span class=\"built_in\">head</span> -1; ps -falx | grep <span class=\"string\">&#x27;npm\\|node&#x27;</span></span></span><br><span class=\"line\">F   UID   PID  PPID PRI  NI    VSZ   RSS WCHAN  STAT TTY        TIME COMMAND</span><br><span class=\"line\">4     0   173   134  20   0   3324  1536 pipe_r S+   pts/2      0:00  \\_ grep npm\\|node</span><br><span class=\"line\">0     0    69     8  20   0 1145980 203676 do_epo Sl+ pts/1     7:32  \\_ node /home/app/blogsearch/bin/www</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Found ppid as 8, <span class=\"built_in\">kill</span> the process; <span class=\"keyword\">then</span> restart</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\"><span class=\"built_in\">kill</span> -9 8</span></span><br><span class=\"line\"><span class=\"meta prompt_\">&gt; </span><span class=\"language-bash\">node /home/app/blogsearch/bin/www</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Sample-for-Node-js-Reference\"><a href=\"#Sample-for-Node-js-Reference\" class=\"headerlink\" title=\"Sample for Node.js Reference\"></a>Sample for Node.js Reference</h2><p>See above: Related Content</p>\n<p>URL: <a href=\"https://query.carlzeng.top:3/appsearch?q=node.js\">https://query.carlzeng.top:3/appsearch?q=node.js</a></p>\n<p>For example, ultimately replacing Hexo’s site-wide search functionality (turn off local_search in the configuration file), displayed as follows:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">&quot;https://query.carlzeng.top:3/appsearch?q=&quot;</span> <span class=\"attr\">method</span>=<span class=\"string\">&quot;get&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;popup search-popup&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;search-header&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;search-icon&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;fa fa-search&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;search-input-container&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;q&quot;</span> <span class=\"attr\">autocomplete</span>=<span class=\"string\">&quot;off&quot;</span> <span class=\"attr\">autocapitalize</span>=<span class=\"string\">&quot;off&quot;</span> <span class=\"attr\">maxlength</span>=<span class=\"string\">&quot;28&quot;</span> <span class=\"attr\">placeholder</span>=<span class=\"string\">&quot;Search...&quot;</span> <span class=\"attr\">spellcheck</span>=<span class=\"string\">&quot;false&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;search&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;search-input&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;popup-btn-close&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;button&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">i</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;fa fa-times-circle&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">i</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CDN-Deployment\"><a href=\"#CDN-Deployment\" class=\"headerlink\" title=\"CDN Deployment\"></a>CDN Deployment</h2><p>The above address isn’t elegant enough. Using a CDN forwarding address with port makes the address look a bit more elegant.</p>\n<p>For instance: <a href=\"https://jp.carlzeng.top/appsearch?q=adsl\">https://jp.carlzeng.top/appsearch?q=adsl</a></p>\n<h1 id=\"Version-Updates-Release-Notes\"><a href=\"#Version-Updates-Release-Notes\" class=\"headerlink\" title=\"Version Updates - Release Notes\"></a>Version Updates - Release Notes</h1><h2 id=\"V0-0-3\"><a href=\"#V0-0-3\" class=\"headerlink\" title=\"V0.0.3\"></a>V0.0.3</h2><ul>\n<li>Updated template, style.css updated</li>\n<li>Added dark mode</li>\n<li>Removed hidden or encrypted articles from search results</li>\n</ul>\n<h2 id=\"V0-0-2\"><a href=\"#V0-0-2\" class=\"headerlink\" title=\"V0.0.2\"></a>V0.0.2</h2><ul>\n<li>Updated template, added [Home] and link</li>\n<li>More precise content excerpt, displaying the specific content scope that first matches the keyword</li>\n</ul>\n<h2 id=\"Next-Steps\"><a href=\"#Next-Steps\" class=\"headerlink\" title=\"Next Steps\"></a>Next Steps</h2><p>Need to write a trigger that syncs the .db file to the server whenever hexo g or hexo d is run, to provide the latest search data source for FlexSearch; currently, this is done manually :-)</p>\n<h1 id=\"Insights\"><a href=\"#Insights\" class=\"headerlink\" title=\"Insights\"></a>Insights</h1><p>I truly love Node.js, such a concise framework, capable of customizing for practical needs. Personally, it’s very easy to get started with. It’s reportedly highly efficient in service, low in resource consumption, and supports high concurrency. I will continue to anticipate and follow the actual performance of this app…</p>\n<h2 id=\"Related-Content-Cross-site-Interface\"><a href=\"#Related-Content-Cross-site-Interface\" class=\"headerlink\" title=\"Related Content Cross-site Interface\"></a>Related Content Cross-site Interface</h2><p>Backend Node.js FlexSearch implementation for the server</p>\n<h1 id=\"Inspired-By\"><a href=\"#Inspired-By\" class=\"headerlink\" title=\"Inspired By\"></a>Inspired By</h1><p><a href=\"https://tnickel.de/2020/12/21/2020-12-Adding-full-text-search-via-flexSearch-to-a-blog/\">Adding full text Search via FlexSearch to a Blog</a></p>","categories":[{"name":"Node.js","path":"api/categories/Node.js.json"}],"tags":[{"name":"Javascript","path":"api/tags/Javascript.json"},{"name":"Node.js","path":"api/tags/Node.js.json"},{"name":"Linux","path":"api/tags/Linux.json"},{"name":"node","path":"api/tags/node.json"},{"name":"Debian","path":"api/tags/Debian.json"},{"name":"FlexSearch","path":"api/tags/FlexSearch.json"},{"name":"Search","path":"api/tags/Search.json"}]}