{"title":"netsuite  nlapiLineInit-CarlZeng","slug":"netsuite-nlapiLineInit-CarlZeng","date":"2009-04-09T03:11:00.000Z","updated":"2023-10-08T13:38:52.659Z","comments":true,"path":"api/articles/netsuite-nlapiLineInit-CarlZeng.json","excerpt":"function nlapiValidateField(type, fld, optionswin, linenum){var isValid = true;if (optionswin != null)optwin = optionswin;if (nsapiGetMainForm( ).elements.nlapiVF != null && nsapiGetMainForm( ).elemen...","covers":null,"content":"<p>function nlapiValidateField(type, fld, optionswin, linenum){var isValid &#x3D; true;if (optionswin !&#x3D; null)optwin &#x3D; optionswin;if (nsapiGetMainForm( ).elements.nlapiVF !&#x3D; null &amp;&amp; nsapiGetMainForm( ).elemen…</p>\n<!-- more -->\n<p>function nlapiValidateField(type, fld, optionswin, linenum)<br>{<br>var isValid &#x3D; true;<br>if (optionswin !&#x3D; null)<br>optwin &#x3D; optionswin;<br>if (nsapiGetMainForm( ).elements.nlapiVF !&#x3D; null &amp;&amp; nsapiGetMainForm( ).elements.nlapiVF.value.length &gt; 0)<br>{<br>var fldnam &#x3D; fld.name;<br>if (linenum !&#x3D; null)<br>fldnam &#x3D; fldnam.substring(0,fldnam.length-linenum.toString().length)<br>else if ( type !&#x3D; null )<br>linenum &#x3D; nlapiGetCurrentLineItemIndex(type)<br>var scripts &#x3D; nsapiGetMainForm( ).elements.nlapiVF.value.split(‘,’);<br>for ( var i &#x3D; 0; isValid &amp;&amp; i &lt; scripts.length; i++ )<br>{<br>var checkValidOrig &#x3D; fld.checkvalid<br>try<br>{<br>fld.checkvalid &#x3D; false;<br>isValid &#x3D; eval( scripts[ i ]+”(type, fldnam, linenum)” );<br>}<br>finally<br>{<br>fld.checkvalid &#x3D; checkValidOrig;<br>}<br>if (!isValid)<br>{<br>if (typeof(ftabs) !&#x3D; ‘undefined’)<br>{<br>var tab &#x3D; ftabs[fldnam.toLowerCase()];<br>if (tab !&#x3D; null &amp;&amp; tab !&#x3D; “main” &amp;&amp; !isTabShown(tab))<br>ShowTab(tab,true);<br>}<br>setFieldFocus( fld );<br>if ( fld.select !&#x3D; null ) fld.select();<br>optwin &#x3D; null;<br>}<br>}<br>}</p>\n<p>optwin &#x3D; null;<br>nsapiBuildChangedLineItems();<br>return isValid;<br>}<br>function nlapiFieldChanged(type, fld, optionswin, linenum)<br>{<br>var fldnam &#x3D; fld.name;<br>if (linenum !&#x3D; null)<br>fldnam &#x3D; fldnam.substring(0,fldnam.length-linenum.toString().length)<br>else if ( type !&#x3D; null )<br>linenum &#x3D; nlapiGetCurrentLineItemIndex(type)<br>if (optionswin !&#x3D; null)<br>optwin &#x3D; optionswin;<br>if (nsapiGetMainForm( ).elements.nlapiFC !&#x3D; null &amp;&amp; nsapiGetMainForm( ).elements.nlapiFC.value.length &gt; 0)<br>{<br>var scripts &#x3D; nsapiGetMainForm( ).elements.nlapiFC.value.split(‘,’);<br>for ( var i &#x3D; 0; i &lt; scripts.length; i++ )<br>eval(scripts[ i ]+”(type, fldnam, linenum)”);<br>}</p>\n<p>optwin &#x3D; null;<br>nsapiBuildChangedLineItems();<br>}<br>function nlapiPostSourcing(type, fldname)<br>{<br>if (nsapiGetMainForm( ).elements.nlapiPS !&#x3D; null &amp;&amp; nsapiGetMainForm( ).elements.nlapiPS.value.length &gt; 0)<br>{<br>var origflag &#x3D; window.isinited;<br>try<br>{ &#x2F;* — set inited flags so that machine calls function correctly. *&#x2F;<br>setIsInited( window, true );<br>var scripts &#x3D; nsapiGetMainForm( ).elements.nlapiPS.value.split(‘,’);<br>for ( var i &#x3D; 0; i &lt; scripts.length; i++ )<br>eval(scripts[ i ]+”(type, fldname)”);<br>}<br>finally &#x2F;* unset page_init flags. *&#x2F;<br>{<br>setIsInited( window, origflag );<br>}<br>}<br>}<br>function nlapiLineInit(type)<br>{<br>if (nsapiGetMainForm( ).elements.nlapiLI !&#x3D; null &amp;&amp; nsapiGetMainForm( ).elements.nlapiLI.value.length &gt; 0)<br>{<br>var scripts &#x3D; nsapiGetMainForm( ).elements.nlapiLI.value.split(‘,’);<br>for ( var i &#x3D; 0; i &lt; scripts.length; i++ )<br>eval(scripts[ i ]+”(type)”);<br>}<br>}<br>function nlapiValidateLine(type)<br>{<br>var isValid &#x3D; true;<br>if (nsapiGetMainForm( ).elements.nlapiVL !&#x3D; null &amp;&amp; nsapiGetMainForm( ).elements.nlapiVL.value.length &gt; 0)<br>{<br>var scripts &#x3D; nsapiGetMainForm( ).elements.nlapiVL.value.split(‘,’);<br>for ( var i &#x3D; 0; isValid &amp;&amp; i &lt; scripts.length; i++ )<br>isValid &#x3D; eval(scripts[ i ]+”(type)”);<br>}<br>return isValid;<br>}<br>function nlapiRecalc(type)<br>{<br>if (nsapiGetMainForm( ).elements.nlapiRC !&#x3D; null &amp;&amp; nsapiGetMainForm( ).elements.nlapiRC.value.length &gt; 0)<br>{<br>var scripts &#x3D; nsapiGetMainForm( ).elements.nlapiRC.value.split(‘,’);<br>for ( var i &#x3D; 0; i &lt; scripts.length; i++ )<br>eval(scripts[ i ]+”(type)”);<br>}<br>}</p>\n","more":"<p>function nlapiValidateField(type, fld, optionswin, linenum){var isValid &#x3D; true;if (optionswin !&#x3D; null)optwin &#x3D; optionswin;if (nsapiGetMainForm( ).elements.nlapiVF !&#x3D; null &amp;&amp; nsapiGetMainForm( ).elemen…</p>\n<!-- more -->\n<p>function nlapiValidateField(type, fld, optionswin, linenum)<br>{<br>var isValid &#x3D; true;<br>if (optionswin !&#x3D; null)<br>optwin &#x3D; optionswin;<br>if (nsapiGetMainForm( ).elements.nlapiVF !&#x3D; null &amp;&amp; nsapiGetMainForm( ).elements.nlapiVF.value.length &gt; 0)<br>{<br>var fldnam &#x3D; fld.name;<br>if (linenum !&#x3D; null)<br>fldnam &#x3D; fldnam.substring(0,fldnam.length-linenum.toString().length)<br>else if ( type !&#x3D; null )<br>linenum &#x3D; nlapiGetCurrentLineItemIndex(type)<br>var scripts &#x3D; nsapiGetMainForm( ).elements.nlapiVF.value.split(‘,’);<br>for ( var i &#x3D; 0; isValid &amp;&amp; i &lt; scripts.length; i++ )<br>{<br>var checkValidOrig &#x3D; fld.checkvalid<br>try<br>{<br>fld.checkvalid &#x3D; false;<br>isValid &#x3D; eval( scripts[ i ]+”(type, fldnam, linenum)” );<br>}<br>finally<br>{<br>fld.checkvalid &#x3D; checkValidOrig;<br>}<br>if (!isValid)<br>{<br>if (typeof(ftabs) !&#x3D; ‘undefined’)<br>{<br>var tab &#x3D; ftabs[fldnam.toLowerCase()];<br>if (tab !&#x3D; null &amp;&amp; tab !&#x3D; “main” &amp;&amp; !isTabShown(tab))<br>ShowTab(tab,true);<br>}<br>setFieldFocus( fld );<br>if ( fld.select !&#x3D; null ) fld.select();<br>optwin &#x3D; null;<br>}<br>}<br>}</p>\n<p>optwin &#x3D; null;<br>nsapiBuildChangedLineItems();<br>return isValid;<br>}<br>function nlapiFieldChanged(type, fld, optionswin, linenum)<br>{<br>var fldnam &#x3D; fld.name;<br>if (linenum !&#x3D; null)<br>fldnam &#x3D; fldnam.substring(0,fldnam.length-linenum.toString().length)<br>else if ( type !&#x3D; null )<br>linenum &#x3D; nlapiGetCurrentLineItemIndex(type)<br>if (optionswin !&#x3D; null)<br>optwin &#x3D; optionswin;<br>if (nsapiGetMainForm( ).elements.nlapiFC !&#x3D; null &amp;&amp; nsapiGetMainForm( ).elements.nlapiFC.value.length &gt; 0)<br>{<br>var scripts &#x3D; nsapiGetMainForm( ).elements.nlapiFC.value.split(‘,’);<br>for ( var i &#x3D; 0; i &lt; scripts.length; i++ )<br>eval(scripts[ i ]+”(type, fldnam, linenum)”);<br>}</p>\n<p>optwin &#x3D; null;<br>nsapiBuildChangedLineItems();<br>}<br>function nlapiPostSourcing(type, fldname)<br>{<br>if (nsapiGetMainForm( ).elements.nlapiPS !&#x3D; null &amp;&amp; nsapiGetMainForm( ).elements.nlapiPS.value.length &gt; 0)<br>{<br>var origflag &#x3D; window.isinited;<br>try<br>{ &#x2F;* — set inited flags so that machine calls function correctly. *&#x2F;<br>setIsInited( window, true );<br>var scripts &#x3D; nsapiGetMainForm( ).elements.nlapiPS.value.split(‘,’);<br>for ( var i &#x3D; 0; i &lt; scripts.length; i++ )<br>eval(scripts[ i ]+”(type, fldname)”);<br>}<br>finally &#x2F;* unset page_init flags. *&#x2F;<br>{<br>setIsInited( window, origflag );<br>}<br>}<br>}<br>function nlapiLineInit(type)<br>{<br>if (nsapiGetMainForm( ).elements.nlapiLI !&#x3D; null &amp;&amp; nsapiGetMainForm( ).elements.nlapiLI.value.length &gt; 0)<br>{<br>var scripts &#x3D; nsapiGetMainForm( ).elements.nlapiLI.value.split(‘,’);<br>for ( var i &#x3D; 0; i &lt; scripts.length; i++ )<br>eval(scripts[ i ]+”(type)”);<br>}<br>}<br>function nlapiValidateLine(type)<br>{<br>var isValid &#x3D; true;<br>if (nsapiGetMainForm( ).elements.nlapiVL !&#x3D; null &amp;&amp; nsapiGetMainForm( ).elements.nlapiVL.value.length &gt; 0)<br>{<br>var scripts &#x3D; nsapiGetMainForm( ).elements.nlapiVL.value.split(‘,’);<br>for ( var i &#x3D; 0; isValid &amp;&amp; i &lt; scripts.length; i++ )<br>isValid &#x3D; eval(scripts[ i ]+”(type)”);<br>}<br>return isValid;<br>}<br>function nlapiRecalc(type)<br>{<br>if (nsapiGetMainForm( ).elements.nlapiRC !&#x3D; null &amp;&amp; nsapiGetMainForm( ).elements.nlapiRC.value.length &gt; 0)<br>{<br>var scripts &#x3D; nsapiGetMainForm( ).elements.nlapiRC.value.split(‘,’);<br>for ( var i &#x3D; 0; i &lt; scripts.length; i++ )<br>eval(scripts[ i ]+”(type)”);<br>}<br>}</p>\n","categories":[{"name":"NetSuite","path":"api/categories/NetSuite.json"}],"tags":[{"name":"NetSuite","path":"api/tags/NetSuite.json"}]}