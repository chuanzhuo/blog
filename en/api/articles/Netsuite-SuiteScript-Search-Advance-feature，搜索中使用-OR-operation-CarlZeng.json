{"title":"Netsuite SuiteScript > Search Advance feature，搜索中使用 'OR' operation-CarlZeng","slug":"Netsuite-SuiteScript-Search-Advance-feature，搜索中使用-OR-operation-CarlZeng","date":"2014-10-23T02:00:00.000Z","updated":"2023-10-08T13:38:52.658Z","comments":true,"path":"api/articles/Netsuite-SuiteScript-Search-Advance-feature，搜索中使用-OR-operation-CarlZeng.json","excerpt":"Sample in online help//Define search filter expressionvar filterExpression =\t[ [ 'trandate', 'onOrAfter', 'daysAgo90' ], 'or', [ 'projecte...","covers":null,"content":"<p>Sample in online help&#x2F;&#x2F;Define search filter expressionvar filterExpression &#x3D; [ [ ‘trandate’, ‘onOrAfter’, ‘daysAgo90’ ], ‘or’, [ ‘projecte…</p>\n<!-- more -->\n<p>Sample in online help  </p>\n<p>&#x2F;&#x2F;Define search filter expression</p>\n<p>var filterExpression &#x3D;\t[ [ ‘trandate’, ‘onOrAfter’, ‘daysAgo90’ ],<br>               ‘or’,<br>        　　　　　　[ ‘projectedamount’, ‘between’, 1000, 100000 ],<br>               ‘or’,<br>              ‘not’, [‘customer.salesrep’, ‘anyOf’, -5 ]  ] ;</p>\n<p>&#x2F;&#x2F;Define search columns<br>var columns &#x3D; new Array();<br>columns[0] &#x3D; new nlobjSearchColumn(‘salesrep’);<br>columns[1] &#x3D; new nlobjSearchColumn(‘expectedclosedate’);<br>columns[2] &#x3D; new nlobjSearchColumn(‘entity’);</p>\n<p>&#x2F;&#x2F;Execute the search. You must specify the internal ID of the record type.<br>var searchresults &#x3D; nlapiSearchRecord(‘opportunity’, null, filterExpression, columns);</p>\n<p>由于nlobjSearchFilter默认发出的都是‘AND’的指令，所以这个api，无法完成or的操作。</p>\n<p><em>By default, search filter list (nlobjSearchFilter[]) makes use only of an implicit ‘AND’ operator for filters. This is contrary to search filter expression that can explicitly use either ‘AND’ or ‘OR’ operators.</em></p>\n<p>[ ‘trandate’, ‘onOrAfter’, ‘daysAgo90’ ],<br>‘or’,<br>[ ‘projectedamount’, ‘between’, 1000, 100000 ],</p>\n<p>这种操作参数，直接不适用nlobjSearchFilter，而且没有reference其他record的功能；<br>整个API还是低于UI的USE EXPRESSIONS功能的。<br>所以另外方案<br>1。在UI上定义这类OR或者或者包含Parens的Search，然后suitescript去直接调用结果。<br>2。使用多个Search，消耗更多的unit来实现复杂的单个Search。</p>\n","more":"<p>Sample in online help&#x2F;&#x2F;Define search filter expressionvar filterExpression &#x3D; [ [ ‘trandate’, ‘onOrAfter’, ‘daysAgo90’ ], ‘or’, [ ‘projecte…</p>\n<!-- more -->\n<p>Sample in online help  </p>\n<p>&#x2F;&#x2F;Define search filter expression</p>\n<p>var filterExpression &#x3D;\t[ [ ‘trandate’, ‘onOrAfter’, ‘daysAgo90’ ],<br>               ‘or’,<br>        　　　　　　[ ‘projectedamount’, ‘between’, 1000, 100000 ],<br>               ‘or’,<br>              ‘not’, [‘customer.salesrep’, ‘anyOf’, -5 ]  ] ;</p>\n<p>&#x2F;&#x2F;Define search columns<br>var columns &#x3D; new Array();<br>columns[0] &#x3D; new nlobjSearchColumn(‘salesrep’);<br>columns[1] &#x3D; new nlobjSearchColumn(‘expectedclosedate’);<br>columns[2] &#x3D; new nlobjSearchColumn(‘entity’);</p>\n<p>&#x2F;&#x2F;Execute the search. You must specify the internal ID of the record type.<br>var searchresults &#x3D; nlapiSearchRecord(‘opportunity’, null, filterExpression, columns);</p>\n<p>由于nlobjSearchFilter默认发出的都是‘AND’的指令，所以这个api，无法完成or的操作。</p>\n<p><em>By default, search filter list (nlobjSearchFilter[]) makes use only of an implicit ‘AND’ operator for filters. This is contrary to search filter expression that can explicitly use either ‘AND’ or ‘OR’ operators.</em></p>\n<p>[ ‘trandate’, ‘onOrAfter’, ‘daysAgo90’ ],<br>‘or’,<br>[ ‘projectedamount’, ‘between’, 1000, 100000 ],</p>\n<p>这种操作参数，直接不适用nlobjSearchFilter，而且没有reference其他record的功能；<br>整个API还是低于UI的USE EXPRESSIONS功能的。<br>所以另外方案<br>1。在UI上定义这类OR或者或者包含Parens的Search，然后suitescript去直接调用结果。<br>2。使用多个Search，消耗更多的unit来实现复杂的单个Search。</p>\n","categories":[{"name":"NetSuite","path":"api/categories/NetSuite.json"}],"tags":[{"name":"NetSuite","path":"api/tags/NetSuite.json"}]}