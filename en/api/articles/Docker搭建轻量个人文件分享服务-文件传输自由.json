{"title":"Setting Up Lightweight Personal File Sharing Service Using Docker - Freedom in File Transfers","slug":"Docker搭建轻量个人文件分享服务-文件传输自由","date":"2023-12-23T01:40:00.000Z","updated":"2023-12-31T01:04:36.022Z","comments":true,"path":"api/articles/Docker搭建轻量个人文件分享服务-文件传输自由.json","excerpt":" [Figure] Temporary small file sharing, remote file transfer, breaking away from cloud storage.Demo: https://c.carlzeng.top:4443/fileupd","covers":["https://www.evernote.com/shard/s122/sh/282e6c4a-96bf-487c-8c13-de2490aad98f/hd1eQ2hQGc0nQ66_VPAxTK3L1-BWabISsM4akODccA6Qu6RYWhMc8ANbFg/deep/0/image.png"],"content":"<img class=\"lozad\" data-src=\"https://www.evernote.com/shard/s122/sh/282e6c4a-96bf-487c-8c13-de2490aad98f/hd1eQ2hQGc0nQ66_VPAxTK3L1-BWabISsM4akODccA6Qu6RYWhMc8ANbFg/deep/0/image.png\">\n\n<p>Temporary small file sharing, remote file transfer, breaking away from cloud storage.</p>\n<p>Demo: <a href=\"https://c.carlzeng.top:4443/fileupd\">https://c.carlzeng.top:4443/fileupd</a></p>\n<span id=\"more\"></span>\n\n<h1 id=\"Purpose\"><a href=\"#Purpose\" class=\"headerlink\" title=\"Purpose\"></a>Purpose</h1><p>Temporary small file sharing, remote file transfer, breaking away from cloud storage.</p>\n<h1 id=\"How-to-Use\"><a href=\"#How-to-Use\" class=\"headerlink\" title=\"How to Use\"></a>How to Use</h1><p>Setting up a lightweight, self-hosted personal file sharing service allows for unrestricted file transfers. It focuses on offering an aesthetically pleasing and lightweight tool for file sharing.</p>\n<h1 id=\"Preview\"><a href=\"#Preview\" class=\"headerlink\" title=\"Preview\"></a>Preview</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://c.carlzeng.top:4443/fileupd\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"Related-Content\"><a href=\"#Related-Content\" class=\"headerlink\" title=\"Related Content\"></a>Related Content</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=cloud+storage\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"Implementation-Approach\"><a href=\"#Implementation-Approach\" class=\"headerlink\" title=\"Implementation Approach\"></a>Implementation Approach</h1><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&#x27;3.8&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">pingvin-share:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">stonith404/pingvin-share</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">unless-stopped</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"number\">6000</span><span class=\"string\">:3000</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"number\">6001</span><span class=\"string\">:3333</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;./data:/opt/app/backend/data&quot;</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;./data/images:/opt/app/frontend/public/img&quot;</span></span><br><span class=\"line\">      <span class=\"comment\"># - &quot;./data/framework-0c7baedefba6b077.js:/opt/app/frontend/.next/static/chunks/framework-0c7baedefba6b077.js&quot; #Used personally to add matomo statistics JS</span></span><br></pre></td></tr></table></figure>\n\n<p>The above code completes the port mapping. Not sure why the port mapping of 8080 seems to be inaccessible (the original documentation was incorrect; upon checking the logs, it should be port 3333). Later on, it was found that only port 6001 could also be used normally (consistent with the log content).</p>\n<p>Firewall access has been granted to access the mapped ports.</p>\n<p>Partial Log:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Attaching to pingvin-share_pingvin-share_1</span><br><span class=\"line\">pingvin-share_1  | </span><br><span class=\"line\">pingvin-share_1  | &gt; pingvin-share-backend@0.21.1 prod</span><br><span class=\"line\">pingvin-share_1  | &gt; prisma migrate deploy &amp;&amp; prisma db seed &amp;&amp; node dist/src/main</span><br><span class=\"line\">pingvin-share_1  | </span><br><span class=\"line\">... (omitted for brevity)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Deployment-to-NAS\"><a href=\"#Deployment-to-NAS\" class=\"headerlink\" title=\"Deployment to NAS\"></a>Deployment to NAS</h2><p>The idea is: NAS has a relatively large hard drive, making it convenient for direct sharing and avoiding concerns about easily filling up disk space.</p>\n<p>SSH into the Synology NAS, wanting to find a way similar to previewing Docker Container files in BT (BitTorrent), but unable to locate the specific file path.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@DS918:/var/packages/Docker/var/docker/containers# ls                                        </span><br><span class=\"line\">086decff0f0ff981d6458d792b6d4f2efe96a0a16cc339b0963c8e319c8917b5                                 </span><br><span class=\"line\">2ea60beefe6d9bab1a3910785a310bac528723055c7004f3d15eb55a07abfd70</span><br></pre></td></tr></table></figure>\n\n<p>Temporarily, it’s not possible. You can only configure it in BT, test it, and then move the mapped files to the specified NAS folder in the Synology NAS.</p>\n<ol>\n<li><p>First, copy the mapped files to a specific folder on the NAS.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r /www/server/panel/data/compose/pingvin-share/data/ CarlNote@192.168.6.203:/volume2/KingchuxingSSD512G/docker/pingvin-share/data</span><br></pre></td></tr></table></figure>\n\n<p>This is convenient for logging into the Debian ssh, then transferring the folder (or files, the &#x2F;data directory) in batches to the specified folder on the NAS (&#x2F;volume2&#x2F;KingchuxingSSD512G&#x2F;docker&#x2F;pingvin-share&#x2F;). Next time, you can easily transfer the parent directory at once (useful for the initial file migration).</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Transfer single file from Debian to NAS, update situation, synchronize single file at a time</span></span><br><span class=\"line\">scp docker-compose.yml root@192.168.6.203:/volume2/KingchuxingSSD512G/docker/pingvin-share/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Similarly, change the NPM to the corresponding 6000 port on the NAS (as per the docker-compose setup).</p>\n</li>\n</ol>\n<h1 id=\"Source-of-Inspiration\"><a href=\"#Source-of-Inspiration\" class=\"headerlink\" title=\"Source of Inspiration\"></a>Source of Inspiration</h1><p><a href=\"https://github.com/stonith404/pingvin-share\">pingvin-share</a></p>\n<p><a href=\"https://cloud.tencent.com/developer/article/2211677\">Fun Docker Project: Pingvin Share - A High Aesthetic and Lightweight File Sharing Tool! Original</a></p>\n","more":"<h1 id=\"Purpose\"><a href=\"#Purpose\" class=\"headerlink\" title=\"Purpose\"></a>Purpose</h1><p>Temporary small file sharing, remote file transfer, breaking away from cloud storage.</p>\n<h1 id=\"How-to-Use\"><a href=\"#How-to-Use\" class=\"headerlink\" title=\"How to Use\"></a>How to Use</h1><p>Setting up a lightweight, self-hosted personal file sharing service allows for unrestricted file transfers. It focuses on offering an aesthetically pleasing and lightweight tool for file sharing.</p>\n<h1 id=\"Preview\"><a href=\"#Preview\" class=\"headerlink\" title=\"Preview\"></a>Preview</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://c.carlzeng.top:4443/fileupd\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"Related-Content\"><a href=\"#Related-Content\" class=\"headerlink\" title=\"Related Content\"></a>Related Content</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.top:3/appsearch?q=cloud+storage\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"Implementation-Approach\"><a href=\"#Implementation-Approach\" class=\"headerlink\" title=\"Implementation Approach\"></a>Implementation Approach</h1><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&#x27;3.8&#x27;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">pingvin-share:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">stonith404/pingvin-share</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">unless-stopped</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"number\">6000</span><span class=\"string\">:3000</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"number\">6001</span><span class=\"string\">:3333</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;./data:/opt/app/backend/data&quot;</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;./data/images:/opt/app/frontend/public/img&quot;</span></span><br><span class=\"line\">      <span class=\"comment\"># - &quot;./data/framework-0c7baedefba6b077.js:/opt/app/frontend/.next/static/chunks/framework-0c7baedefba6b077.js&quot; #Used personally to add matomo statistics JS</span></span><br></pre></td></tr></table></figure>\n\n<p>The above code completes the port mapping. Not sure why the port mapping of 8080 seems to be inaccessible (the original documentation was incorrect; upon checking the logs, it should be port 3333). Later on, it was found that only port 6001 could also be used normally (consistent with the log content).</p>\n<p>Firewall access has been granted to access the mapped ports.</p>\n<p>Partial Log:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Attaching to pingvin-share_pingvin-share_1</span><br><span class=\"line\">pingvin-share_1  | </span><br><span class=\"line\">pingvin-share_1  | &gt; pingvin-share-backend@0.21.1 prod</span><br><span class=\"line\">pingvin-share_1  | &gt; prisma migrate deploy &amp;&amp; prisma db seed &amp;&amp; node dist/src/main</span><br><span class=\"line\">pingvin-share_1  | </span><br><span class=\"line\">... (omitted for brevity)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Deployment-to-NAS\"><a href=\"#Deployment-to-NAS\" class=\"headerlink\" title=\"Deployment to NAS\"></a>Deployment to NAS</h2><p>The idea is: NAS has a relatively large hard drive, making it convenient for direct sharing and avoiding concerns about easily filling up disk space.</p>\n<p>SSH into the Synology NAS, wanting to find a way similar to previewing Docker Container files in BT (BitTorrent), but unable to locate the specific file path.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@DS918:/var/packages/Docker/var/docker/containers# ls                                        </span><br><span class=\"line\">086decff0f0ff981d6458d792b6d4f2efe96a0a16cc339b0963c8e319c8917b5                                 </span><br><span class=\"line\">2ea60beefe6d9bab1a3910785a310bac528723055c7004f3d15eb55a07abfd70</span><br></pre></td></tr></table></figure>\n\n<p>Temporarily, it’s not possible. You can only configure it in BT, test it, and then move the mapped files to the specified NAS folder in the Synology NAS.</p>\n<ol>\n<li><p>First, copy the mapped files to a specific folder on the NAS.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r /www/server/panel/data/compose/pingvin-share/data/ CarlNote@192.168.6.203:/volume2/KingchuxingSSD512G/docker/pingvin-share/data</span><br></pre></td></tr></table></figure>\n\n<p>This is convenient for logging into the Debian ssh, then transferring the folder (or files, the &#x2F;data directory) in batches to the specified folder on the NAS (&#x2F;volume2&#x2F;KingchuxingSSD512G&#x2F;docker&#x2F;pingvin-share&#x2F;). Next time, you can easily transfer the parent directory at once (useful for the initial file migration).</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">Transfer single file from Debian to NAS, update situation, synchronize single file at a time</span></span><br><span class=\"line\">scp docker-compose.yml root@192.168.6.203:/volume2/KingchuxingSSD512G/docker/pingvin-share/</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Similarly, change the NPM to the corresponding 6000 port on the NAS (as per the docker-compose setup).</p>\n</li>\n</ol>\n<h1 id=\"Source-of-Inspiration\"><a href=\"#Source-of-Inspiration\" class=\"headerlink\" title=\"Source of Inspiration\"></a>Source of Inspiration</h1><p><a href=\"https://github.com/stonith404/pingvin-share\">pingvin-share</a></p>\n<p><a href=\"https://cloud.tencent.com/developer/article/2211677\">Fun Docker Project: Pingvin Share - A High Aesthetic and Lightweight File Sharing Tool! Original</a></p>","categories":[{"name":"Docker","path":"api/categories/Docker.json"}],"tags":[{"name":"Docker","path":"api/tags/Docker.json"},{"name":"File Sharing","path":"api/tags/File Sharing.json"},{"name":"Download","path":"api/tags/Download.json"},{"name":"Share","path":"api/tags/Share.json"},{"name":"Cloud Storage","path":"api/tags/Cloud Storage.json"},{"name":"Pingvin Share","path":"api/tags/Pingvin Share.json"},{"name":"NAS","path":"api/tags/NAS.json"}]}