{"title":"Querying Vendor Bills from Sales Orders to Supplier Invoices in NetSuite","slug":"用一个查询从销售订单直通供应商账单-NetSuite","date":"2024-04-19T02:47:35.000Z","updated":"2024-10-25T14:42:55.819Z","comments":true,"path":"api/articles/用一个查询从销售订单直通供应商账单-NetSuite.json","excerpt":" [Figure] Utilizing a query to navigate from sales orders to supplier invoices in NetSuite: From Sales Orders (SO) to Purchase Orders (PO) to Supplier Bills.The following article serves as a demonstration in the SuiteQL Query Tool; its real-world applications can be highly versatile (beyond the scope covered in this article).","covers":["https://img.carlzeng.com:3/i/2024/04/19/6621de6a99a12.png","https://img.carlzeng.com:3/i/2024/04/19/6621e21a9cc93.png","https://img.carlzeng.com:3/i/2024/04/19/6621e4126dfdf.png","https://img.carlzeng.com:3/i/2024/04/19/6621e52a1f8da.png"],"content":"<p><img data-src=\"https://img.carlzeng.com:3/i/2024/04/19/6621de6a99a12.png\" alt=\"image-20240419110043185\"></p>\n<p>Utilizing a query to navigate from sales orders to supplier invoices in NetSuite: From Sales Orders (SO) to Purchase Orders (PO) to Supplier Bills.</p>\n<p>The following article serves as a demonstration in the SuiteQL Query Tool; its real-world applications can be highly versatile (beyond the scope covered in this article).</p>\n<span id=\"more\"></span>\n\n<h1 id=\"How-to-Use\"><a href=\"#How-to-Use\" class=\"headerlink\" title=\"How to Use\"></a>How to Use</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Transaction.ID,</span><br><span class=\"line\">        Transaction.TranDate,</span><br><span class=\"line\">        BUILTIN.DF(Transaction.Type) <span class=\"keyword\">AS</span> Type,</span><br><span class=\"line\">        Transaction.TranID,</span><br><span class=\"line\">        REPLACE(BUILTIN.DF(Transaction.Status), BUILTIN.DF(Transaction.Type) <span class=\"operator\">||</span> <span class=\"string\">&#x27; : &#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>) <span class=\"keyword\">AS</span> Status,</span><br><span class=\"line\">        Transaction.ForeignTotal</span><br><span class=\"line\"> <span class=\"keyword\">FROM</span> Transaction</span><br><span class=\"line\"> <span class=\"keyword\">WHERE</span> Transaction.ID <span class=\"keyword\">IN</span> (</span><br><span class=\"line\">     <span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> TransactionLine.Transaction</span><br><span class=\"line\">     <span class=\"keyword\">FROM</span> TransactionLine</span><br><span class=\"line\">     <span class=\"keyword\">WHERE</span> (TransactionLine.CreatedFrom <span class=\"keyword\">in</span> (</span><br><span class=\"line\">         <span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> TransactionLine.Transaction</span><br><span class=\"line\">         <span class=\"keyword\">FROM</span> TransactionLine</span><br><span class=\"line\">         <span class=\"keyword\">WHERE</span> (TransactionLine.CreatedFrom <span class=\"operator\">=</span> <span class=\"number\">50878826</span>)</span><br><span class=\"line\">     )</span><br><span class=\"line\">     )</span><br><span class=\"line\"> )</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Background\"><a href=\"#Background\" class=\"headerlink\" title=\"Background\"></a>Background</h2><p>Sales Orders (SO) trigger the generation of multiple Purchase Orders (PO) automatically; these settings classify sold items under Special Order or Drop Ship.</p>\n<p>Once the SO is approved, corresponding POs are generated, following the purchasing process, goods reception, prepayments, or ultimately, receiving Supplier Bills. Concurrently, the sales order process continues in the system and reality.</p>\n<p>How can one, starting from the initial Sales Order, query and identify which Supplier Invoices are associated with specific suppliers?</p>\n<p>The provided query accomplishes this:</p>\n<p><img data-src=\"https://img.carlzeng.com:3/i/2024/04/19/6621e21a9cc93.png\" alt=\"image-20240419111639828\"></p>\n<p>This corresponds to multiple processes and transaction orders within the system.</p>\n<h1 id=\"Analyzing-the-Query\"><a href=\"#Analyzing-the-Query\" class=\"headerlink\" title=\"Analyzing the Query\"></a>Analyzing the Query</h1><h2 id=\"Innermost-Nested-Query\"><a href=\"#Innermost-Nested-Query\" class=\"headerlink\" title=\"Innermost Nested Query\"></a>Innermost Nested Query</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> TransactionLine.Transaction</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> TransactionLine</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> (TransactionLine.CreatedFrom <span class=\"operator\">=</span> <span class=\"number\">50878826</span>)</span><br></pre></td></tr></table></figure>\n\n<p>This query identifies which POs are created from a specific Sales Order (50878826). It leverages the linking in NetSuite where PO IDs are associated with the Item list within the SO (accessible via ‘Create PO’).</p>\n<p>The query delves into the transaction’s transaction line table (TransactionLine), specifies the originating SO through TransactionLine.CreatedFrom, and queries the current transaction’s system transaction&#x2F;order ID.</p>\n<p>This query yields 3 PO numbers:</p>\n<p><img data-src=\"https://img.carlzeng.com:3/i/2024/04/19/6621e4126dfdf.png\" alt=\"image-20240419112503073\"></p>\n<h2 id=\"Second-Level-Query\"><a href=\"#Second-Level-Query\" class=\"headerlink\" title=\"Second Level Query\"></a>Second Level Query</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> TransactionLine.Transaction</span><br><span class=\"line\">    <span class=\"keyword\">FROM</span> TransactionLine</span><br><span class=\"line\">    <span class=\"keyword\">WHERE</span> (TransactionLine.CreatedFrom <span class=\"keyword\">in</span> (</span><br><span class=\"line\">        <span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> TransactionLine.Transaction</span><br><span class=\"line\">        <span class=\"keyword\">FROM</span> TransactionLine</span><br><span class=\"line\">        <span class=\"keyword\">WHERE</span> (TransactionLine.CreatedFrom <span class=\"operator\">=</span> <span class=\"number\">50878826</span>)</span><br><span class=\"line\">    )</span><br><span class=\"line\">    )</span><br></pre></td></tr></table></figure>\n\n<p>This query effectively retrieves the Supplier Bills.</p>\n<p>The principle is to query which transactions are created from known POs. As Supplier Bills are created from POs, the two are linked through the CreatedFrom attribute.</p>\n<p><img data-src=\"https://img.carlzeng.com:3/i/2024/04/19/6621e52a1f8da.png\" alt=\"image-20240419112939609\"></p>\n<h2 id=\"Top-level-Query\"><a href=\"#Top-level-Query\" class=\"headerlink\" title=\"Top-level Query\"></a>Top-level Query</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Transaction.ID,</span><br><span class=\"line\">        Transaction.TranDate,</span><br><span class=\"line\">        BUILTIN.DF(Transaction.Type)  <span class=\"keyword\">AS</span> Type,</span><br><span class=\"line\">        Transaction.TranID,</span><br><span class=\"line\">        REPLACE(BUILTIN.DF(Transaction.Status), BUILTIN.DF(Transaction.Type) <span class=\"operator\">||</span> <span class=\"string\">&#x27; : &#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>) <span class=\"keyword\">AS</span> Status,</span><br><span class=\"line\">        Transaction.ForeignTotal</span><br><span class=\"line\"> <span class=\"keyword\">FROM</span> Transaction</span><br><span class=\"line\"> <span class=\"keyword\">WHERE</span> Transaction.ID <span class=\"keyword\">IN</span> (</span><br><span class=\"line\"> <span class=\"comment\">--  ...</span></span><br><span class=\"line\"> )</span><br></pre></td></tr></table></figure>\n\n<p>This top-level query aims to present user-friendly results, potentially with internal NetSuite links (which could lead to further transaction processing via SuiteLet for instance).</p>\n<p>This example demonstrates a highly flexible query application, with infinite possibilities for practical uses. If you have any ideas, feel free to comment or <a href=\"https://calendly.com/carlzeng/30min\">schedule a meeting</a>.</p>\n<h1 id=\"Related-Content\"><a href=\"#Related-Content\" class=\"headerlink\" title=\"Related Content\"></a>Related Content</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.com:3/appsearch?q=netsuite\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"Sources-of-Inspiration\"><a href=\"#Sources-of-Inspiration\" class=\"headerlink\" title=\"Sources of Inspiration\"></a>Sources of Inspiration</h1><p>[NetSuite: SuiteQL and Related Transactions (Revisited)]<a href=\"https://timdietrich.me/blog/netsuite-suiteql-related-transactions-revisited/\">https://timdietrich.me/blog/netsuite-suiteql-related-transactions-revisited/</a>)</p>\n","more":"<h1 id=\"How-to-Use\"><a href=\"#How-to-Use\" class=\"headerlink\" title=\"How to Use\"></a>How to Use</h1><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Transaction.ID,</span><br><span class=\"line\">        Transaction.TranDate,</span><br><span class=\"line\">        BUILTIN.DF(Transaction.Type) <span class=\"keyword\">AS</span> Type,</span><br><span class=\"line\">        Transaction.TranID,</span><br><span class=\"line\">        REPLACE(BUILTIN.DF(Transaction.Status), BUILTIN.DF(Transaction.Type) <span class=\"operator\">||</span> <span class=\"string\">&#x27; : &#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>) <span class=\"keyword\">AS</span> Status,</span><br><span class=\"line\">        Transaction.ForeignTotal</span><br><span class=\"line\"> <span class=\"keyword\">FROM</span> Transaction</span><br><span class=\"line\"> <span class=\"keyword\">WHERE</span> Transaction.ID <span class=\"keyword\">IN</span> (</span><br><span class=\"line\">     <span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> TransactionLine.Transaction</span><br><span class=\"line\">     <span class=\"keyword\">FROM</span> TransactionLine</span><br><span class=\"line\">     <span class=\"keyword\">WHERE</span> (TransactionLine.CreatedFrom <span class=\"keyword\">in</span> (</span><br><span class=\"line\">         <span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> TransactionLine.Transaction</span><br><span class=\"line\">         <span class=\"keyword\">FROM</span> TransactionLine</span><br><span class=\"line\">         <span class=\"keyword\">WHERE</span> (TransactionLine.CreatedFrom <span class=\"operator\">=</span> <span class=\"number\">50878826</span>)</span><br><span class=\"line\">     )</span><br><span class=\"line\">     )</span><br><span class=\"line\"> )</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Background\"><a href=\"#Background\" class=\"headerlink\" title=\"Background\"></a>Background</h2><p>Sales Orders (SO) trigger the generation of multiple Purchase Orders (PO) automatically; these settings classify sold items under Special Order or Drop Ship.</p>\n<p>Once the SO is approved, corresponding POs are generated, following the purchasing process, goods reception, prepayments, or ultimately, receiving Supplier Bills. Concurrently, the sales order process continues in the system and reality.</p>\n<p>How can one, starting from the initial Sales Order, query and identify which Supplier Invoices are associated with specific suppliers?</p>\n<p>The provided query accomplishes this:</p>\n<p><img data-src=\"https://img.carlzeng.com:3/i/2024/04/19/6621e21a9cc93.png\" alt=\"image-20240419111639828\"></p>\n<p>This corresponds to multiple processes and transaction orders within the system.</p>\n<h1 id=\"Analyzing-the-Query\"><a href=\"#Analyzing-the-Query\" class=\"headerlink\" title=\"Analyzing the Query\"></a>Analyzing the Query</h1><h2 id=\"Innermost-Nested-Query\"><a href=\"#Innermost-Nested-Query\" class=\"headerlink\" title=\"Innermost Nested Query\"></a>Innermost Nested Query</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> TransactionLine.Transaction</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> TransactionLine</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> (TransactionLine.CreatedFrom <span class=\"operator\">=</span> <span class=\"number\">50878826</span>)</span><br></pre></td></tr></table></figure>\n\n<p>This query identifies which POs are created from a specific Sales Order (50878826). It leverages the linking in NetSuite where PO IDs are associated with the Item list within the SO (accessible via ‘Create PO’).</p>\n<p>The query delves into the transaction’s transaction line table (TransactionLine), specifies the originating SO through TransactionLine.CreatedFrom, and queries the current transaction’s system transaction&#x2F;order ID.</p>\n<p>This query yields 3 PO numbers:</p>\n<p><img data-src=\"https://img.carlzeng.com:3/i/2024/04/19/6621e4126dfdf.png\" alt=\"image-20240419112503073\"></p>\n<h2 id=\"Second-Level-Query\"><a href=\"#Second-Level-Query\" class=\"headerlink\" title=\"Second Level Query\"></a>Second Level Query</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> TransactionLine.Transaction</span><br><span class=\"line\">    <span class=\"keyword\">FROM</span> TransactionLine</span><br><span class=\"line\">    <span class=\"keyword\">WHERE</span> (TransactionLine.CreatedFrom <span class=\"keyword\">in</span> (</span><br><span class=\"line\">        <span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> TransactionLine.Transaction</span><br><span class=\"line\">        <span class=\"keyword\">FROM</span> TransactionLine</span><br><span class=\"line\">        <span class=\"keyword\">WHERE</span> (TransactionLine.CreatedFrom <span class=\"operator\">=</span> <span class=\"number\">50878826</span>)</span><br><span class=\"line\">    )</span><br><span class=\"line\">    )</span><br></pre></td></tr></table></figure>\n\n<p>This query effectively retrieves the Supplier Bills.</p>\n<p>The principle is to query which transactions are created from known POs. As Supplier Bills are created from POs, the two are linked through the CreatedFrom attribute.</p>\n<p><img data-src=\"https://img.carlzeng.com:3/i/2024/04/19/6621e52a1f8da.png\" alt=\"image-20240419112939609\"></p>\n<h2 id=\"Top-level-Query\"><a href=\"#Top-level-Query\" class=\"headerlink\" title=\"Top-level Query\"></a>Top-level Query</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Transaction.ID,</span><br><span class=\"line\">        Transaction.TranDate,</span><br><span class=\"line\">        BUILTIN.DF(Transaction.Type)  <span class=\"keyword\">AS</span> Type,</span><br><span class=\"line\">        Transaction.TranID,</span><br><span class=\"line\">        REPLACE(BUILTIN.DF(Transaction.Status), BUILTIN.DF(Transaction.Type) <span class=\"operator\">||</span> <span class=\"string\">&#x27; : &#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>) <span class=\"keyword\">AS</span> Status,</span><br><span class=\"line\">        Transaction.ForeignTotal</span><br><span class=\"line\"> <span class=\"keyword\">FROM</span> Transaction</span><br><span class=\"line\"> <span class=\"keyword\">WHERE</span> Transaction.ID <span class=\"keyword\">IN</span> (</span><br><span class=\"line\"> <span class=\"comment\">--  ...</span></span><br><span class=\"line\"> )</span><br></pre></td></tr></table></figure>\n\n<p>This top-level query aims to present user-friendly results, potentially with internal NetSuite links (which could lead to further transaction processing via SuiteLet for instance).</p>\n<p>This example demonstrates a highly flexible query application, with infinite possibilities for practical uses. If you have any ideas, feel free to comment or <a href=\"https://calendly.com/carlzeng/30min\">schedule a meeting</a>.</p>\n<h1 id=\"Related-Content\"><a href=\"#Related-Content\" class=\"headerlink\" title=\"Related Content\"></a>Related Content</h1><iframe style=\"box-shadow: 0px 0px 20px -10px;\" src=\"https://query.carlzeng.com:3/appsearch?q=netsuite\" frameborder=\"0\" scrolling=\"auto\" width=\"100%\" height=\"500\"></iframe>\n\n<h1 id=\"Sources-of-Inspiration\"><a href=\"#Sources-of-Inspiration\" class=\"headerlink\" title=\"Sources of Inspiration\"></a>Sources of Inspiration</h1><p>[NetSuite: SuiteQL and Related Transactions (Revisited)]<a href=\"https://timdietrich.me/blog/netsuite-suiteql-related-transactions-revisited/\">https://timdietrich.me/blog/netsuite-suiteql-related-transactions-revisited/</a>)</p>","categories":[{"name":"NetSuite","path":"api/categories/NetSuite.json"}],"tags":[{"name":"NetSuite","path":"api/tags/NetSuite.json"},{"name":"query","path":"api/tags/query.json"},{"name":"SQL","path":"api/tags/SQL.json"}]}